
MotorMovements.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  0000141c  000014b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000141c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  00800162  00800162  00001512  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001512  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001570  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000015b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000de7  00000000  00000000  00001678  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ada  00000000  00000000  0000245f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000084e  00000000  00000000  00002f39  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d8  00000000  00000000  00003788  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ce  00000000  00000000  00003a60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000806  00000000  00000000  0000402e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00004834  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	39 c0       	rjmp	.+114    	; 0x74 <__ctors_end>
       2:	00 00       	nop
       4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
       6:	00 00       	nop
       8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
       a:	00 00       	nop
       c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
       e:	00 00       	nop
      10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
      12:	00 00       	nop
      14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
      16:	00 00       	nop
      18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
      1a:	00 00       	nop
      1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
      1e:	00 00       	nop
      20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
      22:	00 00       	nop
      24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
      26:	00 00       	nop
      28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
      2e:	00 00       	nop
      30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
      32:	00 00       	nop
      34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
      36:	00 00       	nop
      38:	51 c1       	rjmp	.+674    	; 0x2dc <__vector_14>
      3a:	00 00       	nop
      3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
      3e:	00 00       	nop
      40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
      42:	00 00       	nop
      44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
      46:	00 00       	nop
      48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
      4e:	00 00       	nop
      50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
      52:	00 00       	nop
      54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
      56:	00 00       	nop
      58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
      5a:	00 00       	nop
      5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
      5e:	00 00       	nop
      60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
      62:	00 00       	nop
      64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
	...

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	11 e0       	ldi	r17, 0x01	; 1
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	ec e1       	ldi	r30, 0x1C	; 28
      88:	f4 e1       	ldi	r31, 0x14	; 20
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a2 36       	cpi	r26, 0x62	; 98
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	21 e0       	ldi	r18, 0x01	; 1
      98:	a2 e6       	ldi	r26, 0x62	; 98
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a3 38       	cpi	r26, 0x83	; 131
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	1a d0       	rcall	.+52     	; 0xdc <main>
      a8:	0c 94 0c 0a 	jmp	0x1418	; 0x1418 <_exit>

000000ac <__bad_interrupt>:
      ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <clear_buffer>:
#include <string.h>

char tbuffer[25];

void clear_buffer(char *tbuffer)
{
      ae:	fc 01       	movw	r30, r24
      b0:	49 96       	adiw	r24, 0x19	; 25
	for (unsigned char i=0; i < 25; i++)
	{
		tbuffer[i] = '\0';
      b2:	11 92       	st	Z+, r1

char tbuffer[25];

void clear_buffer(char *tbuffer)
{
	for (unsigned char i=0; i < 25; i++)
      b4:	e8 17       	cp	r30, r24
      b6:	f9 07       	cpc	r31, r25
      b8:	e1 f7       	brne	.-8      	; 0xb2 <clear_buffer+0x4>
	{
		tbuffer[i] = '\0';
	}
}
      ba:	08 95       	ret

000000bc <move_motors_to_target>:

unsigned char tDegrees[5] = {SERVO_BASE_START, SERVO_SHOULDER_START, SERVO_ELBOW_START, SERVO_WRIST_START, 0};

void move_motors_to_target()
{
	while(!servo_allMotorsAtTarget(tDegrees))
      bc:	09 c0       	rjmp	.+18     	; 0xd0 <move_motors_to_target+0x14>
	{
		servo_moveOneStepToTarget(tDegrees);
      be:	80 e0       	ldi	r24, 0x00	; 0
      c0:	91 e0       	ldi	r25, 0x01	; 1
      c2:	43 d2       	rcall	.+1158   	; 0x54a <servo_moveOneStepToTarget>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      c4:	8f e5       	ldi	r24, 0x5F	; 95
      c6:	9a ee       	ldi	r25, 0xEA	; 234
      c8:	01 97       	sbiw	r24, 0x01	; 1
      ca:	f1 f7       	brne	.-4      	; 0xc8 <move_motors_to_target+0xc>
      cc:	00 c0       	rjmp	.+0      	; 0xce <move_motors_to_target+0x12>
      ce:	00 00       	nop

unsigned char tDegrees[5] = {SERVO_BASE_START, SERVO_SHOULDER_START, SERVO_ELBOW_START, SERVO_WRIST_START, 0};

void move_motors_to_target()
{
	while(!servo_allMotorsAtTarget(tDegrees))
      d0:	80 e0       	ldi	r24, 0x00	; 0
      d2:	91 e0       	ldi	r25, 0x01	; 1
      d4:	9f d1       	rcall	.+830    	; 0x414 <servo_allMotorsAtTarget>
      d6:	88 23       	and	r24, r24
      d8:	91 f3       	breq	.-28     	; 0xbe <move_motors_to_target+0x2>
	{
		servo_moveOneStepToTarget(tDegrees);
		_delay_ms(DELAY_TIME);
	}
}
      da:	08 95       	ret

000000dc <main>:

int main(void)
{
	uart_init();
      dc:	04 d3       	rcall	.+1544   	; 0x6e6 <uart_init>
	servo_init();
      de:	f6 d0       	rcall	.+492    	; 0x2cc <servo_init>
      e0:	2f ef       	ldi	r18, 0xFF	; 255
      e2:	81 ee       	ldi	r24, 0xE1	; 225
      e4:	94 e0       	ldi	r25, 0x04	; 4
      e6:	21 50       	subi	r18, 0x01	; 1
      e8:	80 40       	sbci	r24, 0x00	; 0
      ea:	90 40       	sbci	r25, 0x00	; 0
      ec:	e1 f7       	brne	.-8      	; 0xe6 <main+0xa>
      ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0x14>
      f0:	00 00       	nop
	_delay_ms(100);
	
	sei();
      f2:	78 94       	sei
	
	servo_moveToStartPosition();
      f4:	98 d2       	rcall	.+1328   	; 0x626 <servo_moveToStartPosition>
      f6:	0f 2e       	mov	r0, r31
	unsigned char continueFlag = 0;	

	while(1)
    {
		clear_buffer(tbuffer);
      f8:	f4 e6       	ldi	r31, 0x64	; 100
      fa:	ef 2e       	mov	r14, r31
      fc:	f1 e0       	ldi	r31, 0x01	; 1
      fe:	ff 2e       	mov	r15, r31
     100:	f0 2d       	mov	r31, r0
     102:	c7 e1       	ldi	r28, 0x17	; 23
		continueFlag = 0;
		
		for (unsigned char i = 0;i < 18; i++)
		{
			if(scanf("%c", &tbuffer[i]) != 1)
     104:	d1 e0       	ldi	r29, 0x01	; 1
     106:	0f 2e       	mov	r0, r31
			//printf("\n\rError in Bracket Position\n\r");
			continue;
		}
			
		//Read Values and save them in Array
		sscanf(tbuffer,"%*c%3u%*c%3u%*c%3u%*c%3u%*c%*c",&tDegrees[0], &tDegrees[1], &tDegrees[2], &tDegrees[3]);
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	cf 2e       	mov	r12, r31
     10c:	f1 e0       	ldi	r31, 0x01	; 1
     10e:	df 2e       	mov	r13, r31
     110:	f0 2d       	mov	r31, r0
     112:	0f 2e       	mov	r0, r31
     114:	f2 e4       	ldi	r31, 0x42	; 66
     116:	2f 2e       	mov	r2, r31
     118:	f1 e0       	ldi	r31, 0x01	; 1
     11a:	3f 2e       	mov	r3, r31
     11c:	f0 2d       	mov	r31, r0
     11e:	0f 2e       	mov	r0, r31
					break;
				}
				//Get Position (Print position)
				else if(tbuffer[0] == 'G')
				{
					printf("[%3u;%3u;%3u;%3u;]\n\r", servo_get(0), servo_get(1), servo_get(2), servo_get(3));
     120:	fd e2       	ldi	r31, 0x2D	; 45
     122:	4f 2e       	mov	r4, r31
     124:	f1 e0       	ldi	r31, 0x01	; 1
     126:	5f 2e       	mov	r5, r31
     128:	f0 2d       	mov	r31, r0
     12a:	0f 2e       	mov	r0, r31
			if(i == 0)
			{
				//Reset Position
				if(tbuffer[0] == 'R')
				{
					printf("esetting motors.\n\r");
     12c:	fa e1       	ldi	r31, 0x1A	; 26
     12e:	6f 2e       	mov	r6, r31
     130:	f1 e0       	ldi	r31, 0x01	; 1
     132:	7f 2e       	mov	r7, r31
     134:	f0 2d       	mov	r31, r0
	servo_moveToStartPosition();
	unsigned char continueFlag = 0;	

	while(1)
    {
		clear_buffer(tbuffer);
     136:	c7 01       	movw	r24, r14
     138:	ba df       	rcall	.-140    	; 0xae <clear_buffer>
     13a:	0f 2e       	mov	r0, r31
     13c:	f4 e6       	ldi	r31, 0x64	; 100
     13e:	af 2e       	mov	r10, r31
     140:	f1 e0       	ldi	r31, 0x01	; 1
     142:	bf 2e       	mov	r11, r31
     144:	f0 2d       	mov	r31, r0
     146:	91 2c       	mov	r9, r1
		continueFlag = 0;
		
		for (unsigned char i = 0;i < 18; i++)
     148:	bf 92       	push	r11
		{
			if(scanf("%c", &tbuffer[i]) != 1)
     14a:	af 92       	push	r10
     14c:	df 93       	push	r29
     14e:	cf 93       	push	r28
     150:	c4 d3       	rcall	.+1928   	; 0x8da <scanf>
     152:	0f 90       	pop	r0
     154:	0f 90       	pop	r0
     156:	0f 90       	pop	r0
     158:	0f 90       	pop	r0
     15a:	01 97       	sbiw	r24, 0x01	; 1
     15c:	11 f0       	breq	.+4      	; 0x162 <main+0x86>
			{
				uart_error();
     15e:	dc d2       	rcall	.+1464   	; 0x718 <uart_error>
     160:	ea cf       	rjmp	.-44     	; 0x136 <main+0x5a>
				//printf("\n\rError reading letter\n\r");
				
				continueFlag = 1;
				break;
     162:	91 10       	cpse	r9, r1
			}
			
			if(i == 0)
     164:	33 c0       	rjmp	.+102    	; 0x1cc <main+0xf0>
     166:	f7 01       	movw	r30, r14
			{
				//Reset Position
				if(tbuffer[0] == 'R')
     168:	80 81       	ld	r24, Z
     16a:	82 35       	cpi	r24, 0x52	; 82
				{
					printf("esetting motors.\n\r");
     16c:	39 f4       	brne	.+14     	; 0x17c <main+0xa0>
     16e:	7f 92       	push	r7
     170:	6f 92       	push	r6
     172:	a0 d3       	rcall	.+1856   	; 0x8b4 <printf>
					servo_moveToStartPosition();
     174:	58 d2       	rcall	.+1200   	; 0x626 <servo_moveToStartPosition>
					//printf("Reached destination.\n\r");
					//printf("[%3u][%3u][%3u][%3u]\n\r", servo_get_base(), servo_get_shoulder(), servo_get_elbow(), servo_get_wrist());
					
					continueFlag = 1;
					break;
     176:	0f 90       	pop	r0
     178:	0f 90       	pop	r0
				}
				//Get Position (Print position)
				else if(tbuffer[0] == 'G')
     17a:	dd cf       	rjmp	.-70     	; 0x136 <main+0x5a>
     17c:	87 34       	cpi	r24, 0x47	; 71
				{
					printf("[%3u;%3u;%3u;%3u;]\n\r", servo_get(0), servo_get(1), servo_get(2), servo_get(3));
     17e:	11 f5       	brne	.+68     	; 0x1c4 <main+0xe8>
     180:	83 e0       	ldi	r24, 0x03	; 3
     182:	1f d1       	rcall	.+574    	; 0x3c2 <servo_get>
     184:	98 2e       	mov	r9, r24
     186:	89 2e       	mov	r8, r25
     188:	82 e0       	ldi	r24, 0x02	; 2
     18a:	1b d1       	rcall	.+566    	; 0x3c2 <servo_get>
     18c:	b8 2e       	mov	r11, r24
     18e:	a9 2e       	mov	r10, r25
     190:	81 e0       	ldi	r24, 0x01	; 1
     192:	17 d1       	rcall	.+558    	; 0x3c2 <servo_get>
     194:	18 2f       	mov	r17, r24
     196:	09 2f       	mov	r16, r25
     198:	80 e0       	ldi	r24, 0x00	; 0
     19a:	13 d1       	rcall	.+550    	; 0x3c2 <servo_get>
     19c:	8f 92       	push	r8
     19e:	9f 92       	push	r9
     1a0:	af 92       	push	r10
     1a2:	bf 92       	push	r11
     1a4:	0f 93       	push	r16
     1a6:	1f 93       	push	r17
     1a8:	9f 93       	push	r25
     1aa:	8f 93       	push	r24
     1ac:	5f 92       	push	r5
     1ae:	4f 92       	push	r4
     1b0:	81 d3       	rcall	.+1794   	; 0x8b4 <printf>
     1b2:	8d b7       	in	r24, 0x3d	; 61
					
					continueFlag = 1;
					break;
     1b4:	9e b7       	in	r25, 0x3e	; 62
     1b6:	0a 96       	adiw	r24, 0x0a	; 10
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	f8 94       	cli
     1bc:	9e bf       	out	0x3e, r25	; 62
     1be:	0f be       	out	0x3f, r0	; 63
     1c0:	8d bf       	out	0x3d, r24	; 61
     1c2:	b9 cf       	rjmp	.-142    	; 0x136 <main+0x5a>
     1c4:	8b 35       	cpi	r24, 0x5B	; 91
				}
				//Error
				else if(tbuffer[0] != '[')
     1c6:	09 f4       	brne	.+2      	; 0x1ca <main+0xee>
     1c8:	6a c0       	rjmp	.+212    	; 0x29e <main+0x1c2>
     1ca:	b5 cf       	rjmp	.-150    	; 0x136 <main+0x5a>
     1cc:	f5 01       	movw	r30, r10
					break;
				}
			}
			
			//Invalid number or char
			if(tbuffer[i] != '[' && tbuffer[i] != ']' && tbuffer[i] != ';' && (tbuffer[i] < 48 || tbuffer[i] > 57))
     1ce:	80 81       	ld	r24, Z
     1d0:	ff ef       	ldi	r31, 0xFF	; 255
     1d2:	af 1a       	sub	r10, r31
     1d4:	bf 0a       	sbc	r11, r31
     1d6:	8b 35       	cpi	r24, 0x5B	; 91
     1d8:	41 f0       	breq	.+16     	; 0x1ea <main+0x10e>
     1da:	8d 35       	cpi	r24, 0x5D	; 93
     1dc:	31 f0       	breq	.+12     	; 0x1ea <main+0x10e>
     1de:	8b 33       	cpi	r24, 0x3B	; 59
     1e0:	21 f0       	breq	.+8      	; 0x1ea <main+0x10e>
     1e2:	80 53       	subi	r24, 0x30	; 48
     1e4:	8a 30       	cpi	r24, 0x0A	; 10
     1e6:	08 f0       	brcs	.+2      	; 0x1ea <main+0x10e>
     1e8:	a6 cf       	rjmp	.-180    	; 0x136 <main+0x5a>
     1ea:	93 94       	inc	r9
	while(1)
    {
		clear_buffer(tbuffer);
		continueFlag = 0;
		
		for (unsigned char i = 0;i < 18; i++)
     1ec:	22 e1       	ldi	r18, 0x12	; 18
     1ee:	92 12       	cpse	r9, r18
     1f0:	ab cf       	rjmp	.-170    	; 0x148 <main+0x6c>
     1f2:	4a c0       	rjmp	.+148    	; 0x288 <main+0x1ac>
     1f4:	f7 01       	movw	r30, r14
			//printf("\n\rError in Buffer Length\n\r");
			continue;
		}
			
		//Test Brackets Positioning
		if(tbuffer[0] != '[' || tbuffer[4] != ';' || tbuffer[8] != ';' || tbuffer[12] != ';' || tbuffer[16] != ';'|| tbuffer[17] != ']')
     1f6:	80 81       	ld	r24, Z
     1f8:	8b 35       	cpi	r24, 0x5B	; 91
     1fa:	09 f0       	breq	.+2      	; 0x1fe <main+0x122>
     1fc:	9c cf       	rjmp	.-200    	; 0x136 <main+0x5a>
     1fe:	84 81       	ldd	r24, Z+4	; 0x04
     200:	8b 33       	cpi	r24, 0x3B	; 59
     202:	09 f0       	breq	.+2      	; 0x206 <main+0x12a>
     204:	98 cf       	rjmp	.-208    	; 0x136 <main+0x5a>
     206:	80 85       	ldd	r24, Z+8	; 0x08
     208:	8b 33       	cpi	r24, 0x3B	; 59
     20a:	09 f0       	breq	.+2      	; 0x20e <main+0x132>
     20c:	94 cf       	rjmp	.-216    	; 0x136 <main+0x5a>
     20e:	84 85       	ldd	r24, Z+12	; 0x0c
     210:	8b 33       	cpi	r24, 0x3B	; 59
     212:	09 f0       	breq	.+2      	; 0x216 <main+0x13a>
     214:	90 cf       	rjmp	.-224    	; 0x136 <main+0x5a>
     216:	80 89       	ldd	r24, Z+16	; 0x10
     218:	8b 33       	cpi	r24, 0x3B	; 59
     21a:	09 f0       	breq	.+2      	; 0x21e <main+0x142>
     21c:	8c cf       	rjmp	.-232    	; 0x136 <main+0x5a>
     21e:	81 89       	ldd	r24, Z+17	; 0x11
     220:	8d 35       	cpi	r24, 0x5D	; 93
     222:	09 f0       	breq	.+2      	; 0x226 <main+0x14a>
     224:	88 cf       	rjmp	.-240    	; 0x136 <main+0x5a>
     226:	83 e0       	ldi	r24, 0x03	; 3
			//printf("\n\rError in Bracket Position\n\r");
			continue;
		}
			
		//Read Values and save them in Array
		sscanf(tbuffer,"%*c%3u%*c%3u%*c%3u%*c%3u%*c%*c",&tDegrees[0], &tDegrees[1], &tDegrees[2], &tDegrees[3]);
     228:	91 e0       	ldi	r25, 0x01	; 1
     22a:	9f 93       	push	r25
     22c:	8f 93       	push	r24
     22e:	82 e0       	ldi	r24, 0x02	; 2
     230:	91 e0       	ldi	r25, 0x01	; 1
     232:	9f 93       	push	r25
     234:	8f 93       	push	r24
     236:	81 e0       	ldi	r24, 0x01	; 1
     238:	91 e0       	ldi	r25, 0x01	; 1
     23a:	9f 93       	push	r25
     23c:	8f 93       	push	r24
     23e:	df 92       	push	r13
     240:	cf 92       	push	r12
     242:	3f 92       	push	r3
     244:	2f 92       	push	r2
     246:	ff 92       	push	r15
     248:	ef 92       	push	r14
     24a:	5a d3       	rcall	.+1716   	; 0x900 <sscanf>
     24c:	8d b7       	in	r24, 0x3d	; 61
		
		if((tDegrees[0] < SERVO_BASE_MIN || tDegrees[0] > SERVO_BASE_MAX) || (tDegrees[1] < SERVO_SHOULDER_MIN || tDegrees[1] > SERVO_SHOULDER_MAX) 
     24e:	9e b7       	in	r25, 0x3e	; 62
     250:	0c 96       	adiw	r24, 0x0c	; 12
     252:	0f b6       	in	r0, 0x3f	; 63
     254:	f8 94       	cli
     256:	9e bf       	out	0x3e, r25	; 62
     258:	0f be       	out	0x3f, r0	; 63
     25a:	8d bf       	out	0x3d, r24	; 61
     25c:	f6 01       	movw	r30, r12
     25e:	80 81       	ld	r24, Z
     260:	85 3b       	cpi	r24, 0xB5	; 181
     262:	08 f0       	brcs	.+2      	; 0x266 <main+0x18a>
     264:	68 cf       	rjmp	.-304    	; 0x136 <main+0x5a>
     266:	81 81       	ldd	r24, Z+1	; 0x01
     268:	8d 52       	subi	r24, 0x2D	; 45
     26a:	84 37       	cpi	r24, 0x74	; 116
     26c:	08 f0       	brcs	.+2      	; 0x270 <main+0x194>
     26e:	63 cf       	rjmp	.-314    	; 0x136 <main+0x5a>
		|| (tDegrees[2] < SERVO_ELBOW_MIN || tDegrees[2] > SERVO_ELBOW_MAX) || (tDegrees[3] < SERVO_WRIST_MIN || tDegrees[3] > SERVO_WRIST_MAX))
     270:	82 81       	ldd	r24, Z+2	; 0x02
     272:	8d 52       	subi	r24, 0x2D	; 45
     274:	84 37       	cpi	r24, 0x74	; 116
     276:	08 f0       	brcs	.+2      	; 0x27a <main+0x19e>
     278:	5e cf       	rjmp	.-324    	; 0x136 <main+0x5a>
     27a:	83 81       	ldd	r24, Z+3	; 0x03
     27c:	8d 52       	subi	r24, 0x2D	; 45
     27e:	88 38       	cpi	r24, 0x88	; 136
     280:	08 f0       	brcs	.+2      	; 0x284 <main+0x1a8>
     282:	59 cf       	rjmp	.-334    	; 0x136 <main+0x5a>
		{
			//printf("\n\rError in Limits\n\r");
			continue;
		}
		
		move_motors_to_target();
     284:	1b df       	rcall	.-458    	; 0xbc <move_motors_to_target>
     286:	57 cf       	rjmp	.-338    	; 0x136 <main+0x5a>
     288:	f7 01       	movw	r30, r14
		
		if(continueFlag)
			continue;
		
		//Check length data
		if(strlen(tbuffer) != 18)
     28a:	01 90       	ld	r0, Z+
     28c:	00 20       	and	r0, r0
     28e:	e9 f7       	brne	.-6      	; 0x28a <main+0x1ae>
     290:	e7 57       	subi	r30, 0x77	; 119
     292:	f1 40       	sbci	r31, 0x01	; 1
     294:	09 f0       	breq	.+2      	; 0x298 <main+0x1bc>
     296:	4f cf       	rjmp	.-354    	; 0x136 <main+0x5a>
     298:	ad cf       	rjmp	.-166    	; 0x1f4 <main+0x118>
     29a:	93 94       	inc	r9
	while(1)
    {
		clear_buffer(tbuffer);
		continueFlag = 0;
		
		for (unsigned char i = 0;i < 18; i++)
     29c:	55 cf       	rjmp	.-342    	; 0x148 <main+0x6c>
     29e:	f5 01       	movw	r30, r10
					break;
				}
			}
			
			//Invalid number or char
			if(tbuffer[i] != '[' && tbuffer[i] != ']' && tbuffer[i] != ';' && (tbuffer[i] < 48 || tbuffer[i] > 57))
     2a0:	80 81       	ld	r24, Z
     2a2:	ff ef       	ldi	r31, 0xFF	; 255
     2a4:	af 1a       	sub	r10, r31
     2a6:	bf 0a       	sbc	r11, r31
     2a8:	8b 35       	cpi	r24, 0x5B	; 91
     2aa:	09 f0       	breq	.+2      	; 0x2ae <main+0x1d2>
     2ac:	96 cf       	rjmp	.-212    	; 0x1da <main+0xfe>
     2ae:	f5 cf       	rjmp	.-22     	; 0x29a <main+0x1be>

000002b0 <timer0_init>:
     2b0:	84 b5       	in	r24, 0x24	; 36
}

int convert_motorsteps_to_degrees(int motorsteps)
{
	return (motorsteps * 9UL) / 10UL;
}
     2b2:	82 60       	ori	r24, 0x02	; 2
     2b4:	84 bd       	out	0x24, r24	; 36
     2b6:	85 b5       	in	r24, 0x25	; 37
     2b8:	82 60       	ori	r24, 0x02	; 2
     2ba:	85 bd       	out	0x25, r24	; 37
     2bc:	83 e1       	ldi	r24, 0x13	; 19
     2be:	87 bd       	out	0x27, r24	; 39
     2c0:	ee e6       	ldi	r30, 0x6E	; 110
     2c2:	f0 e0       	ldi	r31, 0x00	; 0
     2c4:	80 81       	ld	r24, Z
     2c6:	82 60       	ori	r24, 0x02	; 2
     2c8:	80 83       	st	Z, r24
     2ca:	08 95       	ret

000002cc <servo_init>:
     2cc:	23 9a       	sbi	0x04, 3	; 4
     2ce:	22 9a       	sbi	0x04, 2	; 4
     2d0:	21 9a       	sbi	0x04, 1	; 4
     2d2:	56 9a       	sbi	0x0a, 6	; 10
     2d4:	55 9a       	sbi	0x0a, 5	; 10
     2d6:	ec df       	rcall	.-40     	; 0x2b0 <timer0_init>
     2d8:	78 94       	sei
     2da:	08 95       	ret

000002dc <__vector_14>:

static volatile unsigned int pwm_cycle = 0;
static volatile unsigned char motor_vals[] = { ((SERVO_BASE_START * 10UL) / 9UL), ((SERVO_SHOULDER_START * 10UL) / 9UL), ((SERVO_ELBOW_START * 10UL) / 9UL), ((SERVO_WRIST_START * 10UL) / 9UL)};

ISR(TIMER0_COMPA_vect)
{
     2dc:	1f 92       	push	r1
     2de:	0f 92       	push	r0
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	0f 92       	push	r0
     2e4:	11 24       	eor	r1, r1
     2e6:	2f 93       	push	r18
     2e8:	3f 93       	push	r19
     2ea:	4f 93       	push	r20
     2ec:	8f 93       	push	r24
     2ee:	9f 93       	push	r25
	// End of cycle
	if(pwm_cycle++ > 2000)
     2f0:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     2f4:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     2f8:	9c 01       	movw	r18, r24
     2fa:	2f 5f       	subi	r18, 0xFF	; 255
     2fc:	3f 4f       	sbci	r19, 0xFF	; 255
     2fe:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
     302:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
     306:	81 3d       	cpi	r24, 0xD1	; 209
     308:	97 40       	sbci	r25, 0x07	; 7
     30a:	48 f0       	brcs	.+18     	; 0x31e <__vector_14+0x42>
	{
		SERVO_BASE_PORT &= ~(1<<SERVO_BASE);
     30c:	2b 98       	cbi	0x05, 3	; 5
		SERVO_SHOULDER_PORT &= ~(1<<SERVO_SHOULDER);
     30e:	2a 98       	cbi	0x05, 2	; 5
		SERVO_ELBOW_PORT &= ~(1<<SERVO_ELBOW);
     310:	29 98       	cbi	0x05, 1	; 5
		SERVO_WRIST_PORT &= ~(1<<SERVO_WRIST);
     312:	5e 98       	cbi	0x0b, 6	; 11
		SERVO_CAM_PORT &= ~(1<<SERVO_CAM);
     314:	5d 98       	cbi	0x0b, 5	; 11
		pwm_cycle = 0;
     316:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <__data_end+0x1>
     31a:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <__data_end>
	}
	//1750 to 2000 => Control pulse
	if(pwm_cycle > 1750)
     31e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     322:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     326:	87 3d       	cpi	r24, 0xD7	; 215
     328:	96 40       	sbci	r25, 0x06	; 6
     32a:	08 f4       	brcc	.+2      	; 0x32e <__vector_14+0x52>
     32c:	40 c0       	rjmp	.+128    	; 0x3ae <__vector_14+0xd2>
	{
		if(pwm_cycle > 1950 - motor_vals[0])
     32e:	40 91 05 01 	lds	r20, 0x0105	; 0x800105 <motor_vals>
     332:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
     336:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
     33a:	8e e9       	ldi	r24, 0x9E	; 158
     33c:	97 e0       	ldi	r25, 0x07	; 7
     33e:	84 1b       	sub	r24, r20
     340:	91 09       	sbc	r25, r1
     342:	82 17       	cp	r24, r18
     344:	93 07       	cpc	r25, r19
     346:	08 f4       	brcc	.+2      	; 0x34a <__vector_14+0x6e>
		{
			SERVO_BASE_PORT |= (1<<SERVO_BASE);
     348:	2b 9a       	sbi	0x05, 3	; 5
		}
		if(pwm_cycle > 1950 - motor_vals[1])
     34a:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <motor_vals+0x1>
     34e:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
     352:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
     356:	8e e9       	ldi	r24, 0x9E	; 158
     358:	97 e0       	ldi	r25, 0x07	; 7
     35a:	84 1b       	sub	r24, r20
     35c:	91 09       	sbc	r25, r1
     35e:	82 17       	cp	r24, r18
     360:	93 07       	cpc	r25, r19
     362:	08 f4       	brcc	.+2      	; 0x366 <__vector_14+0x8a>
		{
			SERVO_SHOULDER_PORT |= (1<<SERVO_SHOULDER);
     364:	2a 9a       	sbi	0x05, 2	; 5
		}
		if(pwm_cycle > 1950 - motor_vals[2])
     366:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <motor_vals+0x2>
     36a:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
     36e:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
     372:	8e e9       	ldi	r24, 0x9E	; 158
     374:	97 e0       	ldi	r25, 0x07	; 7
     376:	84 1b       	sub	r24, r20
     378:	91 09       	sbc	r25, r1
     37a:	82 17       	cp	r24, r18
     37c:	93 07       	cpc	r25, r19
     37e:	08 f4       	brcc	.+2      	; 0x382 <__vector_14+0xa6>
		{
			SERVO_ELBOW_PORT |= (1<<SERVO_ELBOW);
     380:	29 9a       	sbi	0x05, 1	; 5
		}
		if(pwm_cycle > 1950 - motor_vals[3])
     382:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <motor_vals+0x3>
     386:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
     38a:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
     38e:	8e e9       	ldi	r24, 0x9E	; 158
     390:	97 e0       	ldi	r25, 0x07	; 7
     392:	84 1b       	sub	r24, r20
     394:	91 09       	sbc	r25, r1
     396:	82 17       	cp	r24, r18
     398:	93 07       	cpc	r25, r19
     39a:	08 f4       	brcc	.+2      	; 0x39e <__vector_14+0xc2>
		{
			SERVO_WRIST_PORT |= (1<<SERVO_WRIST);
     39c:	5e 9a       	sbi	0x0b, 6	; 11
		}
		if(pwm_cycle > 1845)
     39e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     3a2:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     3a6:	86 33       	cpi	r24, 0x36	; 54
     3a8:	97 40       	sbci	r25, 0x07	; 7
     3aa:	08 f0       	brcs	.+2      	; 0x3ae <__vector_14+0xd2>
		{
			SERVO_CAM_PORT |= (1<<SERVO_CAM);
     3ac:	5d 9a       	sbi	0x0b, 5	; 11
		}
	}
	
}
     3ae:	9f 91       	pop	r25
     3b0:	8f 91       	pop	r24
     3b2:	4f 91       	pop	r20
     3b4:	3f 91       	pop	r19
     3b6:	2f 91       	pop	r18
     3b8:	0f 90       	pop	r0
     3ba:	0f be       	out	0x3f, r0	; 63
     3bc:	0f 90       	pop	r0
     3be:	1f 90       	pop	r1
     3c0:	18 95       	reti

000003c2 <servo_get>:

unsigned int servo_get(unsigned char id)
{
     3c2:	0f 93       	push	r16
     3c4:	1f 93       	push	r17
	return convert_motorsteps_to_degrees(motor_vals[id]);
     3c6:	e8 2f       	mov	r30, r24
     3c8:	f0 e0       	ldi	r31, 0x00	; 0
     3ca:	eb 5f       	subi	r30, 0xFB	; 251
     3cc:	fe 4f       	sbci	r31, 0xFE	; 254
     3ce:	80 81       	ld	r24, Z
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	a0 e0       	ldi	r26, 0x00	; 0
     3d4:	b0 e0       	ldi	r27, 0x00	; 0
     3d6:	ac 01       	movw	r20, r24
     3d8:	bd 01       	movw	r22, r26
     3da:	44 0f       	add	r20, r20
     3dc:	55 1f       	adc	r21, r21
     3de:	66 1f       	adc	r22, r22
     3e0:	77 1f       	adc	r23, r23
     3e2:	44 0f       	add	r20, r20
     3e4:	55 1f       	adc	r21, r21
     3e6:	66 1f       	adc	r22, r22
     3e8:	77 1f       	adc	r23, r23
     3ea:	44 0f       	add	r20, r20
     3ec:	55 1f       	adc	r21, r21
     3ee:	66 1f       	adc	r22, r22
     3f0:	77 1f       	adc	r23, r23
     3f2:	8a 01       	movw	r16, r20
     3f4:	9b 01       	movw	r18, r22
     3f6:	08 0f       	add	r16, r24
     3f8:	19 1f       	adc	r17, r25
     3fa:	2a 1f       	adc	r18, r26
     3fc:	3b 1f       	adc	r19, r27
     3fe:	c9 01       	movw	r24, r18
     400:	b8 01       	movw	r22, r16
     402:	2a e0       	ldi	r18, 0x0A	; 10
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	40 e0       	ldi	r20, 0x00	; 0
     408:	50 e0       	ldi	r21, 0x00	; 0
     40a:	93 d1       	rcall	.+806    	; 0x732 <__udivmodsi4>
}
     40c:	c9 01       	movw	r24, r18
     40e:	1f 91       	pop	r17
     410:	0f 91       	pop	r16
     412:	08 95       	ret

00000414 <servo_allMotorsAtTarget>:

unsigned char servo_allMotorsAtTarget(unsigned char targetDagrees[])
{
     414:	2f 92       	push	r2
     416:	3f 92       	push	r3
     418:	4f 92       	push	r4
     41a:	5f 92       	push	r5
     41c:	6f 92       	push	r6
     41e:	7f 92       	push	r7
     420:	8f 92       	push	r8
     422:	9f 92       	push	r9
     424:	af 92       	push	r10
     426:	bf 92       	push	r11
     428:	cf 92       	push	r12
     42a:	df 92       	push	r13
     42c:	ef 92       	push	r14
     42e:	ff 92       	push	r15
     430:	0f 93       	push	r16
     432:	1f 93       	push	r17
     434:	cf 93       	push	r28
     436:	df 93       	push	r29
     438:	1c 01       	movw	r2, r24
	for (unsigned char i = 0; i < 4; i++)
	{
		if(motor_vals[i] != convert_degrees_to_motorsteps(targetDagrees[i]))
     43a:	c0 91 05 01 	lds	r28, 0x0105	; 0x800105 <motor_vals>
     43e:	d0 e0       	ldi	r29, 0x00	; 0
     440:	fc 01       	movw	r30, r24
     442:	80 81       	ld	r24, Z
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	a0 e0       	ldi	r26, 0x00	; 0
     448:	b0 e0       	ldi	r27, 0x00	; 0
     44a:	88 0f       	add	r24, r24
     44c:	99 1f       	adc	r25, r25
     44e:	aa 1f       	adc	r26, r26
     450:	bb 1f       	adc	r27, r27
     452:	ac 01       	movw	r20, r24
     454:	bd 01       	movw	r22, r26
     456:	44 0f       	add	r20, r20
     458:	55 1f       	adc	r21, r21
     45a:	66 1f       	adc	r22, r22
     45c:	77 1f       	adc	r23, r23
     45e:	44 0f       	add	r20, r20
     460:	55 1f       	adc	r21, r21
     462:	66 1f       	adc	r22, r22
     464:	77 1f       	adc	r23, r23
     466:	8c 01       	movw	r16, r24
     468:	9d 01       	movw	r18, r26
     46a:	04 0f       	add	r16, r20
     46c:	15 1f       	adc	r17, r21
     46e:	26 1f       	adc	r18, r22
     470:	37 1f       	adc	r19, r23
     472:	c9 01       	movw	r24, r18
     474:	b8 01       	movw	r22, r16
     476:	29 e3       	ldi	r18, 0x39	; 57
     478:	3e e8       	ldi	r19, 0x8E	; 142
     47a:	43 ee       	ldi	r20, 0xE3	; 227
     47c:	58 e3       	ldi	r21, 0x38	; 56
     47e:	7b d1       	rcall	.+758    	; 0x776 <__umulsidi3>
     480:	00 e2       	ldi	r16, 0x20	; 32
     482:	a2 d1       	rcall	.+836    	; 0x7c8 <__lshrdi3>
     484:	82 2e       	mov	r8, r18
     486:	93 2e       	mov	r9, r19
     488:	a4 2e       	mov	r10, r20
     48a:	b5 2e       	mov	r11, r21
     48c:	24 01       	movw	r4, r8
     48e:	35 01       	movw	r6, r10
     490:	76 94       	lsr	r7
     492:	67 94       	ror	r6
     494:	57 94       	ror	r5
     496:	47 94       	ror	r4
     498:	c4 15       	cp	r28, r4
     49a:	d5 05       	cpc	r29, r5
     49c:	09 f0       	breq	.+2      	; 0x4a0 <servo_allMotorsAtTarget+0x8c>
     49e:	3f c0       	rjmp	.+126    	; 0x51e <servo_allMotorsAtTarget+0x10a>
     4a0:	61 01       	movw	r12, r2
     4a2:	1f ef       	ldi	r17, 0xFF	; 255
     4a4:	c1 1a       	sub	r12, r17
     4a6:	d1 0a       	sbc	r13, r17
     4a8:	c1 e0       	ldi	r28, 0x01	; 1
     4aa:	d0 e0       	ldi	r29, 0x00	; 0
     4ac:	fe 01       	movw	r30, r28
     4ae:	eb 5f       	subi	r30, 0xFB	; 251
     4b0:	fe 4f       	sbci	r31, 0xFE	; 254
     4b2:	e0 80       	ld	r14, Z
     4b4:	f6 01       	movw	r30, r12
     4b6:	81 91       	ld	r24, Z+
     4b8:	6f 01       	movw	r12, r30
     4ba:	f1 2c       	mov	r15, r1
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	a0 e0       	ldi	r26, 0x00	; 0
     4c0:	b0 e0       	ldi	r27, 0x00	; 0
     4c2:	88 0f       	add	r24, r24
     4c4:	99 1f       	adc	r25, r25
     4c6:	aa 1f       	adc	r26, r26
     4c8:	bb 1f       	adc	r27, r27
     4ca:	ac 01       	movw	r20, r24
     4cc:	bd 01       	movw	r22, r26
     4ce:	44 0f       	add	r20, r20
     4d0:	55 1f       	adc	r21, r21
     4d2:	66 1f       	adc	r22, r22
     4d4:	77 1f       	adc	r23, r23
     4d6:	44 0f       	add	r20, r20
     4d8:	55 1f       	adc	r21, r21
     4da:	66 1f       	adc	r22, r22
     4dc:	77 1f       	adc	r23, r23
     4de:	8c 01       	movw	r16, r24
     4e0:	9d 01       	movw	r18, r26
     4e2:	04 0f       	add	r16, r20
     4e4:	15 1f       	adc	r17, r21
     4e6:	26 1f       	adc	r18, r22
     4e8:	37 1f       	adc	r19, r23
     4ea:	c9 01       	movw	r24, r18
     4ec:	b8 01       	movw	r22, r16
     4ee:	29 e3       	ldi	r18, 0x39	; 57
     4f0:	3e e8       	ldi	r19, 0x8E	; 142
     4f2:	43 ee       	ldi	r20, 0xE3	; 227
     4f4:	58 e3       	ldi	r21, 0x38	; 56
     4f6:	3f d1       	rcall	.+638    	; 0x776 <__umulsidi3>
     4f8:	00 e2       	ldi	r16, 0x20	; 32
     4fa:	66 d1       	rcall	.+716    	; 0x7c8 <__lshrdi3>
     4fc:	42 2e       	mov	r4, r18
     4fe:	53 2e       	mov	r5, r19
     500:	64 2e       	mov	r6, r20
     502:	75 2e       	mov	r7, r21
     504:	76 94       	lsr	r7
     506:	67 94       	ror	r6
     508:	57 94       	ror	r5
     50a:	47 94       	ror	r4
     50c:	e4 14       	cp	r14, r4
     50e:	f5 04       	cpc	r15, r5
     510:	41 f4       	brne	.+16     	; 0x522 <servo_allMotorsAtTarget+0x10e>
     512:	21 96       	adiw	r28, 0x01	; 1
	return convert_motorsteps_to_degrees(motor_vals[id]);
}

unsigned char servo_allMotorsAtTarget(unsigned char targetDagrees[])
{
	for (unsigned char i = 0; i < 4; i++)
     514:	c4 30       	cpi	r28, 0x04	; 4
     516:	d1 05       	cpc	r29, r1
     518:	49 f6       	brne	.-110    	; 0x4ac <servo_allMotorsAtTarget+0x98>
	{
		if(motor_vals[i] != convert_degrees_to_motorsteps(targetDagrees[i]))
			return 0;
	}
	
	return 1;
     51a:	81 e0       	ldi	r24, 0x01	; 1
     51c:	03 c0       	rjmp	.+6      	; 0x524 <servo_allMotorsAtTarget+0x110>
unsigned char servo_allMotorsAtTarget(unsigned char targetDagrees[])
{
	for (unsigned char i = 0; i < 4; i++)
	{
		if(motor_vals[i] != convert_degrees_to_motorsteps(targetDagrees[i]))
			return 0;
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	01 c0       	rjmp	.+2      	; 0x524 <servo_allMotorsAtTarget+0x110>
     522:	80 e0       	ldi	r24, 0x00	; 0
	}
	
	return 1;
}
     524:	df 91       	pop	r29
     526:	cf 91       	pop	r28
     528:	1f 91       	pop	r17
     52a:	0f 91       	pop	r16
     52c:	ff 90       	pop	r15
     52e:	ef 90       	pop	r14
     530:	df 90       	pop	r13
     532:	cf 90       	pop	r12
     534:	bf 90       	pop	r11
     536:	af 90       	pop	r10
     538:	9f 90       	pop	r9
     53a:	8f 90       	pop	r8
     53c:	7f 90       	pop	r7
     53e:	6f 90       	pop	r6
     540:	5f 90       	pop	r5
     542:	4f 90       	pop	r4
     544:	3f 90       	pop	r3
     546:	2f 90       	pop	r2
     548:	08 95       	ret

0000054a <servo_moveOneStepToTarget>:

void servo_moveOneStepToTarget(unsigned char targetDagrees[])
{
     54a:	4f 92       	push	r4
     54c:	5f 92       	push	r5
     54e:	6f 92       	push	r6
     550:	8f 92       	push	r8
     552:	9f 92       	push	r9
     554:	af 92       	push	r10
     556:	bf 92       	push	r11
     558:	cf 92       	push	r12
     55a:	df 92       	push	r13
     55c:	ef 92       	push	r14
     55e:	ff 92       	push	r15
     560:	0f 93       	push	r16
     562:	1f 93       	push	r17
     564:	cf 93       	push	r28
     566:	df 93       	push	r29
     568:	2c 01       	movw	r4, r24
     56a:	c0 e0       	ldi	r28, 0x00	; 0
     56c:	d0 e0       	ldi	r29, 0x00	; 0
	for (unsigned char i = 0; i < 4; i++)
	{
		unsigned char val = convert_degrees_to_motorsteps(targetDagrees[i]);
     56e:	f2 01       	movw	r30, r4
     570:	81 91       	ld	r24, Z+
     572:	2f 01       	movw	r4, r30
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	a0 e0       	ldi	r26, 0x00	; 0
     578:	b0 e0       	ldi	r27, 0x00	; 0
     57a:	88 0f       	add	r24, r24
     57c:	99 1f       	adc	r25, r25
     57e:	aa 1f       	adc	r26, r26
     580:	bb 1f       	adc	r27, r27
     582:	ac 01       	movw	r20, r24
     584:	bd 01       	movw	r22, r26
     586:	44 0f       	add	r20, r20
     588:	55 1f       	adc	r21, r21
     58a:	66 1f       	adc	r22, r22
     58c:	77 1f       	adc	r23, r23
     58e:	44 0f       	add	r20, r20
     590:	55 1f       	adc	r21, r21
     592:	66 1f       	adc	r22, r22
     594:	77 1f       	adc	r23, r23
     596:	8c 01       	movw	r16, r24
     598:	9d 01       	movw	r18, r26
     59a:	04 0f       	add	r16, r20
     59c:	15 1f       	adc	r17, r21
     59e:	26 1f       	adc	r18, r22
     5a0:	37 1f       	adc	r19, r23
     5a2:	c9 01       	movw	r24, r18
     5a4:	b8 01       	movw	r22, r16
     5a6:	29 e3       	ldi	r18, 0x39	; 57
     5a8:	3e e8       	ldi	r19, 0x8E	; 142
     5aa:	43 ee       	ldi	r20, 0xE3	; 227
     5ac:	58 e3       	ldi	r21, 0x38	; 56
     5ae:	e3 d0       	rcall	.+454    	; 0x776 <__umulsidi3>
     5b0:	00 e2       	ldi	r16, 0x20	; 32
     5b2:	0a d1       	rcall	.+532    	; 0x7c8 <__lshrdi3>
     5b4:	82 2e       	mov	r8, r18
     5b6:	93 2e       	mov	r9, r19
     5b8:	a4 2e       	mov	r10, r20
     5ba:	b5 2e       	mov	r11, r21
     5bc:	d5 01       	movw	r26, r10
     5be:	c4 01       	movw	r24, r8
     5c0:	b6 95       	lsr	r27
     5c2:	a7 95       	ror	r26
     5c4:	97 95       	ror	r25
     5c6:	87 95       	ror	r24
     5c8:	68 2e       	mov	r6, r24
		if(val < motor_vals[i])
     5ca:	fe 01       	movw	r30, r28
     5cc:	eb 5f       	subi	r30, 0xFB	; 251
     5ce:	fe 4f       	sbci	r31, 0xFE	; 254
     5d0:	20 81       	ld	r18, Z
     5d2:	62 16       	cp	r6, r18
     5d4:	38 f4       	brcc	.+14     	; 0x5e4 <servo_moveOneStepToTarget+0x9a>
			motor_vals[i]--;
     5d6:	fe 01       	movw	r30, r28
     5d8:	eb 5f       	subi	r30, 0xFB	; 251
     5da:	fe 4f       	sbci	r31, 0xFE	; 254
     5dc:	80 81       	ld	r24, Z
     5de:	81 50       	subi	r24, 0x01	; 1
     5e0:	80 83       	st	Z, r24
     5e2:	0c c0       	rjmp	.+24     	; 0x5fc <servo_moveOneStepToTarget+0xb2>
		else if(val > motor_vals[i])
     5e4:	fe 01       	movw	r30, r28
     5e6:	eb 5f       	subi	r30, 0xFB	; 251
     5e8:	fe 4f       	sbci	r31, 0xFE	; 254
     5ea:	20 81       	ld	r18, Z
     5ec:	26 15       	cp	r18, r6
     5ee:	30 f4       	brcc	.+12     	; 0x5fc <servo_moveOneStepToTarget+0xb2>
			motor_vals[i]++;
     5f0:	fe 01       	movw	r30, r28
     5f2:	eb 5f       	subi	r30, 0xFB	; 251
     5f4:	fe 4f       	sbci	r31, 0xFE	; 254
     5f6:	80 81       	ld	r24, Z
     5f8:	8f 5f       	subi	r24, 0xFF	; 255
     5fa:	80 83       	st	Z, r24
     5fc:	21 96       	adiw	r28, 0x01	; 1
	return 1;
}

void servo_moveOneStepToTarget(unsigned char targetDagrees[])
{
	for (unsigned char i = 0; i < 4; i++)
     5fe:	c4 30       	cpi	r28, 0x04	; 4
     600:	d1 05       	cpc	r29, r1
     602:	09 f0       	breq	.+2      	; 0x606 <servo_moveOneStepToTarget+0xbc>
     604:	b4 cf       	rjmp	.-152    	; 0x56e <servo_moveOneStepToTarget+0x24>
		if(val < motor_vals[i])
			motor_vals[i]--;
		else if(val > motor_vals[i])
			motor_vals[i]++;
	}
}
     606:	df 91       	pop	r29
     608:	cf 91       	pop	r28
     60a:	1f 91       	pop	r17
     60c:	0f 91       	pop	r16
     60e:	ff 90       	pop	r15
     610:	ef 90       	pop	r14
     612:	df 90       	pop	r13
     614:	cf 90       	pop	r12
     616:	bf 90       	pop	r11
     618:	af 90       	pop	r10
     61a:	9f 90       	pop	r9
     61c:	8f 90       	pop	r8
     61e:	6f 90       	pop	r6
     620:	5f 90       	pop	r5
     622:	4f 90       	pop	r4
     624:	08 95       	ret

00000626 <servo_moveToStartPosition>:

void servo_moveToStartPosition(void)
{
     626:	cf 93       	push	r28
     628:	df 93       	push	r29
     62a:	00 d0       	rcall	.+0      	; 0x62c <servo_moveToStartPosition+0x6>
     62c:	00 d0       	rcall	.+0      	; 0x62e <servo_moveToStartPosition+0x8>
     62e:	cd b7       	in	r28, 0x3d	; 61
     630:	de b7       	in	r29, 0x3e	; 62
	unsigned char startDegrees[] = {SERVO_BASE_START, SERVO_SHOULDER_START, SERVO_ELBOW_START, SERVO_WRIST_START};
     632:	8a e5       	ldi	r24, 0x5A	; 90
     634:	89 83       	std	Y+1, r24	; 0x01
     636:	87 e8       	ldi	r24, 0x87	; 135
     638:	8a 83       	std	Y+2, r24	; 0x02
     63a:	86 e9       	ldi	r24, 0x96	; 150
     63c:	8b 83       	std	Y+3, r24	; 0x03
     63e:	8b e9       	ldi	r24, 0x9B	; 155
     640:	8c 83       	std	Y+4, r24	; 0x04
	while (!servo_allMotorsAtTarget(startDegrees))
     642:	09 c0       	rjmp	.+18     	; 0x656 <servo_moveToStartPosition+0x30>
	{
		servo_moveOneStepToTarget(startDegrees);
     644:	ce 01       	movw	r24, r28
     646:	01 96       	adiw	r24, 0x01	; 1
     648:	80 df       	rcall	.-256    	; 0x54a <servo_moveOneStepToTarget>
     64a:	8f e5       	ldi	r24, 0x5F	; 95
     64c:	9a ee       	ldi	r25, 0xEA	; 234
     64e:	01 97       	sbiw	r24, 0x01	; 1
     650:	f1 f7       	brne	.-4      	; 0x64e <servo_moveToStartPosition+0x28>
     652:	00 c0       	rjmp	.+0      	; 0x654 <servo_moveToStartPosition+0x2e>
     654:	00 00       	nop
}

void servo_moveToStartPosition(void)
{
	unsigned char startDegrees[] = {SERVO_BASE_START, SERVO_SHOULDER_START, SERVO_ELBOW_START, SERVO_WRIST_START};
	while (!servo_allMotorsAtTarget(startDegrees))
     656:	ce 01       	movw	r24, r28
     658:	01 96       	adiw	r24, 0x01	; 1
     65a:	dc de       	rcall	.-584    	; 0x414 <servo_allMotorsAtTarget>
     65c:	88 23       	and	r24, r24
     65e:	91 f3       	breq	.-28     	; 0x644 <servo_moveToStartPosition+0x1e>
	{
		servo_moveOneStepToTarget(startDegrees);
		_delay_ms(DELAY_TIME);
	}
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	0f 90       	pop	r0
     668:	df 91       	pop	r29
     66a:	cf 91       	pop	r28
     66c:	08 95       	ret

0000066e <uart_putchar>:
     66e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     672:	95 fd       	sbrc	r25, 5
     674:	06 c0       	rjmp	.+12     	; 0x682 <uart_putchar+0x14>
     676:	e0 ec       	ldi	r30, 0xC0	; 192
     678:	f0 e0       	ldi	r31, 0x00	; 0
     67a:	00 00       	nop
     67c:	90 81       	ld	r25, Z
     67e:	95 ff       	sbrs	r25, 5
     680:	fc cf       	rjmp	.-8      	; 0x67a <uart_putchar+0xc>
     682:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     686:	80 e0       	ldi	r24, 0x00	; 0
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	08 95       	ret

0000068c <uart_getchar>:
     68c:	cf 93       	push	r28
     68e:	e0 ec       	ldi	r30, 0xC0	; 192
     690:	f0 e0       	ldi	r31, 0x00	; 0
     692:	80 81       	ld	r24, Z
     694:	88 23       	and	r24, r24
     696:	ec f7       	brge	.-6      	; 0x692 <uart_getchar+0x6>
     698:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     69c:	84 ff       	sbrs	r24, 4
     69e:	05 c0       	rjmp	.+10     	; 0x6aa <uart_getchar+0x1e>
     6a0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	1c c0       	rjmp	.+56     	; 0x6e2 <uart_getchar+0x56>
     6aa:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     6ae:	83 ff       	sbrs	r24, 3
     6b0:	05 c0       	rjmp	.+10     	; 0x6bc <uart_getchar+0x30>
     6b2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	13 c0       	rjmp	.+38     	; 0x6e2 <uart_getchar+0x56>
     6bc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     6c0:	82 ff       	sbrs	r24, 2
     6c2:	05 c0       	rjmp	.+10     	; 0x6ce <uart_getchar+0x42>
     6c4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     6c8:	80 e0       	ldi	r24, 0x00	; 0
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	0a c0       	rjmp	.+20     	; 0x6e2 <uart_getchar+0x56>
     6ce:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     6d2:	60 91 7f 01 	lds	r22, 0x017F	; 0x80017f <__iob+0x2>
     6d6:	70 91 80 01 	lds	r23, 0x0180	; 0x800180 <__iob+0x3>
     6da:	8c 2f       	mov	r24, r28
     6dc:	c8 df       	rcall	.-112    	; 0x66e <uart_putchar>
     6de:	8c 2f       	mov	r24, r28
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	cf 91       	pop	r28
     6e4:	08 95       	ret

000006e6 <uart_init>:
     6e6:	e0 ec       	ldi	r30, 0xC0	; 192
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	80 81       	ld	r24, Z
     6ec:	8d 7f       	andi	r24, 0xFD	; 253
     6ee:	80 83       	st	Z, r24
     6f0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     6f4:	89 e1       	ldi	r24, 0x19	; 25
     6f6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     6fa:	86 e8       	ldi	r24, 0x86	; 134
     6fc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     700:	88 e1       	ldi	r24, 0x18	; 24
     702:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     706:	ed e7       	ldi	r30, 0x7D	; 125
     708:	f1 e0       	ldi	r31, 0x01	; 1
     70a:	89 e0       	ldi	r24, 0x09	; 9
     70c:	91 e0       	ldi	r25, 0x01	; 1
     70e:	93 83       	std	Z+3, r25	; 0x03
     710:	82 83       	std	Z+2, r24	; 0x02
     712:	91 83       	std	Z+1, r25	; 0x01
     714:	80 83       	st	Z, r24
     716:	08 95       	ret

00000718 <uart_error>:
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	cd e7       	ldi	r28, 0x7D	; 125
     71e:	d1 e0       	ldi	r29, 0x01	; 1
     720:	88 81       	ld	r24, Y
     722:	99 81       	ldd	r25, Y+1	; 0x01
     724:	84 d0       	rcall	.+264    	; 0x82e <clearerr>
     726:	88 81       	ld	r24, Y
     728:	99 81       	ldd	r25, Y+1	; 0x01
     72a:	86 d0       	rcall	.+268    	; 0x838 <fgetc>
     72c:	df 91       	pop	r29
     72e:	cf 91       	pop	r28
     730:	08 95       	ret

00000732 <__udivmodsi4>:
     732:	a1 e2       	ldi	r26, 0x21	; 33
     734:	1a 2e       	mov	r1, r26
     736:	aa 1b       	sub	r26, r26
     738:	bb 1b       	sub	r27, r27
     73a:	fd 01       	movw	r30, r26
     73c:	0d c0       	rjmp	.+26     	; 0x758 <__udivmodsi4_ep>

0000073e <__udivmodsi4_loop>:
     73e:	aa 1f       	adc	r26, r26
     740:	bb 1f       	adc	r27, r27
     742:	ee 1f       	adc	r30, r30
     744:	ff 1f       	adc	r31, r31
     746:	a2 17       	cp	r26, r18
     748:	b3 07       	cpc	r27, r19
     74a:	e4 07       	cpc	r30, r20
     74c:	f5 07       	cpc	r31, r21
     74e:	20 f0       	brcs	.+8      	; 0x758 <__udivmodsi4_ep>
     750:	a2 1b       	sub	r26, r18
     752:	b3 0b       	sbc	r27, r19
     754:	e4 0b       	sbc	r30, r20
     756:	f5 0b       	sbc	r31, r21

00000758 <__udivmodsi4_ep>:
     758:	66 1f       	adc	r22, r22
     75a:	77 1f       	adc	r23, r23
     75c:	88 1f       	adc	r24, r24
     75e:	99 1f       	adc	r25, r25
     760:	1a 94       	dec	r1
     762:	69 f7       	brne	.-38     	; 0x73e <__udivmodsi4_loop>
     764:	60 95       	com	r22
     766:	70 95       	com	r23
     768:	80 95       	com	r24
     76a:	90 95       	com	r25
     76c:	9b 01       	movw	r18, r22
     76e:	ac 01       	movw	r20, r24
     770:	bd 01       	movw	r22, r26
     772:	cf 01       	movw	r24, r30
     774:	08 95       	ret

00000776 <__umulsidi3>:
     776:	e8 94       	clt

00000778 <__umulsidi3_helper>:
     778:	df 93       	push	r29
     77a:	cf 93       	push	r28
     77c:	fc 01       	movw	r30, r24
     77e:	db 01       	movw	r26, r22
     780:	3f d0       	rcall	.+126    	; 0x800 <__umulhisi3>
     782:	7f 93       	push	r23
     784:	6f 93       	push	r22
     786:	e9 01       	movw	r28, r18
     788:	9a 01       	movw	r18, r20
     78a:	ac 01       	movw	r20, r24
     78c:	bf 93       	push	r27
     78e:	af 93       	push	r26
     790:	3f 93       	push	r19
     792:	2f 93       	push	r18
     794:	df 01       	movw	r26, r30
     796:	34 d0       	rcall	.+104    	; 0x800 <__umulhisi3>
     798:	26 f4       	brtc	.+8      	; 0x7a2 <__umulsidi3_helper+0x2a>
     79a:	6c 1b       	sub	r22, r28
     79c:	7d 0b       	sbc	r23, r29
     79e:	82 0b       	sbc	r24, r18
     7a0:	93 0b       	sbc	r25, r19
     7a2:	9e 01       	movw	r18, r28
     7a4:	eb 01       	movw	r28, r22
     7a6:	fc 01       	movw	r30, r24
     7a8:	3a d0       	rcall	.+116    	; 0x81e <__muldi3_6>
     7aa:	af 91       	pop	r26
     7ac:	bf 91       	pop	r27
     7ae:	2f 91       	pop	r18
     7b0:	3f 91       	pop	r19
     7b2:	35 d0       	rcall	.+106    	; 0x81e <__muldi3_6>
     7b4:	be 01       	movw	r22, r28
     7b6:	cf 01       	movw	r24, r30
     7b8:	f9 01       	movw	r30, r18
     7ba:	2f 91       	pop	r18
     7bc:	3f 91       	pop	r19
     7be:	cf 91       	pop	r28
     7c0:	df 91       	pop	r29
     7c2:	08 95       	ret

000007c4 <__ashrdi3>:
     7c4:	97 fb       	bst	r25, 7
     7c6:	10 f8       	bld	r1, 0

000007c8 <__lshrdi3>:
     7c8:	16 94       	lsr	r1
     7ca:	00 08       	sbc	r0, r0
     7cc:	0f 93       	push	r16
     7ce:	08 30       	cpi	r16, 0x08	; 8
     7d0:	98 f0       	brcs	.+38     	; 0x7f8 <__lshrdi3+0x30>
     7d2:	08 50       	subi	r16, 0x08	; 8
     7d4:	23 2f       	mov	r18, r19
     7d6:	34 2f       	mov	r19, r20
     7d8:	45 2f       	mov	r20, r21
     7da:	56 2f       	mov	r21, r22
     7dc:	67 2f       	mov	r22, r23
     7de:	78 2f       	mov	r23, r24
     7e0:	89 2f       	mov	r24, r25
     7e2:	90 2d       	mov	r25, r0
     7e4:	f4 cf       	rjmp	.-24     	; 0x7ce <__lshrdi3+0x6>
     7e6:	05 94       	asr	r0
     7e8:	97 95       	ror	r25
     7ea:	87 95       	ror	r24
     7ec:	77 95       	ror	r23
     7ee:	67 95       	ror	r22
     7f0:	57 95       	ror	r21
     7f2:	47 95       	ror	r20
     7f4:	37 95       	ror	r19
     7f6:	27 95       	ror	r18
     7f8:	0a 95       	dec	r16
     7fa:	aa f7       	brpl	.-22     	; 0x7e6 <__lshrdi3+0x1e>
     7fc:	0f 91       	pop	r16
     7fe:	08 95       	ret

00000800 <__umulhisi3>:
     800:	a2 9f       	mul	r26, r18
     802:	b0 01       	movw	r22, r0
     804:	b3 9f       	mul	r27, r19
     806:	c0 01       	movw	r24, r0
     808:	a3 9f       	mul	r26, r19
     80a:	70 0d       	add	r23, r0
     80c:	81 1d       	adc	r24, r1
     80e:	11 24       	eor	r1, r1
     810:	91 1d       	adc	r25, r1
     812:	b2 9f       	mul	r27, r18
     814:	70 0d       	add	r23, r0
     816:	81 1d       	adc	r24, r1
     818:	11 24       	eor	r1, r1
     81a:	91 1d       	adc	r25, r1
     81c:	08 95       	ret

0000081e <__muldi3_6>:
     81e:	f0 df       	rcall	.-32     	; 0x800 <__umulhisi3>
     820:	46 0f       	add	r20, r22
     822:	57 1f       	adc	r21, r23
     824:	c8 1f       	adc	r28, r24
     826:	d9 1f       	adc	r29, r25
     828:	08 f4       	brcc	.+2      	; 0x82c <__muldi3_6+0xe>
     82a:	31 96       	adiw	r30, 0x01	; 1
     82c:	08 95       	ret

0000082e <clearerr>:
     82e:	fc 01       	movw	r30, r24
     830:	93 81       	ldd	r25, Z+3	; 0x03
     832:	9f 7c       	andi	r25, 0xCF	; 207
     834:	93 83       	std	Z+3, r25	; 0x03
     836:	08 95       	ret

00000838 <fgetc>:
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	ec 01       	movw	r28, r24
     83e:	2b 81       	ldd	r18, Y+3	; 0x03
     840:	20 ff       	sbrs	r18, 0
     842:	33 c0       	rjmp	.+102    	; 0x8aa <fgetc+0x72>
     844:	26 ff       	sbrs	r18, 6
     846:	0a c0       	rjmp	.+20     	; 0x85c <fgetc+0x24>
     848:	2f 7b       	andi	r18, 0xBF	; 191
     84a:	2b 83       	std	Y+3, r18	; 0x03
     84c:	8e 81       	ldd	r24, Y+6	; 0x06
     84e:	9f 81       	ldd	r25, Y+7	; 0x07
     850:	01 96       	adiw	r24, 0x01	; 1
     852:	9f 83       	std	Y+7, r25	; 0x07
     854:	8e 83       	std	Y+6, r24	; 0x06
     856:	8a 81       	ldd	r24, Y+2	; 0x02
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	29 c0       	rjmp	.+82     	; 0x8ae <fgetc+0x76>
     85c:	22 ff       	sbrs	r18, 2
     85e:	0f c0       	rjmp	.+30     	; 0x87e <fgetc+0x46>
     860:	e8 81       	ld	r30, Y
     862:	f9 81       	ldd	r31, Y+1	; 0x01
     864:	80 81       	ld	r24, Z
     866:	08 2e       	mov	r0, r24
     868:	00 0c       	add	r0, r0
     86a:	99 0b       	sbc	r25, r25
     86c:	00 97       	sbiw	r24, 0x00	; 0
     86e:	19 f4       	brne	.+6      	; 0x876 <fgetc+0x3e>
     870:	20 62       	ori	r18, 0x20	; 32
     872:	2b 83       	std	Y+3, r18	; 0x03
     874:	1a c0       	rjmp	.+52     	; 0x8aa <fgetc+0x72>
     876:	31 96       	adiw	r30, 0x01	; 1
     878:	f9 83       	std	Y+1, r31	; 0x01
     87a:	e8 83       	st	Y, r30
     87c:	0e c0       	rjmp	.+28     	; 0x89a <fgetc+0x62>
     87e:	ea 85       	ldd	r30, Y+10	; 0x0a
     880:	fb 85       	ldd	r31, Y+11	; 0x0b
     882:	09 95       	icall
     884:	97 ff       	sbrs	r25, 7
     886:	09 c0       	rjmp	.+18     	; 0x89a <fgetc+0x62>
     888:	2b 81       	ldd	r18, Y+3	; 0x03
     88a:	01 96       	adiw	r24, 0x01	; 1
     88c:	11 f0       	breq	.+4      	; 0x892 <fgetc+0x5a>
     88e:	80 e2       	ldi	r24, 0x20	; 32
     890:	01 c0       	rjmp	.+2      	; 0x894 <fgetc+0x5c>
     892:	80 e1       	ldi	r24, 0x10	; 16
     894:	82 2b       	or	r24, r18
     896:	8b 83       	std	Y+3, r24	; 0x03
     898:	08 c0       	rjmp	.+16     	; 0x8aa <fgetc+0x72>
     89a:	2e 81       	ldd	r18, Y+6	; 0x06
     89c:	3f 81       	ldd	r19, Y+7	; 0x07
     89e:	2f 5f       	subi	r18, 0xFF	; 255
     8a0:	3f 4f       	sbci	r19, 0xFF	; 255
     8a2:	3f 83       	std	Y+7, r19	; 0x07
     8a4:	2e 83       	std	Y+6, r18	; 0x06
     8a6:	99 27       	eor	r25, r25
     8a8:	02 c0       	rjmp	.+4      	; 0x8ae <fgetc+0x76>
     8aa:	8f ef       	ldi	r24, 0xFF	; 255
     8ac:	9f ef       	ldi	r25, 0xFF	; 255
     8ae:	df 91       	pop	r29
     8b0:	cf 91       	pop	r28
     8b2:	08 95       	ret

000008b4 <printf>:
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	ef e5       	ldi	r30, 0x5F	; 95
     8ba:	f4 e0       	ldi	r31, 0x04	; 4
     8bc:	86 c5       	rjmp	.+2828   	; 0x13ca <__prologue_saves__+0x20>
     8be:	ae 01       	movw	r20, r28
     8c0:	4b 5f       	subi	r20, 0xFB	; 251
     8c2:	5f 4f       	sbci	r21, 0xFF	; 255
     8c4:	fa 01       	movw	r30, r20
     8c6:	61 91       	ld	r22, Z+
     8c8:	71 91       	ld	r23, Z+
     8ca:	af 01       	movw	r20, r30
     8cc:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <__iob+0x2>
     8d0:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <__iob+0x3>
     8d4:	2b d0       	rcall	.+86     	; 0x92c <vfprintf>
     8d6:	e2 e0       	ldi	r30, 0x02	; 2
     8d8:	94 c5       	rjmp	.+2856   	; 0x1402 <__epilogue_restores__+0x20>

000008da <scanf>:
     8da:	a0 e0       	ldi	r26, 0x00	; 0
     8dc:	b0 e0       	ldi	r27, 0x00	; 0
     8de:	e2 e7       	ldi	r30, 0x72	; 114
     8e0:	f4 e0       	ldi	r31, 0x04	; 4
     8e2:	73 c5       	rjmp	.+2790   	; 0x13ca <__prologue_saves__+0x20>
     8e4:	ae 01       	movw	r20, r28
     8e6:	4b 5f       	subi	r20, 0xFB	; 251
     8e8:	5f 4f       	sbci	r21, 0xFF	; 255
     8ea:	fa 01       	movw	r30, r20
     8ec:	61 91       	ld	r22, Z+
     8ee:	71 91       	ld	r23, Z+
     8f0:	af 01       	movw	r20, r30
     8f2:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <__iob>
     8f6:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <__iob+0x1>
     8fa:	77 d3       	rcall	.+1774   	; 0xfea <vfscanf>
     8fc:	e2 e0       	ldi	r30, 0x02	; 2
     8fe:	81 c5       	rjmp	.+2818   	; 0x1402 <__epilogue_restores__+0x20>

00000900 <sscanf>:
     900:	ae e0       	ldi	r26, 0x0E	; 14
     902:	b0 e0       	ldi	r27, 0x00	; 0
     904:	e5 e8       	ldi	r30, 0x85	; 133
     906:	f4 e0       	ldi	r31, 0x04	; 4
     908:	60 c5       	rjmp	.+2752   	; 0x13ca <__prologue_saves__+0x20>
     90a:	85 e0       	ldi	r24, 0x05	; 5
     90c:	8c 83       	std	Y+4, r24	; 0x04
     90e:	8b 89       	ldd	r24, Y+19	; 0x13
     910:	9c 89       	ldd	r25, Y+20	; 0x14
     912:	9a 83       	std	Y+2, r25	; 0x02
     914:	89 83       	std	Y+1, r24	; 0x01
     916:	ae 01       	movw	r20, r28
     918:	49 5e       	subi	r20, 0xE9	; 233
     91a:	5f 4f       	sbci	r21, 0xFF	; 255
     91c:	6d 89       	ldd	r22, Y+21	; 0x15
     91e:	7e 89       	ldd	r23, Y+22	; 0x16
     920:	ce 01       	movw	r24, r28
     922:	01 96       	adiw	r24, 0x01	; 1
     924:	62 d3       	rcall	.+1732   	; 0xfea <vfscanf>
     926:	2e 96       	adiw	r28, 0x0e	; 14
     928:	e2 e0       	ldi	r30, 0x02	; 2
     92a:	6b c5       	rjmp	.+2774   	; 0x1402 <__epilogue_restores__+0x20>

0000092c <vfprintf>:
     92c:	ab e0       	ldi	r26, 0x0B	; 11
     92e:	b0 e0       	ldi	r27, 0x00	; 0
     930:	eb e9       	ldi	r30, 0x9B	; 155
     932:	f4 e0       	ldi	r31, 0x04	; 4
     934:	3a c5       	rjmp	.+2676   	; 0x13aa <__prologue_saves__>
     936:	6c 01       	movw	r12, r24
     938:	7b 01       	movw	r14, r22
     93a:	8a 01       	movw	r16, r20
     93c:	fc 01       	movw	r30, r24
     93e:	17 82       	std	Z+7, r1	; 0x07
     940:	16 82       	std	Z+6, r1	; 0x06
     942:	83 81       	ldd	r24, Z+3	; 0x03
     944:	81 ff       	sbrs	r24, 1
     946:	bf c1       	rjmp	.+894    	; 0xcc6 <vfprintf+0x39a>
     948:	ce 01       	movw	r24, r28
     94a:	01 96       	adiw	r24, 0x01	; 1
     94c:	3c 01       	movw	r6, r24
     94e:	f6 01       	movw	r30, r12
     950:	93 81       	ldd	r25, Z+3	; 0x03
     952:	f7 01       	movw	r30, r14
     954:	93 fd       	sbrc	r25, 3
     956:	85 91       	lpm	r24, Z+
     958:	93 ff       	sbrs	r25, 3
     95a:	81 91       	ld	r24, Z+
     95c:	7f 01       	movw	r14, r30
     95e:	88 23       	and	r24, r24
     960:	09 f4       	brne	.+2      	; 0x964 <vfprintf+0x38>
     962:	ad c1       	rjmp	.+858    	; 0xcbe <vfprintf+0x392>
     964:	85 32       	cpi	r24, 0x25	; 37
     966:	39 f4       	brne	.+14     	; 0x976 <vfprintf+0x4a>
     968:	93 fd       	sbrc	r25, 3
     96a:	85 91       	lpm	r24, Z+
     96c:	93 ff       	sbrs	r25, 3
     96e:	81 91       	ld	r24, Z+
     970:	7f 01       	movw	r14, r30
     972:	85 32       	cpi	r24, 0x25	; 37
     974:	21 f4       	brne	.+8      	; 0x97e <vfprintf+0x52>
     976:	b6 01       	movw	r22, r12
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	61 d4       	rcall	.+2242   	; 0x123e <fputc>
     97c:	e8 cf       	rjmp	.-48     	; 0x94e <vfprintf+0x22>
     97e:	91 2c       	mov	r9, r1
     980:	21 2c       	mov	r2, r1
     982:	31 2c       	mov	r3, r1
     984:	ff e1       	ldi	r31, 0x1F	; 31
     986:	f3 15       	cp	r31, r3
     988:	d8 f0       	brcs	.+54     	; 0x9c0 <vfprintf+0x94>
     98a:	8b 32       	cpi	r24, 0x2B	; 43
     98c:	79 f0       	breq	.+30     	; 0x9ac <vfprintf+0x80>
     98e:	38 f4       	brcc	.+14     	; 0x99e <vfprintf+0x72>
     990:	80 32       	cpi	r24, 0x20	; 32
     992:	79 f0       	breq	.+30     	; 0x9b2 <vfprintf+0x86>
     994:	83 32       	cpi	r24, 0x23	; 35
     996:	a1 f4       	brne	.+40     	; 0x9c0 <vfprintf+0x94>
     998:	23 2d       	mov	r18, r3
     99a:	20 61       	ori	r18, 0x10	; 16
     99c:	1d c0       	rjmp	.+58     	; 0x9d8 <vfprintf+0xac>
     99e:	8d 32       	cpi	r24, 0x2D	; 45
     9a0:	61 f0       	breq	.+24     	; 0x9ba <vfprintf+0x8e>
     9a2:	80 33       	cpi	r24, 0x30	; 48
     9a4:	69 f4       	brne	.+26     	; 0x9c0 <vfprintf+0x94>
     9a6:	23 2d       	mov	r18, r3
     9a8:	21 60       	ori	r18, 0x01	; 1
     9aa:	16 c0       	rjmp	.+44     	; 0x9d8 <vfprintf+0xac>
     9ac:	83 2d       	mov	r24, r3
     9ae:	82 60       	ori	r24, 0x02	; 2
     9b0:	38 2e       	mov	r3, r24
     9b2:	e3 2d       	mov	r30, r3
     9b4:	e4 60       	ori	r30, 0x04	; 4
     9b6:	3e 2e       	mov	r3, r30
     9b8:	2a c0       	rjmp	.+84     	; 0xa0e <vfprintf+0xe2>
     9ba:	f3 2d       	mov	r31, r3
     9bc:	f8 60       	ori	r31, 0x08	; 8
     9be:	1d c0       	rjmp	.+58     	; 0x9fa <vfprintf+0xce>
     9c0:	37 fc       	sbrc	r3, 7
     9c2:	2d c0       	rjmp	.+90     	; 0xa1e <vfprintf+0xf2>
     9c4:	20 ed       	ldi	r18, 0xD0	; 208
     9c6:	28 0f       	add	r18, r24
     9c8:	2a 30       	cpi	r18, 0x0A	; 10
     9ca:	40 f0       	brcs	.+16     	; 0x9dc <vfprintf+0xb0>
     9cc:	8e 32       	cpi	r24, 0x2E	; 46
     9ce:	b9 f4       	brne	.+46     	; 0x9fe <vfprintf+0xd2>
     9d0:	36 fc       	sbrc	r3, 6
     9d2:	75 c1       	rjmp	.+746    	; 0xcbe <vfprintf+0x392>
     9d4:	23 2d       	mov	r18, r3
     9d6:	20 64       	ori	r18, 0x40	; 64
     9d8:	32 2e       	mov	r3, r18
     9da:	19 c0       	rjmp	.+50     	; 0xa0e <vfprintf+0xe2>
     9dc:	36 fe       	sbrs	r3, 6
     9de:	06 c0       	rjmp	.+12     	; 0x9ec <vfprintf+0xc0>
     9e0:	8a e0       	ldi	r24, 0x0A	; 10
     9e2:	98 9e       	mul	r9, r24
     9e4:	20 0d       	add	r18, r0
     9e6:	11 24       	eor	r1, r1
     9e8:	92 2e       	mov	r9, r18
     9ea:	11 c0       	rjmp	.+34     	; 0xa0e <vfprintf+0xe2>
     9ec:	ea e0       	ldi	r30, 0x0A	; 10
     9ee:	2e 9e       	mul	r2, r30
     9f0:	20 0d       	add	r18, r0
     9f2:	11 24       	eor	r1, r1
     9f4:	22 2e       	mov	r2, r18
     9f6:	f3 2d       	mov	r31, r3
     9f8:	f0 62       	ori	r31, 0x20	; 32
     9fa:	3f 2e       	mov	r3, r31
     9fc:	08 c0       	rjmp	.+16     	; 0xa0e <vfprintf+0xe2>
     9fe:	8c 36       	cpi	r24, 0x6C	; 108
     a00:	21 f4       	brne	.+8      	; 0xa0a <vfprintf+0xde>
     a02:	83 2d       	mov	r24, r3
     a04:	80 68       	ori	r24, 0x80	; 128
     a06:	38 2e       	mov	r3, r24
     a08:	02 c0       	rjmp	.+4      	; 0xa0e <vfprintf+0xe2>
     a0a:	88 36       	cpi	r24, 0x68	; 104
     a0c:	41 f4       	brne	.+16     	; 0xa1e <vfprintf+0xf2>
     a0e:	f7 01       	movw	r30, r14
     a10:	93 fd       	sbrc	r25, 3
     a12:	85 91       	lpm	r24, Z+
     a14:	93 ff       	sbrs	r25, 3
     a16:	81 91       	ld	r24, Z+
     a18:	7f 01       	movw	r14, r30
     a1a:	81 11       	cpse	r24, r1
     a1c:	b3 cf       	rjmp	.-154    	; 0x984 <vfprintf+0x58>
     a1e:	98 2f       	mov	r25, r24
     a20:	9f 7d       	andi	r25, 0xDF	; 223
     a22:	95 54       	subi	r25, 0x45	; 69
     a24:	93 30       	cpi	r25, 0x03	; 3
     a26:	28 f4       	brcc	.+10     	; 0xa32 <vfprintf+0x106>
     a28:	0c 5f       	subi	r16, 0xFC	; 252
     a2a:	1f 4f       	sbci	r17, 0xFF	; 255
     a2c:	9f e3       	ldi	r25, 0x3F	; 63
     a2e:	99 83       	std	Y+1, r25	; 0x01
     a30:	0d c0       	rjmp	.+26     	; 0xa4c <vfprintf+0x120>
     a32:	83 36       	cpi	r24, 0x63	; 99
     a34:	31 f0       	breq	.+12     	; 0xa42 <vfprintf+0x116>
     a36:	83 37       	cpi	r24, 0x73	; 115
     a38:	71 f0       	breq	.+28     	; 0xa56 <vfprintf+0x12a>
     a3a:	83 35       	cpi	r24, 0x53	; 83
     a3c:	09 f0       	breq	.+2      	; 0xa40 <vfprintf+0x114>
     a3e:	55 c0       	rjmp	.+170    	; 0xaea <vfprintf+0x1be>
     a40:	20 c0       	rjmp	.+64     	; 0xa82 <vfprintf+0x156>
     a42:	f8 01       	movw	r30, r16
     a44:	80 81       	ld	r24, Z
     a46:	89 83       	std	Y+1, r24	; 0x01
     a48:	0e 5f       	subi	r16, 0xFE	; 254
     a4a:	1f 4f       	sbci	r17, 0xFF	; 255
     a4c:	88 24       	eor	r8, r8
     a4e:	83 94       	inc	r8
     a50:	91 2c       	mov	r9, r1
     a52:	53 01       	movw	r10, r6
     a54:	12 c0       	rjmp	.+36     	; 0xa7a <vfprintf+0x14e>
     a56:	28 01       	movw	r4, r16
     a58:	f2 e0       	ldi	r31, 0x02	; 2
     a5a:	4f 0e       	add	r4, r31
     a5c:	51 1c       	adc	r5, r1
     a5e:	f8 01       	movw	r30, r16
     a60:	a0 80       	ld	r10, Z
     a62:	b1 80       	ldd	r11, Z+1	; 0x01
     a64:	36 fe       	sbrs	r3, 6
     a66:	03 c0       	rjmp	.+6      	; 0xa6e <vfprintf+0x142>
     a68:	69 2d       	mov	r22, r9
     a6a:	70 e0       	ldi	r23, 0x00	; 0
     a6c:	02 c0       	rjmp	.+4      	; 0xa72 <vfprintf+0x146>
     a6e:	6f ef       	ldi	r22, 0xFF	; 255
     a70:	7f ef       	ldi	r23, 0xFF	; 255
     a72:	c5 01       	movw	r24, r10
     a74:	d9 d3       	rcall	.+1970   	; 0x1228 <strnlen>
     a76:	4c 01       	movw	r8, r24
     a78:	82 01       	movw	r16, r4
     a7a:	f3 2d       	mov	r31, r3
     a7c:	ff 77       	andi	r31, 0x7F	; 127
     a7e:	3f 2e       	mov	r3, r31
     a80:	15 c0       	rjmp	.+42     	; 0xaac <vfprintf+0x180>
     a82:	28 01       	movw	r4, r16
     a84:	22 e0       	ldi	r18, 0x02	; 2
     a86:	42 0e       	add	r4, r18
     a88:	51 1c       	adc	r5, r1
     a8a:	f8 01       	movw	r30, r16
     a8c:	a0 80       	ld	r10, Z
     a8e:	b1 80       	ldd	r11, Z+1	; 0x01
     a90:	36 fe       	sbrs	r3, 6
     a92:	03 c0       	rjmp	.+6      	; 0xa9a <vfprintf+0x16e>
     a94:	69 2d       	mov	r22, r9
     a96:	70 e0       	ldi	r23, 0x00	; 0
     a98:	02 c0       	rjmp	.+4      	; 0xa9e <vfprintf+0x172>
     a9a:	6f ef       	ldi	r22, 0xFF	; 255
     a9c:	7f ef       	ldi	r23, 0xFF	; 255
     a9e:	c5 01       	movw	r24, r10
     aa0:	b8 d3       	rcall	.+1904   	; 0x1212 <strnlen_P>
     aa2:	4c 01       	movw	r8, r24
     aa4:	f3 2d       	mov	r31, r3
     aa6:	f0 68       	ori	r31, 0x80	; 128
     aa8:	3f 2e       	mov	r3, r31
     aaa:	82 01       	movw	r16, r4
     aac:	33 fc       	sbrc	r3, 3
     aae:	19 c0       	rjmp	.+50     	; 0xae2 <vfprintf+0x1b6>
     ab0:	82 2d       	mov	r24, r2
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	88 16       	cp	r8, r24
     ab6:	99 06       	cpc	r9, r25
     ab8:	a0 f4       	brcc	.+40     	; 0xae2 <vfprintf+0x1b6>
     aba:	b6 01       	movw	r22, r12
     abc:	80 e2       	ldi	r24, 0x20	; 32
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	be d3       	rcall	.+1916   	; 0x123e <fputc>
     ac2:	2a 94       	dec	r2
     ac4:	f5 cf       	rjmp	.-22     	; 0xab0 <vfprintf+0x184>
     ac6:	f5 01       	movw	r30, r10
     ac8:	37 fc       	sbrc	r3, 7
     aca:	85 91       	lpm	r24, Z+
     acc:	37 fe       	sbrs	r3, 7
     ace:	81 91       	ld	r24, Z+
     ad0:	5f 01       	movw	r10, r30
     ad2:	b6 01       	movw	r22, r12
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	b3 d3       	rcall	.+1894   	; 0x123e <fputc>
     ad8:	21 10       	cpse	r2, r1
     ada:	2a 94       	dec	r2
     adc:	21 e0       	ldi	r18, 0x01	; 1
     ade:	82 1a       	sub	r8, r18
     ae0:	91 08       	sbc	r9, r1
     ae2:	81 14       	cp	r8, r1
     ae4:	91 04       	cpc	r9, r1
     ae6:	79 f7       	brne	.-34     	; 0xac6 <vfprintf+0x19a>
     ae8:	e1 c0       	rjmp	.+450    	; 0xcac <vfprintf+0x380>
     aea:	84 36       	cpi	r24, 0x64	; 100
     aec:	11 f0       	breq	.+4      	; 0xaf2 <vfprintf+0x1c6>
     aee:	89 36       	cpi	r24, 0x69	; 105
     af0:	39 f5       	brne	.+78     	; 0xb40 <vfprintf+0x214>
     af2:	f8 01       	movw	r30, r16
     af4:	37 fe       	sbrs	r3, 7
     af6:	07 c0       	rjmp	.+14     	; 0xb06 <vfprintf+0x1da>
     af8:	60 81       	ld	r22, Z
     afa:	71 81       	ldd	r23, Z+1	; 0x01
     afc:	82 81       	ldd	r24, Z+2	; 0x02
     afe:	93 81       	ldd	r25, Z+3	; 0x03
     b00:	0c 5f       	subi	r16, 0xFC	; 252
     b02:	1f 4f       	sbci	r17, 0xFF	; 255
     b04:	08 c0       	rjmp	.+16     	; 0xb16 <vfprintf+0x1ea>
     b06:	60 81       	ld	r22, Z
     b08:	71 81       	ldd	r23, Z+1	; 0x01
     b0a:	07 2e       	mov	r0, r23
     b0c:	00 0c       	add	r0, r0
     b0e:	88 0b       	sbc	r24, r24
     b10:	99 0b       	sbc	r25, r25
     b12:	0e 5f       	subi	r16, 0xFE	; 254
     b14:	1f 4f       	sbci	r17, 0xFF	; 255
     b16:	f3 2d       	mov	r31, r3
     b18:	ff 76       	andi	r31, 0x6F	; 111
     b1a:	3f 2e       	mov	r3, r31
     b1c:	97 ff       	sbrs	r25, 7
     b1e:	09 c0       	rjmp	.+18     	; 0xb32 <vfprintf+0x206>
     b20:	90 95       	com	r25
     b22:	80 95       	com	r24
     b24:	70 95       	com	r23
     b26:	61 95       	neg	r22
     b28:	7f 4f       	sbci	r23, 0xFF	; 255
     b2a:	8f 4f       	sbci	r24, 0xFF	; 255
     b2c:	9f 4f       	sbci	r25, 0xFF	; 255
     b2e:	f0 68       	ori	r31, 0x80	; 128
     b30:	3f 2e       	mov	r3, r31
     b32:	2a e0       	ldi	r18, 0x0A	; 10
     b34:	30 e0       	ldi	r19, 0x00	; 0
     b36:	a3 01       	movw	r20, r6
     b38:	d7 d3       	rcall	.+1966   	; 0x12e8 <__ultoa_invert>
     b3a:	88 2e       	mov	r8, r24
     b3c:	86 18       	sub	r8, r6
     b3e:	44 c0       	rjmp	.+136    	; 0xbc8 <vfprintf+0x29c>
     b40:	85 37       	cpi	r24, 0x75	; 117
     b42:	31 f4       	brne	.+12     	; 0xb50 <vfprintf+0x224>
     b44:	23 2d       	mov	r18, r3
     b46:	2f 7e       	andi	r18, 0xEF	; 239
     b48:	b2 2e       	mov	r11, r18
     b4a:	2a e0       	ldi	r18, 0x0A	; 10
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	25 c0       	rjmp	.+74     	; 0xb9a <vfprintf+0x26e>
     b50:	93 2d       	mov	r25, r3
     b52:	99 7f       	andi	r25, 0xF9	; 249
     b54:	b9 2e       	mov	r11, r25
     b56:	8f 36       	cpi	r24, 0x6F	; 111
     b58:	c1 f0       	breq	.+48     	; 0xb8a <vfprintf+0x25e>
     b5a:	18 f4       	brcc	.+6      	; 0xb62 <vfprintf+0x236>
     b5c:	88 35       	cpi	r24, 0x58	; 88
     b5e:	79 f0       	breq	.+30     	; 0xb7e <vfprintf+0x252>
     b60:	ae c0       	rjmp	.+348    	; 0xcbe <vfprintf+0x392>
     b62:	80 37       	cpi	r24, 0x70	; 112
     b64:	19 f0       	breq	.+6      	; 0xb6c <vfprintf+0x240>
     b66:	88 37       	cpi	r24, 0x78	; 120
     b68:	21 f0       	breq	.+8      	; 0xb72 <vfprintf+0x246>
     b6a:	a9 c0       	rjmp	.+338    	; 0xcbe <vfprintf+0x392>
     b6c:	e9 2f       	mov	r30, r25
     b6e:	e0 61       	ori	r30, 0x10	; 16
     b70:	be 2e       	mov	r11, r30
     b72:	b4 fe       	sbrs	r11, 4
     b74:	0d c0       	rjmp	.+26     	; 0xb90 <vfprintf+0x264>
     b76:	fb 2d       	mov	r31, r11
     b78:	f4 60       	ori	r31, 0x04	; 4
     b7a:	bf 2e       	mov	r11, r31
     b7c:	09 c0       	rjmp	.+18     	; 0xb90 <vfprintf+0x264>
     b7e:	34 fe       	sbrs	r3, 4
     b80:	0a c0       	rjmp	.+20     	; 0xb96 <vfprintf+0x26a>
     b82:	29 2f       	mov	r18, r25
     b84:	26 60       	ori	r18, 0x06	; 6
     b86:	b2 2e       	mov	r11, r18
     b88:	06 c0       	rjmp	.+12     	; 0xb96 <vfprintf+0x26a>
     b8a:	28 e0       	ldi	r18, 0x08	; 8
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	05 c0       	rjmp	.+10     	; 0xb9a <vfprintf+0x26e>
     b90:	20 e1       	ldi	r18, 0x10	; 16
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	02 c0       	rjmp	.+4      	; 0xb9a <vfprintf+0x26e>
     b96:	20 e1       	ldi	r18, 0x10	; 16
     b98:	32 e0       	ldi	r19, 0x02	; 2
     b9a:	f8 01       	movw	r30, r16
     b9c:	b7 fe       	sbrs	r11, 7
     b9e:	07 c0       	rjmp	.+14     	; 0xbae <vfprintf+0x282>
     ba0:	60 81       	ld	r22, Z
     ba2:	71 81       	ldd	r23, Z+1	; 0x01
     ba4:	82 81       	ldd	r24, Z+2	; 0x02
     ba6:	93 81       	ldd	r25, Z+3	; 0x03
     ba8:	0c 5f       	subi	r16, 0xFC	; 252
     baa:	1f 4f       	sbci	r17, 0xFF	; 255
     bac:	06 c0       	rjmp	.+12     	; 0xbba <vfprintf+0x28e>
     bae:	60 81       	ld	r22, Z
     bb0:	71 81       	ldd	r23, Z+1	; 0x01
     bb2:	80 e0       	ldi	r24, 0x00	; 0
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	0e 5f       	subi	r16, 0xFE	; 254
     bb8:	1f 4f       	sbci	r17, 0xFF	; 255
     bba:	a3 01       	movw	r20, r6
     bbc:	95 d3       	rcall	.+1834   	; 0x12e8 <__ultoa_invert>
     bbe:	88 2e       	mov	r8, r24
     bc0:	86 18       	sub	r8, r6
     bc2:	fb 2d       	mov	r31, r11
     bc4:	ff 77       	andi	r31, 0x7F	; 127
     bc6:	3f 2e       	mov	r3, r31
     bc8:	36 fe       	sbrs	r3, 6
     bca:	0d c0       	rjmp	.+26     	; 0xbe6 <vfprintf+0x2ba>
     bcc:	23 2d       	mov	r18, r3
     bce:	2e 7f       	andi	r18, 0xFE	; 254
     bd0:	a2 2e       	mov	r10, r18
     bd2:	89 14       	cp	r8, r9
     bd4:	58 f4       	brcc	.+22     	; 0xbec <vfprintf+0x2c0>
     bd6:	34 fe       	sbrs	r3, 4
     bd8:	0b c0       	rjmp	.+22     	; 0xbf0 <vfprintf+0x2c4>
     bda:	32 fc       	sbrc	r3, 2
     bdc:	09 c0       	rjmp	.+18     	; 0xbf0 <vfprintf+0x2c4>
     bde:	83 2d       	mov	r24, r3
     be0:	8e 7e       	andi	r24, 0xEE	; 238
     be2:	a8 2e       	mov	r10, r24
     be4:	05 c0       	rjmp	.+10     	; 0xbf0 <vfprintf+0x2c4>
     be6:	b8 2c       	mov	r11, r8
     be8:	a3 2c       	mov	r10, r3
     bea:	03 c0       	rjmp	.+6      	; 0xbf2 <vfprintf+0x2c6>
     bec:	b8 2c       	mov	r11, r8
     bee:	01 c0       	rjmp	.+2      	; 0xbf2 <vfprintf+0x2c6>
     bf0:	b9 2c       	mov	r11, r9
     bf2:	a4 fe       	sbrs	r10, 4
     bf4:	0f c0       	rjmp	.+30     	; 0xc14 <vfprintf+0x2e8>
     bf6:	fe 01       	movw	r30, r28
     bf8:	e8 0d       	add	r30, r8
     bfa:	f1 1d       	adc	r31, r1
     bfc:	80 81       	ld	r24, Z
     bfe:	80 33       	cpi	r24, 0x30	; 48
     c00:	21 f4       	brne	.+8      	; 0xc0a <vfprintf+0x2de>
     c02:	9a 2d       	mov	r25, r10
     c04:	99 7e       	andi	r25, 0xE9	; 233
     c06:	a9 2e       	mov	r10, r25
     c08:	09 c0       	rjmp	.+18     	; 0xc1c <vfprintf+0x2f0>
     c0a:	a2 fe       	sbrs	r10, 2
     c0c:	06 c0       	rjmp	.+12     	; 0xc1a <vfprintf+0x2ee>
     c0e:	b3 94       	inc	r11
     c10:	b3 94       	inc	r11
     c12:	04 c0       	rjmp	.+8      	; 0xc1c <vfprintf+0x2f0>
     c14:	8a 2d       	mov	r24, r10
     c16:	86 78       	andi	r24, 0x86	; 134
     c18:	09 f0       	breq	.+2      	; 0xc1c <vfprintf+0x2f0>
     c1a:	b3 94       	inc	r11
     c1c:	a3 fc       	sbrc	r10, 3
     c1e:	10 c0       	rjmp	.+32     	; 0xc40 <vfprintf+0x314>
     c20:	a0 fe       	sbrs	r10, 0
     c22:	06 c0       	rjmp	.+12     	; 0xc30 <vfprintf+0x304>
     c24:	b2 14       	cp	r11, r2
     c26:	80 f4       	brcc	.+32     	; 0xc48 <vfprintf+0x31c>
     c28:	28 0c       	add	r2, r8
     c2a:	92 2c       	mov	r9, r2
     c2c:	9b 18       	sub	r9, r11
     c2e:	0d c0       	rjmp	.+26     	; 0xc4a <vfprintf+0x31e>
     c30:	b2 14       	cp	r11, r2
     c32:	58 f4       	brcc	.+22     	; 0xc4a <vfprintf+0x31e>
     c34:	b6 01       	movw	r22, r12
     c36:	80 e2       	ldi	r24, 0x20	; 32
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	01 d3       	rcall	.+1538   	; 0x123e <fputc>
     c3c:	b3 94       	inc	r11
     c3e:	f8 cf       	rjmp	.-16     	; 0xc30 <vfprintf+0x304>
     c40:	b2 14       	cp	r11, r2
     c42:	18 f4       	brcc	.+6      	; 0xc4a <vfprintf+0x31e>
     c44:	2b 18       	sub	r2, r11
     c46:	02 c0       	rjmp	.+4      	; 0xc4c <vfprintf+0x320>
     c48:	98 2c       	mov	r9, r8
     c4a:	21 2c       	mov	r2, r1
     c4c:	a4 fe       	sbrs	r10, 4
     c4e:	0f c0       	rjmp	.+30     	; 0xc6e <vfprintf+0x342>
     c50:	b6 01       	movw	r22, r12
     c52:	80 e3       	ldi	r24, 0x30	; 48
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	f3 d2       	rcall	.+1510   	; 0x123e <fputc>
     c58:	a2 fe       	sbrs	r10, 2
     c5a:	16 c0       	rjmp	.+44     	; 0xc88 <vfprintf+0x35c>
     c5c:	a1 fc       	sbrc	r10, 1
     c5e:	03 c0       	rjmp	.+6      	; 0xc66 <vfprintf+0x33a>
     c60:	88 e7       	ldi	r24, 0x78	; 120
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <vfprintf+0x33e>
     c66:	88 e5       	ldi	r24, 0x58	; 88
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	b6 01       	movw	r22, r12
     c6c:	0c c0       	rjmp	.+24     	; 0xc86 <vfprintf+0x35a>
     c6e:	8a 2d       	mov	r24, r10
     c70:	86 78       	andi	r24, 0x86	; 134
     c72:	51 f0       	breq	.+20     	; 0xc88 <vfprintf+0x35c>
     c74:	a1 fe       	sbrs	r10, 1
     c76:	02 c0       	rjmp	.+4      	; 0xc7c <vfprintf+0x350>
     c78:	8b e2       	ldi	r24, 0x2B	; 43
     c7a:	01 c0       	rjmp	.+2      	; 0xc7e <vfprintf+0x352>
     c7c:	80 e2       	ldi	r24, 0x20	; 32
     c7e:	a7 fc       	sbrc	r10, 7
     c80:	8d e2       	ldi	r24, 0x2D	; 45
     c82:	b6 01       	movw	r22, r12
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	db d2       	rcall	.+1462   	; 0x123e <fputc>
     c88:	89 14       	cp	r8, r9
     c8a:	30 f4       	brcc	.+12     	; 0xc98 <vfprintf+0x36c>
     c8c:	b6 01       	movw	r22, r12
     c8e:	80 e3       	ldi	r24, 0x30	; 48
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	d5 d2       	rcall	.+1450   	; 0x123e <fputc>
     c94:	9a 94       	dec	r9
     c96:	f8 cf       	rjmp	.-16     	; 0xc88 <vfprintf+0x35c>
     c98:	8a 94       	dec	r8
     c9a:	f3 01       	movw	r30, r6
     c9c:	e8 0d       	add	r30, r8
     c9e:	f1 1d       	adc	r31, r1
     ca0:	80 81       	ld	r24, Z
     ca2:	b6 01       	movw	r22, r12
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	cb d2       	rcall	.+1430   	; 0x123e <fputc>
     ca8:	81 10       	cpse	r8, r1
     caa:	f6 cf       	rjmp	.-20     	; 0xc98 <vfprintf+0x36c>
     cac:	22 20       	and	r2, r2
     cae:	09 f4       	brne	.+2      	; 0xcb2 <vfprintf+0x386>
     cb0:	4e ce       	rjmp	.-868    	; 0x94e <vfprintf+0x22>
     cb2:	b6 01       	movw	r22, r12
     cb4:	80 e2       	ldi	r24, 0x20	; 32
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	c2 d2       	rcall	.+1412   	; 0x123e <fputc>
     cba:	2a 94       	dec	r2
     cbc:	f7 cf       	rjmp	.-18     	; 0xcac <vfprintf+0x380>
     cbe:	f6 01       	movw	r30, r12
     cc0:	86 81       	ldd	r24, Z+6	; 0x06
     cc2:	97 81       	ldd	r25, Z+7	; 0x07
     cc4:	02 c0       	rjmp	.+4      	; 0xcca <vfprintf+0x39e>
     cc6:	8f ef       	ldi	r24, 0xFF	; 255
     cc8:	9f ef       	ldi	r25, 0xFF	; 255
     cca:	2b 96       	adiw	r28, 0x0b	; 11
     ccc:	e2 e1       	ldi	r30, 0x12	; 18
     cce:	89 c3       	rjmp	.+1810   	; 0x13e2 <__epilogue_restores__>

00000cd0 <putval>:
     cd0:	20 fd       	sbrc	r18, 0
     cd2:	09 c0       	rjmp	.+18     	; 0xce6 <putval+0x16>
     cd4:	fc 01       	movw	r30, r24
     cd6:	23 fd       	sbrc	r18, 3
     cd8:	05 c0       	rjmp	.+10     	; 0xce4 <putval+0x14>
     cda:	22 ff       	sbrs	r18, 2
     cdc:	02 c0       	rjmp	.+4      	; 0xce2 <putval+0x12>
     cde:	73 83       	std	Z+3, r23	; 0x03
     ce0:	62 83       	std	Z+2, r22	; 0x02
     ce2:	51 83       	std	Z+1, r21	; 0x01
     ce4:	40 83       	st	Z, r20
     ce6:	08 95       	ret

00000ce8 <mulacc>:
     ce8:	44 fd       	sbrc	r20, 4
     cea:	17 c0       	rjmp	.+46     	; 0xd1a <mulacc+0x32>
     cec:	46 fd       	sbrc	r20, 6
     cee:	17 c0       	rjmp	.+46     	; 0xd1e <mulacc+0x36>
     cf0:	ab 01       	movw	r20, r22
     cf2:	bc 01       	movw	r22, r24
     cf4:	da 01       	movw	r26, r20
     cf6:	fb 01       	movw	r30, r22
     cf8:	aa 0f       	add	r26, r26
     cfa:	bb 1f       	adc	r27, r27
     cfc:	ee 1f       	adc	r30, r30
     cfe:	ff 1f       	adc	r31, r31
     d00:	10 94       	com	r1
     d02:	d1 f7       	brne	.-12     	; 0xcf8 <mulacc+0x10>
     d04:	4a 0f       	add	r20, r26
     d06:	5b 1f       	adc	r21, r27
     d08:	6e 1f       	adc	r22, r30
     d0a:	7f 1f       	adc	r23, r31
     d0c:	cb 01       	movw	r24, r22
     d0e:	ba 01       	movw	r22, r20
     d10:	66 0f       	add	r22, r22
     d12:	77 1f       	adc	r23, r23
     d14:	88 1f       	adc	r24, r24
     d16:	99 1f       	adc	r25, r25
     d18:	09 c0       	rjmp	.+18     	; 0xd2c <mulacc+0x44>
     d1a:	33 e0       	ldi	r19, 0x03	; 3
     d1c:	01 c0       	rjmp	.+2      	; 0xd20 <mulacc+0x38>
     d1e:	34 e0       	ldi	r19, 0x04	; 4
     d20:	66 0f       	add	r22, r22
     d22:	77 1f       	adc	r23, r23
     d24:	88 1f       	adc	r24, r24
     d26:	99 1f       	adc	r25, r25
     d28:	31 50       	subi	r19, 0x01	; 1
     d2a:	d1 f7       	brne	.-12     	; 0xd20 <mulacc+0x38>
     d2c:	62 0f       	add	r22, r18
     d2e:	71 1d       	adc	r23, r1
     d30:	81 1d       	adc	r24, r1
     d32:	91 1d       	adc	r25, r1
     d34:	08 95       	ret

00000d36 <skip_spaces>:
     d36:	0f 93       	push	r16
     d38:	1f 93       	push	r17
     d3a:	cf 93       	push	r28
     d3c:	df 93       	push	r29
     d3e:	8c 01       	movw	r16, r24
     d40:	c8 01       	movw	r24, r16
     d42:	7a dd       	rcall	.-1292   	; 0x838 <fgetc>
     d44:	ec 01       	movw	r28, r24
     d46:	97 fd       	sbrc	r25, 7
     d48:	06 c0       	rjmp	.+12     	; 0xd56 <skip_spaces+0x20>
     d4a:	50 d2       	rcall	.+1184   	; 0x11ec <isspace>
     d4c:	89 2b       	or	r24, r25
     d4e:	c1 f7       	brne	.-16     	; 0xd40 <skip_spaces+0xa>
     d50:	b8 01       	movw	r22, r16
     d52:	ce 01       	movw	r24, r28
     d54:	b0 d2       	rcall	.+1376   	; 0x12b6 <ungetc>
     d56:	ce 01       	movw	r24, r28
     d58:	df 91       	pop	r29
     d5a:	cf 91       	pop	r28
     d5c:	1f 91       	pop	r17
     d5e:	0f 91       	pop	r16
     d60:	08 95       	ret

00000d62 <conv_int>:
     d62:	8f 92       	push	r8
     d64:	9f 92       	push	r9
     d66:	af 92       	push	r10
     d68:	bf 92       	push	r11
     d6a:	ef 92       	push	r14
     d6c:	ff 92       	push	r15
     d6e:	0f 93       	push	r16
     d70:	1f 93       	push	r17
     d72:	cf 93       	push	r28
     d74:	df 93       	push	r29
     d76:	8c 01       	movw	r16, r24
     d78:	d6 2f       	mov	r29, r22
     d7a:	7a 01       	movw	r14, r20
     d7c:	b2 2e       	mov	r11, r18
     d7e:	5c dd       	rcall	.-1352   	; 0x838 <fgetc>
     d80:	9c 01       	movw	r18, r24
     d82:	33 27       	eor	r19, r19
     d84:	2b 32       	cpi	r18, 0x2B	; 43
     d86:	31 05       	cpc	r19, r1
     d88:	31 f0       	breq	.+12     	; 0xd96 <conv_int+0x34>
     d8a:	2d 32       	cpi	r18, 0x2D	; 45
     d8c:	31 05       	cpc	r19, r1
     d8e:	59 f4       	brne	.+22     	; 0xda6 <conv_int+0x44>
     d90:	8b 2d       	mov	r24, r11
     d92:	80 68       	ori	r24, 0x80	; 128
     d94:	b8 2e       	mov	r11, r24
     d96:	d1 50       	subi	r29, 0x01	; 1
     d98:	11 f4       	brne	.+4      	; 0xd9e <conv_int+0x3c>
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	61 c0       	rjmp	.+194    	; 0xe60 <conv_int+0xfe>
     d9e:	c8 01       	movw	r24, r16
     da0:	4b dd       	rcall	.-1386   	; 0x838 <fgetc>
     da2:	97 fd       	sbrc	r25, 7
     da4:	fa cf       	rjmp	.-12     	; 0xd9a <conv_int+0x38>
     da6:	cb 2d       	mov	r28, r11
     da8:	cd 7f       	andi	r28, 0xFD	; 253
     daa:	2b 2d       	mov	r18, r11
     dac:	20 73       	andi	r18, 0x30	; 48
     dae:	f9 f4       	brne	.+62     	; 0xdee <conv_int+0x8c>
     db0:	80 33       	cpi	r24, 0x30	; 48
     db2:	e9 f4       	brne	.+58     	; 0xdee <conv_int+0x8c>
     db4:	aa 24       	eor	r10, r10
     db6:	aa 94       	dec	r10
     db8:	ad 0e       	add	r10, r29
     dba:	09 f4       	brne	.+2      	; 0xdbe <conv_int+0x5c>
     dbc:	3e c0       	rjmp	.+124    	; 0xe3a <conv_int+0xd8>
     dbe:	c8 01       	movw	r24, r16
     dc0:	3b dd       	rcall	.-1418   	; 0x838 <fgetc>
     dc2:	97 fd       	sbrc	r25, 7
     dc4:	3a c0       	rjmp	.+116    	; 0xe3a <conv_int+0xd8>
     dc6:	9c 01       	movw	r18, r24
     dc8:	2f 7d       	andi	r18, 0xDF	; 223
     dca:	33 27       	eor	r19, r19
     dcc:	28 35       	cpi	r18, 0x58	; 88
     dce:	31 05       	cpc	r19, r1
     dd0:	41 f4       	brne	.+16     	; 0xde2 <conv_int+0x80>
     dd2:	c2 64       	ori	r28, 0x42	; 66
     dd4:	d2 50       	subi	r29, 0x02	; 2
     dd6:	89 f1       	breq	.+98     	; 0xe3a <conv_int+0xd8>
     dd8:	c8 01       	movw	r24, r16
     dda:	2e dd       	rcall	.-1444   	; 0x838 <fgetc>
     ddc:	97 ff       	sbrs	r25, 7
     dde:	07 c0       	rjmp	.+14     	; 0xdee <conv_int+0x8c>
     de0:	2c c0       	rjmp	.+88     	; 0xe3a <conv_int+0xd8>
     de2:	b6 fe       	sbrs	r11, 6
     de4:	02 c0       	rjmp	.+4      	; 0xdea <conv_int+0x88>
     de6:	c2 60       	ori	r28, 0x02	; 2
     de8:	01 c0       	rjmp	.+2      	; 0xdec <conv_int+0x8a>
     dea:	c2 61       	ori	r28, 0x12	; 18
     dec:	da 2d       	mov	r29, r10
     dee:	81 2c       	mov	r8, r1
     df0:	91 2c       	mov	r9, r1
     df2:	54 01       	movw	r10, r8
     df4:	20 ed       	ldi	r18, 0xD0	; 208
     df6:	28 0f       	add	r18, r24
     df8:	28 30       	cpi	r18, 0x08	; 8
     dfa:	78 f0       	brcs	.+30     	; 0xe1a <conv_int+0xb8>
     dfc:	c4 ff       	sbrs	r28, 4
     dfe:	03 c0       	rjmp	.+6      	; 0xe06 <conv_int+0xa4>
     e00:	b8 01       	movw	r22, r16
     e02:	59 d2       	rcall	.+1202   	; 0x12b6 <ungetc>
     e04:	17 c0       	rjmp	.+46     	; 0xe34 <conv_int+0xd2>
     e06:	2a 30       	cpi	r18, 0x0A	; 10
     e08:	40 f0       	brcs	.+16     	; 0xe1a <conv_int+0xb8>
     e0a:	c6 ff       	sbrs	r28, 6
     e0c:	f9 cf       	rjmp	.-14     	; 0xe00 <conv_int+0x9e>
     e0e:	2f 7d       	andi	r18, 0xDF	; 223
     e10:	3f ee       	ldi	r19, 0xEF	; 239
     e12:	32 0f       	add	r19, r18
     e14:	36 30       	cpi	r19, 0x06	; 6
     e16:	a0 f7       	brcc	.-24     	; 0xe00 <conv_int+0x9e>
     e18:	27 50       	subi	r18, 0x07	; 7
     e1a:	4c 2f       	mov	r20, r28
     e1c:	c5 01       	movw	r24, r10
     e1e:	b4 01       	movw	r22, r8
     e20:	63 df       	rcall	.-314    	; 0xce8 <mulacc>
     e22:	4b 01       	movw	r8, r22
     e24:	5c 01       	movw	r10, r24
     e26:	c2 60       	ori	r28, 0x02	; 2
     e28:	d1 50       	subi	r29, 0x01	; 1
     e2a:	51 f0       	breq	.+20     	; 0xe40 <conv_int+0xde>
     e2c:	c8 01       	movw	r24, r16
     e2e:	04 dd       	rcall	.-1528   	; 0x838 <fgetc>
     e30:	97 ff       	sbrs	r25, 7
     e32:	e0 cf       	rjmp	.-64     	; 0xdf4 <conv_int+0x92>
     e34:	c1 fd       	sbrc	r28, 1
     e36:	04 c0       	rjmp	.+8      	; 0xe40 <conv_int+0xde>
     e38:	b0 cf       	rjmp	.-160    	; 0xd9a <conv_int+0x38>
     e3a:	81 2c       	mov	r8, r1
     e3c:	91 2c       	mov	r9, r1
     e3e:	54 01       	movw	r10, r8
     e40:	c7 ff       	sbrs	r28, 7
     e42:	08 c0       	rjmp	.+16     	; 0xe54 <conv_int+0xf2>
     e44:	b0 94       	com	r11
     e46:	a0 94       	com	r10
     e48:	90 94       	com	r9
     e4a:	80 94       	com	r8
     e4c:	81 1c       	adc	r8, r1
     e4e:	91 1c       	adc	r9, r1
     e50:	a1 1c       	adc	r10, r1
     e52:	b1 1c       	adc	r11, r1
     e54:	2c 2f       	mov	r18, r28
     e56:	b5 01       	movw	r22, r10
     e58:	a4 01       	movw	r20, r8
     e5a:	c7 01       	movw	r24, r14
     e5c:	39 df       	rcall	.-398    	; 0xcd0 <putval>
     e5e:	81 e0       	ldi	r24, 0x01	; 1
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	1f 91       	pop	r17
     e66:	0f 91       	pop	r16
     e68:	ff 90       	pop	r15
     e6a:	ef 90       	pop	r14
     e6c:	bf 90       	pop	r11
     e6e:	af 90       	pop	r10
     e70:	9f 90       	pop	r9
     e72:	8f 90       	pop	r8
     e74:	08 95       	ret

00000e76 <conv_brk>:
     e76:	a0 e2       	ldi	r26, 0x20	; 32
     e78:	b0 e0       	ldi	r27, 0x00	; 0
     e7a:	e0 e4       	ldi	r30, 0x40	; 64
     e7c:	f7 e0       	ldi	r31, 0x07	; 7
     e7e:	98 c2       	rjmp	.+1328   	; 0x13b0 <__prologue_saves__+0x6>
     e80:	5c 01       	movw	r10, r24
     e82:	96 2e       	mov	r9, r22
     e84:	7a 01       	movw	r14, r20
     e86:	f9 01       	movw	r30, r18
     e88:	8e 01       	movw	r16, r28
     e8a:	0f 5f       	subi	r16, 0xFF	; 255
     e8c:	1f 4f       	sbci	r17, 0xFF	; 255
     e8e:	68 01       	movw	r12, r16
     e90:	80 e2       	ldi	r24, 0x20	; 32
     e92:	d8 01       	movw	r26, r16
     e94:	1d 92       	st	X+, r1
     e96:	8a 95       	dec	r24
     e98:	e9 f7       	brne	.-6      	; 0xe94 <conv_brk+0x1e>
     e9a:	d5 01       	movw	r26, r10
     e9c:	13 96       	adiw	r26, 0x03	; 3
     e9e:	8c 90       	ld	r8, X
     ea0:	80 e0       	ldi	r24, 0x00	; 0
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	61 2c       	mov	r6, r1
     ea6:	71 2c       	mov	r7, r1
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	61 e0       	ldi	r22, 0x01	; 1
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	83 fc       	sbrc	r8, 3
     eb0:	25 91       	lpm	r18, Z+
     eb2:	83 fe       	sbrs	r8, 3
     eb4:	21 91       	ld	r18, Z+
     eb6:	8f 01       	movw	r16, r30
     eb8:	52 2e       	mov	r5, r18
     eba:	21 11       	cpse	r18, r1
     ebc:	03 c0       	rjmp	.+6      	; 0xec4 <conv_brk+0x4e>
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	90 c0       	rjmp	.+288    	; 0xfe4 <conv_brk+0x16e>
     ec4:	2e 35       	cpi	r18, 0x5E	; 94
     ec6:	11 f4       	brne	.+4      	; 0xecc <conv_brk+0x56>
     ec8:	00 97       	sbiw	r24, 0x00	; 0
     eca:	51 f1       	breq	.+84     	; 0xf20 <conv_brk+0xaa>
     ecc:	43 2f       	mov	r20, r19
     ece:	50 e0       	ldi	r21, 0x00	; 0
     ed0:	48 17       	cp	r20, r24
     ed2:	59 07       	cpc	r21, r25
     ed4:	3c f4       	brge	.+14     	; 0xee4 <conv_brk+0x6e>
     ed6:	2d 35       	cpi	r18, 0x5D	; 93
     ed8:	59 f1       	breq	.+86     	; 0xf30 <conv_brk+0xba>
     eda:	2d 32       	cpi	r18, 0x2D	; 45
     edc:	19 f4       	brne	.+6      	; 0xee4 <conv_brk+0x6e>
     ede:	77 20       	and	r7, r7
     ee0:	09 f1       	breq	.+66     	; 0xf24 <conv_brk+0xae>
     ee2:	03 c0       	rjmp	.+6      	; 0xeea <conv_brk+0x74>
     ee4:	77 20       	and	r7, r7
     ee6:	09 f4       	brne	.+2      	; 0xeea <conv_brk+0x74>
     ee8:	68 c0       	rjmp	.+208    	; 0xfba <conv_brk+0x144>
     eea:	45 2d       	mov	r20, r5
     eec:	46 95       	lsr	r20
     eee:	46 95       	lsr	r20
     ef0:	46 95       	lsr	r20
     ef2:	d6 01       	movw	r26, r12
     ef4:	a4 0f       	add	r26, r20
     ef6:	b1 1d       	adc	r27, r1
     ef8:	45 2d       	mov	r20, r5
     efa:	47 70       	andi	r20, 0x07	; 7
     efc:	8b 01       	movw	r16, r22
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <conv_brk+0x8e>
     f00:	00 0f       	add	r16, r16
     f02:	11 1f       	adc	r17, r17
     f04:	4a 95       	dec	r20
     f06:	e2 f7       	brpl	.-8      	; 0xf00 <conv_brk+0x8a>
     f08:	a8 01       	movw	r20, r16
     f0a:	5c 91       	ld	r21, X
     f0c:	45 2b       	or	r20, r21
     f0e:	4c 93       	st	X, r20
     f10:	65 14       	cp	r6, r5
     f12:	59 f0       	breq	.+22     	; 0xf2a <conv_brk+0xb4>
     f14:	56 14       	cp	r5, r6
     f16:	10 f4       	brcc	.+4      	; 0xf1c <conv_brk+0xa6>
     f18:	53 94       	inc	r5
     f1a:	e7 cf       	rjmp	.-50     	; 0xeea <conv_brk+0x74>
     f1c:	5a 94       	dec	r5
     f1e:	e5 cf       	rjmp	.-54     	; 0xeea <conv_brk+0x74>
     f20:	31 e0       	ldi	r19, 0x01	; 1
     f22:	04 c0       	rjmp	.+8      	; 0xf2c <conv_brk+0xb6>
     f24:	77 24       	eor	r7, r7
     f26:	73 94       	inc	r7
     f28:	01 c0       	rjmp	.+2      	; 0xf2c <conv_brk+0xb6>
     f2a:	71 2c       	mov	r7, r1
     f2c:	01 96       	adiw	r24, 0x01	; 1
     f2e:	bf cf       	rjmp	.-130    	; 0xeae <conv_brk+0x38>
     f30:	77 20       	and	r7, r7
     f32:	19 f0       	breq	.+6      	; 0xf3a <conv_brk+0xc4>
     f34:	8e 81       	ldd	r24, Y+6	; 0x06
     f36:	80 62       	ori	r24, 0x20	; 32
     f38:	8e 83       	std	Y+6, r24	; 0x06
     f3a:	31 11       	cpse	r19, r1
     f3c:	03 c0       	rjmp	.+6      	; 0xf44 <conv_brk+0xce>
     f3e:	88 24       	eor	r8, r8
     f40:	83 94       	inc	r8
     f42:	17 c0       	rjmp	.+46     	; 0xf72 <conv_brk+0xfc>
     f44:	f6 01       	movw	r30, r12
     f46:	9e 01       	movw	r18, r28
     f48:	2f 5d       	subi	r18, 0xDF	; 223
     f4a:	3f 4f       	sbci	r19, 0xFF	; 255
     f4c:	80 81       	ld	r24, Z
     f4e:	80 95       	com	r24
     f50:	81 93       	st	Z+, r24
     f52:	2e 17       	cp	r18, r30
     f54:	3f 07       	cpc	r19, r31
     f56:	d1 f7       	brne	.-12     	; 0xf4c <conv_brk+0xd6>
     f58:	f2 cf       	rjmp	.-28     	; 0xf3e <conv_brk+0xc8>
     f5a:	e1 14       	cp	r14, r1
     f5c:	f1 04       	cpc	r15, r1
     f5e:	29 f0       	breq	.+10     	; 0xf6a <conv_brk+0xf4>
     f60:	d7 01       	movw	r26, r14
     f62:	8c 93       	st	X, r24
     f64:	f7 01       	movw	r30, r14
     f66:	31 96       	adiw	r30, 0x01	; 1
     f68:	7f 01       	movw	r14, r30
     f6a:	9a 94       	dec	r9
     f6c:	81 2c       	mov	r8, r1
     f6e:	99 20       	and	r9, r9
     f70:	e9 f0       	breq	.+58     	; 0xfac <conv_brk+0x136>
     f72:	c5 01       	movw	r24, r10
     f74:	61 dc       	rcall	.-1854   	; 0x838 <fgetc>
     f76:	97 fd       	sbrc	r25, 7
     f78:	17 c0       	rjmp	.+46     	; 0xfa8 <conv_brk+0x132>
     f7a:	fc 01       	movw	r30, r24
     f7c:	ff 27       	eor	r31, r31
     f7e:	23 e0       	ldi	r18, 0x03	; 3
     f80:	f5 95       	asr	r31
     f82:	e7 95       	ror	r30
     f84:	2a 95       	dec	r18
     f86:	e1 f7       	brne	.-8      	; 0xf80 <conv_brk+0x10a>
     f88:	ec 0d       	add	r30, r12
     f8a:	fd 1d       	adc	r31, r13
     f8c:	20 81       	ld	r18, Z
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	ac 01       	movw	r20, r24
     f92:	47 70       	andi	r20, 0x07	; 7
     f94:	55 27       	eor	r21, r21
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <conv_brk+0x126>
     f98:	35 95       	asr	r19
     f9a:	27 95       	ror	r18
     f9c:	4a 95       	dec	r20
     f9e:	e2 f7       	brpl	.-8      	; 0xf98 <conv_brk+0x122>
     fa0:	20 fd       	sbrc	r18, 0
     fa2:	db cf       	rjmp	.-74     	; 0xf5a <conv_brk+0xe4>
     fa4:	b5 01       	movw	r22, r10
     fa6:	87 d1       	rcall	.+782    	; 0x12b6 <ungetc>
     fa8:	81 10       	cpse	r8, r1
     faa:	89 cf       	rjmp	.-238    	; 0xebe <conv_brk+0x48>
     fac:	e1 14       	cp	r14, r1
     fae:	f1 04       	cpc	r15, r1
     fb0:	11 f0       	breq	.+4      	; 0xfb6 <conv_brk+0x140>
     fb2:	d7 01       	movw	r26, r14
     fb4:	1c 92       	st	X, r1
     fb6:	c8 01       	movw	r24, r16
     fb8:	15 c0       	rjmp	.+42     	; 0xfe4 <conv_brk+0x16e>
     fba:	42 2f       	mov	r20, r18
     fbc:	46 95       	lsr	r20
     fbe:	46 95       	lsr	r20
     fc0:	46 95       	lsr	r20
     fc2:	d6 01       	movw	r26, r12
     fc4:	a4 0f       	add	r26, r20
     fc6:	b1 1d       	adc	r27, r1
     fc8:	42 2f       	mov	r20, r18
     fca:	47 70       	andi	r20, 0x07	; 7
     fcc:	8b 01       	movw	r16, r22
     fce:	02 c0       	rjmp	.+4      	; 0xfd4 <conv_brk+0x15e>
     fd0:	00 0f       	add	r16, r16
     fd2:	11 1f       	adc	r17, r17
     fd4:	4a 95       	dec	r20
     fd6:	e2 f7       	brpl	.-8      	; 0xfd0 <conv_brk+0x15a>
     fd8:	a8 01       	movw	r20, r16
     fda:	5c 91       	ld	r21, X
     fdc:	45 2b       	or	r20, r21
     fde:	4c 93       	st	X, r20
     fe0:	62 2e       	mov	r6, r18
     fe2:	a4 cf       	rjmp	.-184    	; 0xf2c <conv_brk+0xb6>
     fe4:	a0 96       	adiw	r28, 0x20	; 32
     fe6:	ef e0       	ldi	r30, 0x0F	; 15
     fe8:	ff c1       	rjmp	.+1022   	; 0x13e8 <__epilogue_restores__+0x6>

00000fea <vfscanf>:
     fea:	a0 e0       	ldi	r26, 0x00	; 0
     fec:	b0 e0       	ldi	r27, 0x00	; 0
     fee:	ea ef       	ldi	r30, 0xFA	; 250
     ff0:	f7 e0       	ldi	r31, 0x07	; 7
     ff2:	de c1       	rjmp	.+956    	; 0x13b0 <__prologue_saves__+0x6>
     ff4:	6c 01       	movw	r12, r24
     ff6:	eb 01       	movw	r28, r22
     ff8:	5a 01       	movw	r10, r20
     ffa:	fc 01       	movw	r30, r24
     ffc:	17 82       	std	Z+7, r1	; 0x07
     ffe:	16 82       	std	Z+6, r1	; 0x06
    1000:	51 2c       	mov	r5, r1
    1002:	f6 01       	movw	r30, r12
    1004:	e3 80       	ldd	r14, Z+3	; 0x03
    1006:	fe 01       	movw	r30, r28
    1008:	e3 fc       	sbrc	r14, 3
    100a:	85 91       	lpm	r24, Z+
    100c:	e3 fe       	sbrs	r14, 3
    100e:	81 91       	ld	r24, Z+
    1010:	18 2f       	mov	r17, r24
    1012:	ef 01       	movw	r28, r30
    1014:	88 23       	and	r24, r24
    1016:	09 f4       	brne	.+2      	; 0x101a <vfscanf+0x30>
    1018:	e0 c0       	rjmp	.+448    	; 0x11da <vfscanf+0x1f0>
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	e7 d0       	rcall	.+462    	; 0x11ec <isspace>
    101e:	89 2b       	or	r24, r25
    1020:	19 f0       	breq	.+6      	; 0x1028 <vfscanf+0x3e>
    1022:	c6 01       	movw	r24, r12
    1024:	88 de       	rcall	.-752    	; 0xd36 <skip_spaces>
    1026:	ed cf       	rjmp	.-38     	; 0x1002 <vfscanf+0x18>
    1028:	15 32       	cpi	r17, 0x25	; 37
    102a:	41 f4       	brne	.+16     	; 0x103c <vfscanf+0x52>
    102c:	fe 01       	movw	r30, r28
    102e:	e3 fc       	sbrc	r14, 3
    1030:	15 91       	lpm	r17, Z+
    1032:	e3 fe       	sbrs	r14, 3
    1034:	11 91       	ld	r17, Z+
    1036:	ef 01       	movw	r28, r30
    1038:	15 32       	cpi	r17, 0x25	; 37
    103a:	71 f4       	brne	.+28     	; 0x1058 <vfscanf+0x6e>
    103c:	c6 01       	movw	r24, r12
    103e:	fc db       	rcall	.-2056   	; 0x838 <fgetc>
    1040:	97 fd       	sbrc	r25, 7
    1042:	c9 c0       	rjmp	.+402    	; 0x11d6 <vfscanf+0x1ec>
    1044:	41 2f       	mov	r20, r17
    1046:	50 e0       	ldi	r21, 0x00	; 0
    1048:	9c 01       	movw	r18, r24
    104a:	33 27       	eor	r19, r19
    104c:	24 17       	cp	r18, r20
    104e:	35 07       	cpc	r19, r21
    1050:	c1 f2       	breq	.-80     	; 0x1002 <vfscanf+0x18>
    1052:	b6 01       	movw	r22, r12
    1054:	30 d1       	rcall	.+608    	; 0x12b6 <ungetc>
    1056:	c1 c0       	rjmp	.+386    	; 0x11da <vfscanf+0x1f0>
    1058:	1a 32       	cpi	r17, 0x2A	; 42
    105a:	39 f4       	brne	.+14     	; 0x106a <vfscanf+0x80>
    105c:	e3 fc       	sbrc	r14, 3
    105e:	15 91       	lpm	r17, Z+
    1060:	e3 fe       	sbrs	r14, 3
    1062:	11 91       	ld	r17, Z+
    1064:	ef 01       	movw	r28, r30
    1066:	01 e0       	ldi	r16, 0x01	; 1
    1068:	01 c0       	rjmp	.+2      	; 0x106c <vfscanf+0x82>
    106a:	00 e0       	ldi	r16, 0x00	; 0
    106c:	f1 2c       	mov	r15, r1
    106e:	20 ed       	ldi	r18, 0xD0	; 208
    1070:	21 0f       	add	r18, r17
    1072:	2a 30       	cpi	r18, 0x0A	; 10
    1074:	78 f4       	brcc	.+30     	; 0x1094 <vfscanf+0xaa>
    1076:	02 60       	ori	r16, 0x02	; 2
    1078:	6f 2d       	mov	r22, r15
    107a:	70 e0       	ldi	r23, 0x00	; 0
    107c:	80 e0       	ldi	r24, 0x00	; 0
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	40 e2       	ldi	r20, 0x20	; 32
    1082:	32 de       	rcall	.-924    	; 0xce8 <mulacc>
    1084:	f6 2e       	mov	r15, r22
    1086:	fe 01       	movw	r30, r28
    1088:	e3 fc       	sbrc	r14, 3
    108a:	15 91       	lpm	r17, Z+
    108c:	e3 fe       	sbrs	r14, 3
    108e:	11 91       	ld	r17, Z+
    1090:	ef 01       	movw	r28, r30
    1092:	ed cf       	rjmp	.-38     	; 0x106e <vfscanf+0x84>
    1094:	01 ff       	sbrs	r16, 1
    1096:	03 c0       	rjmp	.+6      	; 0x109e <vfscanf+0xb4>
    1098:	f1 10       	cpse	r15, r1
    109a:	03 c0       	rjmp	.+6      	; 0x10a2 <vfscanf+0xb8>
    109c:	9e c0       	rjmp	.+316    	; 0x11da <vfscanf+0x1f0>
    109e:	ff 24       	eor	r15, r15
    10a0:	fa 94       	dec	r15
    10a2:	18 36       	cpi	r17, 0x68	; 104
    10a4:	19 f0       	breq	.+6      	; 0x10ac <vfscanf+0xc2>
    10a6:	1c 36       	cpi	r17, 0x6C	; 108
    10a8:	51 f0       	breq	.+20     	; 0x10be <vfscanf+0xd4>
    10aa:	10 c0       	rjmp	.+32     	; 0x10cc <vfscanf+0xe2>
    10ac:	fe 01       	movw	r30, r28
    10ae:	e3 fc       	sbrc	r14, 3
    10b0:	15 91       	lpm	r17, Z+
    10b2:	e3 fe       	sbrs	r14, 3
    10b4:	11 91       	ld	r17, Z+
    10b6:	ef 01       	movw	r28, r30
    10b8:	18 36       	cpi	r17, 0x68	; 104
    10ba:	41 f4       	brne	.+16     	; 0x10cc <vfscanf+0xe2>
    10bc:	08 60       	ori	r16, 0x08	; 8
    10be:	04 60       	ori	r16, 0x04	; 4
    10c0:	fe 01       	movw	r30, r28
    10c2:	e3 fc       	sbrc	r14, 3
    10c4:	15 91       	lpm	r17, Z+
    10c6:	e3 fe       	sbrs	r14, 3
    10c8:	11 91       	ld	r17, Z+
    10ca:	ef 01       	movw	r28, r30
    10cc:	11 23       	and	r17, r17
    10ce:	09 f4       	brne	.+2      	; 0x10d2 <vfscanf+0xe8>
    10d0:	84 c0       	rjmp	.+264    	; 0x11da <vfscanf+0x1f0>
    10d2:	61 2f       	mov	r22, r17
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	88 e6       	ldi	r24, 0x68	; 104
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	90 d0       	rcall	.+288    	; 0x11fc <strchr_P>
    10dc:	89 2b       	or	r24, r25
    10de:	09 f4       	brne	.+2      	; 0x10e2 <vfscanf+0xf8>
    10e0:	7c c0       	rjmp	.+248    	; 0x11da <vfscanf+0x1f0>
    10e2:	00 fd       	sbrc	r16, 0
    10e4:	07 c0       	rjmp	.+14     	; 0x10f4 <vfscanf+0x10a>
    10e6:	f5 01       	movw	r30, r10
    10e8:	80 80       	ld	r8, Z
    10ea:	91 80       	ldd	r9, Z+1	; 0x01
    10ec:	c5 01       	movw	r24, r10
    10ee:	02 96       	adiw	r24, 0x02	; 2
    10f0:	5c 01       	movw	r10, r24
    10f2:	02 c0       	rjmp	.+4      	; 0x10f8 <vfscanf+0x10e>
    10f4:	81 2c       	mov	r8, r1
    10f6:	91 2c       	mov	r9, r1
    10f8:	1e 36       	cpi	r17, 0x6E	; 110
    10fa:	49 f4       	brne	.+18     	; 0x110e <vfscanf+0x124>
    10fc:	f6 01       	movw	r30, r12
    10fe:	46 81       	ldd	r20, Z+6	; 0x06
    1100:	57 81       	ldd	r21, Z+7	; 0x07
    1102:	60 e0       	ldi	r22, 0x00	; 0
    1104:	70 e0       	ldi	r23, 0x00	; 0
    1106:	20 2f       	mov	r18, r16
    1108:	c4 01       	movw	r24, r8
    110a:	e2 dd       	rcall	.-1084   	; 0xcd0 <putval>
    110c:	7a cf       	rjmp	.-268    	; 0x1002 <vfscanf+0x18>
    110e:	13 36       	cpi	r17, 0x63	; 99
    1110:	a1 f4       	brne	.+40     	; 0x113a <vfscanf+0x150>
    1112:	01 fd       	sbrc	r16, 1
    1114:	02 c0       	rjmp	.+4      	; 0x111a <vfscanf+0x130>
    1116:	ff 24       	eor	r15, r15
    1118:	f3 94       	inc	r15
    111a:	c6 01       	movw	r24, r12
    111c:	8d db       	rcall	.-2278   	; 0x838 <fgetc>
    111e:	97 fd       	sbrc	r25, 7
    1120:	5a c0       	rjmp	.+180    	; 0x11d6 <vfscanf+0x1ec>
    1122:	81 14       	cp	r8, r1
    1124:	91 04       	cpc	r9, r1
    1126:	29 f0       	breq	.+10     	; 0x1132 <vfscanf+0x148>
    1128:	f4 01       	movw	r30, r8
    112a:	80 83       	st	Z, r24
    112c:	c4 01       	movw	r24, r8
    112e:	01 96       	adiw	r24, 0x01	; 1
    1130:	4c 01       	movw	r8, r24
    1132:	fa 94       	dec	r15
    1134:	f1 10       	cpse	r15, r1
    1136:	f1 cf       	rjmp	.-30     	; 0x111a <vfscanf+0x130>
    1138:	4a c0       	rjmp	.+148    	; 0x11ce <vfscanf+0x1e4>
    113a:	1b 35       	cpi	r17, 0x5B	; 91
    113c:	51 f4       	brne	.+20     	; 0x1152 <vfscanf+0x168>
    113e:	9e 01       	movw	r18, r28
    1140:	a4 01       	movw	r20, r8
    1142:	6f 2d       	mov	r22, r15
    1144:	c6 01       	movw	r24, r12
    1146:	97 de       	rcall	.-722    	; 0xe76 <conv_brk>
    1148:	ec 01       	movw	r28, r24
    114a:	89 2b       	or	r24, r25
    114c:	09 f0       	breq	.+2      	; 0x1150 <vfscanf+0x166>
    114e:	3f c0       	rjmp	.+126    	; 0x11ce <vfscanf+0x1e4>
    1150:	39 c0       	rjmp	.+114    	; 0x11c4 <vfscanf+0x1da>
    1152:	c6 01       	movw	r24, r12
    1154:	f0 dd       	rcall	.-1056   	; 0xd36 <skip_spaces>
    1156:	97 fd       	sbrc	r25, 7
    1158:	3e c0       	rjmp	.+124    	; 0x11d6 <vfscanf+0x1ec>
    115a:	1f 36       	cpi	r17, 0x6F	; 111
    115c:	49 f1       	breq	.+82     	; 0x11b0 <vfscanf+0x1c6>
    115e:	28 f4       	brcc	.+10     	; 0x116a <vfscanf+0x180>
    1160:	14 36       	cpi	r17, 0x64	; 100
    1162:	21 f1       	breq	.+72     	; 0x11ac <vfscanf+0x1c2>
    1164:	19 36       	cpi	r17, 0x69	; 105
    1166:	39 f1       	breq	.+78     	; 0x11b6 <vfscanf+0x1cc>
    1168:	25 c0       	rjmp	.+74     	; 0x11b4 <vfscanf+0x1ca>
    116a:	13 37       	cpi	r17, 0x73	; 115
    116c:	71 f0       	breq	.+28     	; 0x118a <vfscanf+0x1a0>
    116e:	15 37       	cpi	r17, 0x75	; 117
    1170:	e9 f0       	breq	.+58     	; 0x11ac <vfscanf+0x1c2>
    1172:	20 c0       	rjmp	.+64     	; 0x11b4 <vfscanf+0x1ca>
    1174:	81 14       	cp	r8, r1
    1176:	91 04       	cpc	r9, r1
    1178:	29 f0       	breq	.+10     	; 0x1184 <vfscanf+0x19a>
    117a:	f4 01       	movw	r30, r8
    117c:	60 82       	st	Z, r6
    117e:	c4 01       	movw	r24, r8
    1180:	01 96       	adiw	r24, 0x01	; 1
    1182:	4c 01       	movw	r8, r24
    1184:	fa 94       	dec	r15
    1186:	ff 20       	and	r15, r15
    1188:	59 f0       	breq	.+22     	; 0x11a0 <vfscanf+0x1b6>
    118a:	c6 01       	movw	r24, r12
    118c:	55 db       	rcall	.-2390   	; 0x838 <fgetc>
    118e:	3c 01       	movw	r6, r24
    1190:	97 fd       	sbrc	r25, 7
    1192:	06 c0       	rjmp	.+12     	; 0x11a0 <vfscanf+0x1b6>
    1194:	2b d0       	rcall	.+86     	; 0x11ec <isspace>
    1196:	89 2b       	or	r24, r25
    1198:	69 f3       	breq	.-38     	; 0x1174 <vfscanf+0x18a>
    119a:	b6 01       	movw	r22, r12
    119c:	c3 01       	movw	r24, r6
    119e:	8b d0       	rcall	.+278    	; 0x12b6 <ungetc>
    11a0:	81 14       	cp	r8, r1
    11a2:	91 04       	cpc	r9, r1
    11a4:	a1 f0       	breq	.+40     	; 0x11ce <vfscanf+0x1e4>
    11a6:	f4 01       	movw	r30, r8
    11a8:	10 82       	st	Z, r1
    11aa:	11 c0       	rjmp	.+34     	; 0x11ce <vfscanf+0x1e4>
    11ac:	00 62       	ori	r16, 0x20	; 32
    11ae:	03 c0       	rjmp	.+6      	; 0x11b6 <vfscanf+0x1cc>
    11b0:	00 61       	ori	r16, 0x10	; 16
    11b2:	01 c0       	rjmp	.+2      	; 0x11b6 <vfscanf+0x1cc>
    11b4:	00 64       	ori	r16, 0x40	; 64
    11b6:	20 2f       	mov	r18, r16
    11b8:	a4 01       	movw	r20, r8
    11ba:	6f 2d       	mov	r22, r15
    11bc:	c6 01       	movw	r24, r12
    11be:	d1 dd       	rcall	.-1118   	; 0xd62 <conv_int>
    11c0:	81 11       	cpse	r24, r1
    11c2:	05 c0       	rjmp	.+10     	; 0x11ce <vfscanf+0x1e4>
    11c4:	f6 01       	movw	r30, r12
    11c6:	83 81       	ldd	r24, Z+3	; 0x03
    11c8:	80 73       	andi	r24, 0x30	; 48
    11ca:	29 f4       	brne	.+10     	; 0x11d6 <vfscanf+0x1ec>
    11cc:	06 c0       	rjmp	.+12     	; 0x11da <vfscanf+0x1f0>
    11ce:	00 fd       	sbrc	r16, 0
    11d0:	18 cf       	rjmp	.-464    	; 0x1002 <vfscanf+0x18>
    11d2:	53 94       	inc	r5
    11d4:	16 cf       	rjmp	.-468    	; 0x1002 <vfscanf+0x18>
    11d6:	55 20       	and	r5, r5
    11d8:	19 f0       	breq	.+6      	; 0x11e0 <vfscanf+0x1f6>
    11da:	85 2d       	mov	r24, r5
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	02 c0       	rjmp	.+4      	; 0x11e4 <vfscanf+0x1fa>
    11e0:	8f ef       	ldi	r24, 0xFF	; 255
    11e2:	9f ef       	ldi	r25, 0xFF	; 255
    11e4:	cd b7       	in	r28, 0x3d	; 61
    11e6:	de b7       	in	r29, 0x3e	; 62
    11e8:	ef e0       	ldi	r30, 0x0F	; 15
    11ea:	fe c0       	rjmp	.+508    	; 0x13e8 <__epilogue_restores__+0x6>

000011ec <isspace>:
    11ec:	91 11       	cpse	r25, r1
    11ee:	da c0       	rjmp	.+436    	; 0x13a4 <__ctype_isfalse>
    11f0:	80 32       	cpi	r24, 0x20	; 32
    11f2:	19 f0       	breq	.+6      	; 0x11fa <isspace+0xe>
    11f4:	89 50       	subi	r24, 0x09	; 9
    11f6:	85 50       	subi	r24, 0x05	; 5
    11f8:	d0 f7       	brcc	.-12     	; 0x11ee <isspace+0x2>
    11fa:	08 95       	ret

000011fc <strchr_P>:
    11fc:	fc 01       	movw	r30, r24
    11fe:	05 90       	lpm	r0, Z+
    1200:	06 16       	cp	r0, r22
    1202:	21 f0       	breq	.+8      	; 0x120c <strchr_P+0x10>
    1204:	00 20       	and	r0, r0
    1206:	d9 f7       	brne	.-10     	; 0x11fe <strchr_P+0x2>
    1208:	c0 01       	movw	r24, r0
    120a:	08 95       	ret
    120c:	31 97       	sbiw	r30, 0x01	; 1
    120e:	cf 01       	movw	r24, r30
    1210:	08 95       	ret

00001212 <strnlen_P>:
    1212:	fc 01       	movw	r30, r24
    1214:	05 90       	lpm	r0, Z+
    1216:	61 50       	subi	r22, 0x01	; 1
    1218:	70 40       	sbci	r23, 0x00	; 0
    121a:	01 10       	cpse	r0, r1
    121c:	d8 f7       	brcc	.-10     	; 0x1214 <strnlen_P+0x2>
    121e:	80 95       	com	r24
    1220:	90 95       	com	r25
    1222:	8e 0f       	add	r24, r30
    1224:	9f 1f       	adc	r25, r31
    1226:	08 95       	ret

00001228 <strnlen>:
    1228:	fc 01       	movw	r30, r24
    122a:	61 50       	subi	r22, 0x01	; 1
    122c:	70 40       	sbci	r23, 0x00	; 0
    122e:	01 90       	ld	r0, Z+
    1230:	01 10       	cpse	r0, r1
    1232:	d8 f7       	brcc	.-10     	; 0x122a <strnlen+0x2>
    1234:	80 95       	com	r24
    1236:	90 95       	com	r25
    1238:	8e 0f       	add	r24, r30
    123a:	9f 1f       	adc	r25, r31
    123c:	08 95       	ret

0000123e <fputc>:
    123e:	0f 93       	push	r16
    1240:	1f 93       	push	r17
    1242:	cf 93       	push	r28
    1244:	df 93       	push	r29
    1246:	fb 01       	movw	r30, r22
    1248:	23 81       	ldd	r18, Z+3	; 0x03
    124a:	21 fd       	sbrc	r18, 1
    124c:	03 c0       	rjmp	.+6      	; 0x1254 <fputc+0x16>
    124e:	8f ef       	ldi	r24, 0xFF	; 255
    1250:	9f ef       	ldi	r25, 0xFF	; 255
    1252:	2c c0       	rjmp	.+88     	; 0x12ac <fputc+0x6e>
    1254:	22 ff       	sbrs	r18, 2
    1256:	16 c0       	rjmp	.+44     	; 0x1284 <fputc+0x46>
    1258:	46 81       	ldd	r20, Z+6	; 0x06
    125a:	57 81       	ldd	r21, Z+7	; 0x07
    125c:	24 81       	ldd	r18, Z+4	; 0x04
    125e:	35 81       	ldd	r19, Z+5	; 0x05
    1260:	42 17       	cp	r20, r18
    1262:	53 07       	cpc	r21, r19
    1264:	44 f4       	brge	.+16     	; 0x1276 <fputc+0x38>
    1266:	a0 81       	ld	r26, Z
    1268:	b1 81       	ldd	r27, Z+1	; 0x01
    126a:	9d 01       	movw	r18, r26
    126c:	2f 5f       	subi	r18, 0xFF	; 255
    126e:	3f 4f       	sbci	r19, 0xFF	; 255
    1270:	31 83       	std	Z+1, r19	; 0x01
    1272:	20 83       	st	Z, r18
    1274:	8c 93       	st	X, r24
    1276:	26 81       	ldd	r18, Z+6	; 0x06
    1278:	37 81       	ldd	r19, Z+7	; 0x07
    127a:	2f 5f       	subi	r18, 0xFF	; 255
    127c:	3f 4f       	sbci	r19, 0xFF	; 255
    127e:	37 83       	std	Z+7, r19	; 0x07
    1280:	26 83       	std	Z+6, r18	; 0x06
    1282:	14 c0       	rjmp	.+40     	; 0x12ac <fputc+0x6e>
    1284:	8b 01       	movw	r16, r22
    1286:	ec 01       	movw	r28, r24
    1288:	fb 01       	movw	r30, r22
    128a:	00 84       	ldd	r0, Z+8	; 0x08
    128c:	f1 85       	ldd	r31, Z+9	; 0x09
    128e:	e0 2d       	mov	r30, r0
    1290:	09 95       	icall
    1292:	89 2b       	or	r24, r25
    1294:	e1 f6       	brne	.-72     	; 0x124e <fputc+0x10>
    1296:	d8 01       	movw	r26, r16
    1298:	16 96       	adiw	r26, 0x06	; 6
    129a:	8d 91       	ld	r24, X+
    129c:	9c 91       	ld	r25, X
    129e:	17 97       	sbiw	r26, 0x07	; 7
    12a0:	01 96       	adiw	r24, 0x01	; 1
    12a2:	17 96       	adiw	r26, 0x07	; 7
    12a4:	9c 93       	st	X, r25
    12a6:	8e 93       	st	-X, r24
    12a8:	16 97       	sbiw	r26, 0x06	; 6
    12aa:	ce 01       	movw	r24, r28
    12ac:	df 91       	pop	r29
    12ae:	cf 91       	pop	r28
    12b0:	1f 91       	pop	r17
    12b2:	0f 91       	pop	r16
    12b4:	08 95       	ret

000012b6 <ungetc>:
    12b6:	fb 01       	movw	r30, r22
    12b8:	23 81       	ldd	r18, Z+3	; 0x03
    12ba:	20 ff       	sbrs	r18, 0
    12bc:	12 c0       	rjmp	.+36     	; 0x12e2 <ungetc+0x2c>
    12be:	26 fd       	sbrc	r18, 6
    12c0:	10 c0       	rjmp	.+32     	; 0x12e2 <ungetc+0x2c>
    12c2:	8f 3f       	cpi	r24, 0xFF	; 255
    12c4:	3f ef       	ldi	r19, 0xFF	; 255
    12c6:	93 07       	cpc	r25, r19
    12c8:	61 f0       	breq	.+24     	; 0x12e2 <ungetc+0x2c>
    12ca:	82 83       	std	Z+2, r24	; 0x02
    12cc:	2f 7d       	andi	r18, 0xDF	; 223
    12ce:	20 64       	ori	r18, 0x40	; 64
    12d0:	23 83       	std	Z+3, r18	; 0x03
    12d2:	26 81       	ldd	r18, Z+6	; 0x06
    12d4:	37 81       	ldd	r19, Z+7	; 0x07
    12d6:	21 50       	subi	r18, 0x01	; 1
    12d8:	31 09       	sbc	r19, r1
    12da:	37 83       	std	Z+7, r19	; 0x07
    12dc:	26 83       	std	Z+6, r18	; 0x06
    12de:	99 27       	eor	r25, r25
    12e0:	08 95       	ret
    12e2:	8f ef       	ldi	r24, 0xFF	; 255
    12e4:	9f ef       	ldi	r25, 0xFF	; 255
    12e6:	08 95       	ret

000012e8 <__ultoa_invert>:
    12e8:	fa 01       	movw	r30, r20
    12ea:	aa 27       	eor	r26, r26
    12ec:	28 30       	cpi	r18, 0x08	; 8
    12ee:	51 f1       	breq	.+84     	; 0x1344 <__ultoa_invert+0x5c>
    12f0:	20 31       	cpi	r18, 0x10	; 16
    12f2:	81 f1       	breq	.+96     	; 0x1354 <__ultoa_invert+0x6c>
    12f4:	e8 94       	clt
    12f6:	6f 93       	push	r22
    12f8:	6e 7f       	andi	r22, 0xFE	; 254
    12fa:	6e 5f       	subi	r22, 0xFE	; 254
    12fc:	7f 4f       	sbci	r23, 0xFF	; 255
    12fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1300:	9f 4f       	sbci	r25, 0xFF	; 255
    1302:	af 4f       	sbci	r26, 0xFF	; 255
    1304:	b1 e0       	ldi	r27, 0x01	; 1
    1306:	3e d0       	rcall	.+124    	; 0x1384 <__ultoa_invert+0x9c>
    1308:	b4 e0       	ldi	r27, 0x04	; 4
    130a:	3c d0       	rcall	.+120    	; 0x1384 <__ultoa_invert+0x9c>
    130c:	67 0f       	add	r22, r23
    130e:	78 1f       	adc	r23, r24
    1310:	89 1f       	adc	r24, r25
    1312:	9a 1f       	adc	r25, r26
    1314:	a1 1d       	adc	r26, r1
    1316:	68 0f       	add	r22, r24
    1318:	79 1f       	adc	r23, r25
    131a:	8a 1f       	adc	r24, r26
    131c:	91 1d       	adc	r25, r1
    131e:	a1 1d       	adc	r26, r1
    1320:	6a 0f       	add	r22, r26
    1322:	71 1d       	adc	r23, r1
    1324:	81 1d       	adc	r24, r1
    1326:	91 1d       	adc	r25, r1
    1328:	a1 1d       	adc	r26, r1
    132a:	20 d0       	rcall	.+64     	; 0x136c <__ultoa_invert+0x84>
    132c:	09 f4       	brne	.+2      	; 0x1330 <__ultoa_invert+0x48>
    132e:	68 94       	set
    1330:	3f 91       	pop	r19
    1332:	2a e0       	ldi	r18, 0x0A	; 10
    1334:	26 9f       	mul	r18, r22
    1336:	11 24       	eor	r1, r1
    1338:	30 19       	sub	r19, r0
    133a:	30 5d       	subi	r19, 0xD0	; 208
    133c:	31 93       	st	Z+, r19
    133e:	de f6       	brtc	.-74     	; 0x12f6 <__ultoa_invert+0xe>
    1340:	cf 01       	movw	r24, r30
    1342:	08 95       	ret
    1344:	46 2f       	mov	r20, r22
    1346:	47 70       	andi	r20, 0x07	; 7
    1348:	40 5d       	subi	r20, 0xD0	; 208
    134a:	41 93       	st	Z+, r20
    134c:	b3 e0       	ldi	r27, 0x03	; 3
    134e:	0f d0       	rcall	.+30     	; 0x136e <__ultoa_invert+0x86>
    1350:	c9 f7       	brne	.-14     	; 0x1344 <__ultoa_invert+0x5c>
    1352:	f6 cf       	rjmp	.-20     	; 0x1340 <__ultoa_invert+0x58>
    1354:	46 2f       	mov	r20, r22
    1356:	4f 70       	andi	r20, 0x0F	; 15
    1358:	40 5d       	subi	r20, 0xD0	; 208
    135a:	4a 33       	cpi	r20, 0x3A	; 58
    135c:	18 f0       	brcs	.+6      	; 0x1364 <__ultoa_invert+0x7c>
    135e:	49 5d       	subi	r20, 0xD9	; 217
    1360:	31 fd       	sbrc	r19, 1
    1362:	40 52       	subi	r20, 0x20	; 32
    1364:	41 93       	st	Z+, r20
    1366:	02 d0       	rcall	.+4      	; 0x136c <__ultoa_invert+0x84>
    1368:	a9 f7       	brne	.-22     	; 0x1354 <__ultoa_invert+0x6c>
    136a:	ea cf       	rjmp	.-44     	; 0x1340 <__ultoa_invert+0x58>
    136c:	b4 e0       	ldi	r27, 0x04	; 4
    136e:	a6 95       	lsr	r26
    1370:	97 95       	ror	r25
    1372:	87 95       	ror	r24
    1374:	77 95       	ror	r23
    1376:	67 95       	ror	r22
    1378:	ba 95       	dec	r27
    137a:	c9 f7       	brne	.-14     	; 0x136e <__ultoa_invert+0x86>
    137c:	00 97       	sbiw	r24, 0x00	; 0
    137e:	61 05       	cpc	r22, r1
    1380:	71 05       	cpc	r23, r1
    1382:	08 95       	ret
    1384:	9b 01       	movw	r18, r22
    1386:	ac 01       	movw	r20, r24
    1388:	0a 2e       	mov	r0, r26
    138a:	06 94       	lsr	r0
    138c:	57 95       	ror	r21
    138e:	47 95       	ror	r20
    1390:	37 95       	ror	r19
    1392:	27 95       	ror	r18
    1394:	ba 95       	dec	r27
    1396:	c9 f7       	brne	.-14     	; 0x138a <__ultoa_invert+0xa2>
    1398:	62 0f       	add	r22, r18
    139a:	73 1f       	adc	r23, r19
    139c:	84 1f       	adc	r24, r20
    139e:	95 1f       	adc	r25, r21
    13a0:	a0 1d       	adc	r26, r0
    13a2:	08 95       	ret

000013a4 <__ctype_isfalse>:
    13a4:	99 27       	eor	r25, r25
    13a6:	88 27       	eor	r24, r24

000013a8 <__ctype_istrue>:
    13a8:	08 95       	ret

000013aa <__prologue_saves__>:
    13aa:	2f 92       	push	r2
    13ac:	3f 92       	push	r3
    13ae:	4f 92       	push	r4
    13b0:	5f 92       	push	r5
    13b2:	6f 92       	push	r6
    13b4:	7f 92       	push	r7
    13b6:	8f 92       	push	r8
    13b8:	9f 92       	push	r9
    13ba:	af 92       	push	r10
    13bc:	bf 92       	push	r11
    13be:	cf 92       	push	r12
    13c0:	df 92       	push	r13
    13c2:	ef 92       	push	r14
    13c4:	ff 92       	push	r15
    13c6:	0f 93       	push	r16
    13c8:	1f 93       	push	r17
    13ca:	cf 93       	push	r28
    13cc:	df 93       	push	r29
    13ce:	cd b7       	in	r28, 0x3d	; 61
    13d0:	de b7       	in	r29, 0x3e	; 62
    13d2:	ca 1b       	sub	r28, r26
    13d4:	db 0b       	sbc	r29, r27
    13d6:	0f b6       	in	r0, 0x3f	; 63
    13d8:	f8 94       	cli
    13da:	de bf       	out	0x3e, r29	; 62
    13dc:	0f be       	out	0x3f, r0	; 63
    13de:	cd bf       	out	0x3d, r28	; 61
    13e0:	09 94       	ijmp

000013e2 <__epilogue_restores__>:
    13e2:	2a 88       	ldd	r2, Y+18	; 0x12
    13e4:	39 88       	ldd	r3, Y+17	; 0x11
    13e6:	48 88       	ldd	r4, Y+16	; 0x10
    13e8:	5f 84       	ldd	r5, Y+15	; 0x0f
    13ea:	6e 84       	ldd	r6, Y+14	; 0x0e
    13ec:	7d 84       	ldd	r7, Y+13	; 0x0d
    13ee:	8c 84       	ldd	r8, Y+12	; 0x0c
    13f0:	9b 84       	ldd	r9, Y+11	; 0x0b
    13f2:	aa 84       	ldd	r10, Y+10	; 0x0a
    13f4:	b9 84       	ldd	r11, Y+9	; 0x09
    13f6:	c8 84       	ldd	r12, Y+8	; 0x08
    13f8:	df 80       	ldd	r13, Y+7	; 0x07
    13fa:	ee 80       	ldd	r14, Y+6	; 0x06
    13fc:	fd 80       	ldd	r15, Y+5	; 0x05
    13fe:	0c 81       	ldd	r16, Y+4	; 0x04
    1400:	1b 81       	ldd	r17, Y+3	; 0x03
    1402:	aa 81       	ldd	r26, Y+2	; 0x02
    1404:	b9 81       	ldd	r27, Y+1	; 0x01
    1406:	ce 0f       	add	r28, r30
    1408:	d1 1d       	adc	r29, r1
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	f8 94       	cli
    140e:	de bf       	out	0x3e, r29	; 62
    1410:	0f be       	out	0x3f, r0	; 63
    1412:	cd bf       	out	0x3d, r28	; 61
    1414:	ed 01       	movw	r28, r26
    1416:	08 95       	ret

00001418 <_exit>:
    1418:	f8 94       	cli

0000141a <__stop_program>:
    141a:	ff cf       	rjmp	.-2      	; 0x141a <__stop_program>
