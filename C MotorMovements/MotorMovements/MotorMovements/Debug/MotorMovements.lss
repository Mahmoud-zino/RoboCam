
MotorMovements.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800100  0000146c  00001500  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000146c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  00800156  00800156  00001556  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001556  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  000015f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000da6  00000000  00000000  000016c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000abe  00000000  00000000  0000246a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000869  00000000  00000000  00002f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000294  00000000  00000000  00003794  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005c5  00000000  00000000  00003a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006a0  00000000  00000000  00003fed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  0000468d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	39 c0       	rjmp	.+114    	; 0x74 <__ctors_end>
       2:	00 00       	nop
       4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
       6:	00 00       	nop
       8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
       a:	00 00       	nop
       c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
       e:	00 00       	nop
      10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
      12:	00 00       	nop
      14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
      16:	00 00       	nop
      18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
      1a:	00 00       	nop
      1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
      1e:	00 00       	nop
      20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
      22:	00 00       	nop
      24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
      26:	00 00       	nop
      28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
      2e:	00 00       	nop
      30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
      32:	00 00       	nop
      34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
      36:	00 00       	nop
      38:	4f c1       	rjmp	.+670    	; 0x2d8 <__vector_14>
      3a:	00 00       	nop
      3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
      3e:	00 00       	nop
      40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
      42:	00 00       	nop
      44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
      46:	00 00       	nop
      48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
      4e:	00 00       	nop
      50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
      52:	00 00       	nop
      54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
      56:	00 00       	nop
      58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
      5a:	00 00       	nop
      5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
      5e:	00 00       	nop
      60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
      62:	00 00       	nop
      64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
	...

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	11 e0       	ldi	r17, 0x01	; 1
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	ec e6       	ldi	r30, 0x6C	; 108
      88:	f4 e1       	ldi	r31, 0x14	; 20
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a6 35       	cpi	r26, 0x56	; 86
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	21 e0       	ldi	r18, 0x01	; 1
      98:	a6 e5       	ldi	r26, 0x56	; 86
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a7 37       	cpi	r26, 0x77	; 119
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	1d d0       	rcall	.+58     	; 0xe2 <main>
      a8:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <_exit>

000000ac <__bad_interrupt>:
      ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <clear_buffer>:
#include <string.h>

char tbuffer[25];

void clear_buffer(char *tbuffer)
{
      ae:	fc 01       	movw	r30, r24
      b0:	49 96       	adiw	r24, 0x19	; 25
	for (unsigned char i=0; i < 25; i++)
	{
		tbuffer[i] = '\0';
      b2:	11 92       	st	Z+, r1

char tbuffer[25];

void clear_buffer(char *tbuffer)
{
	for (unsigned char i=0; i < 25; i++)
      b4:	e8 17       	cp	r30, r24
      b6:	f9 07       	cpc	r31, r25
      b8:	e1 f7       	brne	.-8      	; 0xb2 <clear_buffer+0x4>
	{
		tbuffer[i] = '\0';
	}
}
      ba:	08 95       	ret

000000bc <move_motors_to_target>:

unsigned char tDegrees[5] = {SERVO_BASE_START, SERVO_SHOULDER_START, SERVO_ELBOW_START, SERVO_WRIST_START, 0};

void move_motors_to_target()
{
	while(!servo_allMotorsAtTarget(tDegrees))
      bc:	0c c0       	rjmp	.+24     	; 0xd6 <move_motors_to_target+0x1a>
	{
		servo_moveOneStepToTarget(tDegrees);
      be:	80 e0       	ldi	r24, 0x00	; 0
      c0:	91 e0       	ldi	r25, 0x01	; 1
      c2:	63 d2       	rcall	.+1222   	; 0x58a <servo_moveOneStepToTarget>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      c4:	2f ef       	ldi	r18, 0xFF	; 255
      c6:	80 e7       	ldi	r24, 0x70	; 112
      c8:	92 e0       	ldi	r25, 0x02	; 2
      ca:	21 50       	subi	r18, 0x01	; 1
      cc:	80 40       	sbci	r24, 0x00	; 0
      ce:	90 40       	sbci	r25, 0x00	; 0
      d0:	e1 f7       	brne	.-8      	; 0xca <move_motors_to_target+0xe>
      d2:	00 c0       	rjmp	.+0      	; 0xd4 <move_motors_to_target+0x18>
      d4:	00 00       	nop

unsigned char tDegrees[5] = {SERVO_BASE_START, SERVO_SHOULDER_START, SERVO_ELBOW_START, SERVO_WRIST_START, 0};

void move_motors_to_target()
{
	while(!servo_allMotorsAtTarget(tDegrees))
      d6:	80 e0       	ldi	r24, 0x00	; 0
      d8:	91 e0       	ldi	r25, 0x01	; 1
      da:	b5 d1       	rcall	.+874    	; 0x446 <servo_allMotorsAtTarget>
      dc:	88 23       	and	r24, r24
      de:	79 f3       	breq	.-34     	; 0xbe <move_motors_to_target+0x2>
	{
		servo_moveOneStepToTarget(tDegrees);
		_delay_ms(DELAY_TIME);
	}
}
      e0:	08 95       	ret

000000e2 <main>:

int main(void)
{
	uart_init();
      e2:	24 d3       	rcall	.+1608   	; 0x72c <uart_init>
	
	servo_init();
      e4:	f1 d0       	rcall	.+482    	; 0x2c8 <servo_init>
      e6:	2f ef       	ldi	r18, 0xFF	; 255
      e8:	81 ee       	ldi	r24, 0xE1	; 225
      ea:	94 e0       	ldi	r25, 0x04	; 4
      ec:	21 50       	subi	r18, 0x01	; 1
      ee:	80 40       	sbci	r24, 0x00	; 0
      f0:	90 40       	sbci	r25, 0x00	; 0
      f2:	e1 f7       	brne	.-8      	; 0xec <main+0xa>
      f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x14>
      f6:	00 00       	nop
	
	_delay_ms(100);
	
	sei();
      f8:	78 94       	sei
	
	servo_moveToStartPosition();
      fa:	b5 d2       	rcall	.+1386   	; 0x666 <servo_moveToStartPosition>
      fc:	0f 2e       	mov	r0, r31
	unsigned char continueFlag = 0;	

	while(1)
    {
		clear_buffer(tbuffer);
      fe:	f8 e5       	ldi	r31, 0x58	; 88
     100:	ef 2e       	mov	r14, r31
     102:	f1 e0       	ldi	r31, 0x01	; 1
     104:	ff 2e       	mov	r15, r31
     106:	f0 2d       	mov	r31, r0
     108:	c7 e1       	ldi	r28, 0x17	; 23
		continueFlag = 0;
		
		for (unsigned char i = 0;i < 20; i++)
		{
			if(scanf("%c", &tbuffer[i]) != 1)
     10a:	d1 e0       	ldi	r29, 0x01	; 1
     10c:	0f 2e       	mov	r0, r31
			//printf("\n\rError in Bracket Position\n\r");
			continue;
		}
	
		//Read Values and save them in Array
		sscanf(tbuffer,"%*c%3u%*c%*c%3u%*c%*c%3u%*c%*c%3u%*c",&tDegrees[0], &tDegrees[1], &tDegrees[2], &tDegrees[3]);
     10e:	f1 e0       	ldi	r31, 0x01	; 1
     110:	2f 2e       	mov	r2, r31
     112:	f1 e0       	ldi	r31, 0x01	; 1
     114:	3f 2e       	mov	r3, r31
     116:	f0 2d       	mov	r31, r0
     118:	0f 2e       	mov	r0, r31
     11a:	f0 e0       	ldi	r31, 0x00	; 0
     11c:	cf 2e       	mov	r12, r31
     11e:	f1 e0       	ldi	r31, 0x01	; 1
     120:	df 2e       	mov	r13, r31
     122:	f0 2d       	mov	r31, r0
     124:	0f 2e       	mov	r0, r31
     126:	f1 e3       	ldi	r31, 0x31	; 49
     128:	4f 2e       	mov	r4, r31
     12a:	f1 e0       	ldi	r31, 0x01	; 1
     12c:	5f 2e       	mov	r5, r31
     12e:	f0 2d       	mov	r31, r0
     130:	0f 2e       	mov	r0, r31
					break;
				}
				//Get Position (Print position)
				else if(tbuffer[0] == 'G')
				{
					printf("[%3u][%3u][%3u][%3u]\n\r", servo_get_base(), servo_get_shoulder(), servo_get_elbow(), servo_get_wrist());
     132:	fa e1       	ldi	r31, 0x1A	; 26
     134:	6f 2e       	mov	r6, r31
     136:	f1 e0       	ldi	r31, 0x01	; 1
     138:	7f 2e       	mov	r7, r31
     13a:	f0 2d       	mov	r31, r0
	servo_moveToStartPosition();
	unsigned char continueFlag = 0;	

	while(1)
    {
		clear_buffer(tbuffer);
     13c:	c7 01       	movw	r24, r14
     13e:	b7 df       	rcall	.-146    	; 0xae <clear_buffer>
     140:	0f 2e       	mov	r0, r31
     142:	f8 e5       	ldi	r31, 0x58	; 88
     144:	af 2e       	mov	r10, r31
     146:	f1 e0       	ldi	r31, 0x01	; 1
     148:	bf 2e       	mov	r11, r31
     14a:	f0 2d       	mov	r31, r0
     14c:	91 2c       	mov	r9, r1
		continueFlag = 0;
		
		for (unsigned char i = 0;i < 20; i++)
     14e:	bf 92       	push	r11
		{
			if(scanf("%c", &tbuffer[i]) != 1)
     150:	af 92       	push	r10
     152:	df 93       	push	r29
     154:	cf 93       	push	r28
     156:	e9 d3       	rcall	.+2002   	; 0x92a <scanf>
     158:	0f 90       	pop	r0
     15a:	0f 90       	pop	r0
     15c:	0f 90       	pop	r0
     15e:	0f 90       	pop	r0
     160:	01 97       	sbiw	r24, 0x01	; 1
     162:	11 f0       	breq	.+4      	; 0x168 <main+0x86>
			{
				uart_error();
     164:	fc d2       	rcall	.+1528   	; 0x75e <uart_error>
     166:	ea cf       	rjmp	.-44     	; 0x13c <main+0x5a>
				//printf("\n\rError reading letter\n\r");
				
				continueFlag = 1;
				break;
     168:	91 10       	cpse	r9, r1
			}
			
			if(i == 0)
     16a:	2a c0       	rjmp	.+84     	; 0x1c0 <main+0xde>
			{
				//Reset Position
				if(tbuffer[0] == 'R')
     16c:	f7 01       	movw	r30, r14
     16e:	80 81       	ld	r24, Z
     170:	82 35       	cpi	r24, 0x52	; 82
				{
					//printf("esetting motors...\n\r");
					servo_moveToStartPosition();
     172:	11 f4       	brne	.+4      	; 0x178 <main+0x96>
					//printf("Reached destination.\n\r");
					//printf("[%3u][%3u][%3u][%3u]\n\r", servo_get_base(), servo_get_shoulder(), servo_get_elbow(), servo_get_wrist());
					
					continueFlag = 1;
					break;
     174:	78 d2       	rcall	.+1264   	; 0x666 <servo_moveToStartPosition>
				}
				//Get Position (Print position)
				else if(tbuffer[0] == 'G')
     176:	e2 cf       	rjmp	.-60     	; 0x13c <main+0x5a>
				{
					printf("[%3u][%3u][%3u][%3u]\n\r", servo_get_base(), servo_get_shoulder(), servo_get_elbow(), servo_get_wrist());
     178:	87 34       	cpi	r24, 0x47	; 71
     17a:	f1 f4       	brne	.+60     	; 0x1b8 <main+0xd6>
     17c:	53 d1       	rcall	.+678    	; 0x424 <servo_get_wrist>
     17e:	98 2e       	mov	r9, r24
     180:	89 2e       	mov	r8, r25
     182:	3f d1       	rcall	.+638    	; 0x402 <servo_get_elbow>
     184:	b8 2e       	mov	r11, r24
     186:	a9 2e       	mov	r10, r25
     188:	2b d1       	rcall	.+598    	; 0x3e0 <servo_get_shoulder>
     18a:	18 2f       	mov	r17, r24
     18c:	09 2f       	mov	r16, r25
     18e:	17 d1       	rcall	.+558    	; 0x3be <servo_get_base>
     190:	8f 92       	push	r8
     192:	9f 92       	push	r9
     194:	af 92       	push	r10
     196:	bf 92       	push	r11
     198:	0f 93       	push	r16
     19a:	1f 93       	push	r17
     19c:	9f 93       	push	r25
     19e:	8f 93       	push	r24
     1a0:	7f 92       	push	r7
     1a2:	6f 92       	push	r6
     1a4:	af d3       	rcall	.+1886   	; 0x904 <printf>
     1a6:	8d b7       	in	r24, 0x3d	; 61
					
					continueFlag = 1;
					break;
     1a8:	9e b7       	in	r25, 0x3e	; 62
     1aa:	0a 96       	adiw	r24, 0x0a	; 10
     1ac:	0f b6       	in	r0, 0x3f	; 63
     1ae:	f8 94       	cli
     1b0:	9e bf       	out	0x3e, r25	; 62
     1b2:	0f be       	out	0x3f, r0	; 63
     1b4:	8d bf       	out	0x3d, r24	; 61
     1b6:	c2 cf       	rjmp	.-124    	; 0x13c <main+0x5a>
     1b8:	8b 35       	cpi	r24, 0x5B	; 91
				}
				//Error
				else if(tbuffer[0] != '[')
     1ba:	09 f4       	brne	.+2      	; 0x1be <main+0xdc>
     1bc:	6e c0       	rjmp	.+220    	; 0x29a <main+0x1b8>
     1be:	be cf       	rjmp	.-132    	; 0x13c <main+0x5a>
     1c0:	f5 01       	movw	r30, r10
					break;
				}
			}
			
			//Invalid number or char
			if(tbuffer[i] != '[' && tbuffer[i] != ']' && (tbuffer[i] < 48 || tbuffer[i] > 57))
     1c2:	80 81       	ld	r24, Z
     1c4:	ff ef       	ldi	r31, 0xFF	; 255
     1c6:	af 1a       	sub	r10, r31
     1c8:	bf 0a       	sbc	r11, r31
     1ca:	8b 35       	cpi	r24, 0x5B	; 91
     1cc:	31 f0       	breq	.+12     	; 0x1da <main+0xf8>
     1ce:	8d 35       	cpi	r24, 0x5D	; 93
     1d0:	21 f0       	breq	.+8      	; 0x1da <main+0xf8>
     1d2:	80 53       	subi	r24, 0x30	; 48
     1d4:	8a 30       	cpi	r24, 0x0A	; 10
     1d6:	08 f0       	brcs	.+2      	; 0x1da <main+0xf8>
     1d8:	b1 cf       	rjmp	.-158    	; 0x13c <main+0x5a>
     1da:	93 94       	inc	r9
	while(1)
    {
		clear_buffer(tbuffer);
		continueFlag = 0;
		
		for (unsigned char i = 0;i < 20; i++)
     1dc:	24 e1       	ldi	r18, 0x14	; 20
     1de:	92 12       	cpse	r9, r18
     1e0:	b6 cf       	rjmp	.-148    	; 0x14e <main+0x6c>
     1e2:	50 c0       	rjmp	.+160    	; 0x284 <main+0x1a2>
     1e4:	f7 01       	movw	r30, r14
			//printf("\n\rError in Buffer Length\n\r");
			continue;
		}
			
		//Test Brackets Positioning
		if(tbuffer[0] != '[' || tbuffer[5] != '[' || tbuffer[10] != '[' || tbuffer[15] != '['
     1e6:	80 81       	ld	r24, Z
     1e8:	8b 35       	cpi	r24, 0x5B	; 91
     1ea:	09 f0       	breq	.+2      	; 0x1ee <main+0x10c>
     1ec:	a7 cf       	rjmp	.-178    	; 0x13c <main+0x5a>
     1ee:	85 81       	ldd	r24, Z+5	; 0x05
     1f0:	8b 35       	cpi	r24, 0x5B	; 91
     1f2:	09 f0       	breq	.+2      	; 0x1f6 <main+0x114>
     1f4:	a3 cf       	rjmp	.-186    	; 0x13c <main+0x5a>
     1f6:	82 85       	ldd	r24, Z+10	; 0x0a
     1f8:	8b 35       	cpi	r24, 0x5B	; 91
     1fa:	09 f0       	breq	.+2      	; 0x1fe <main+0x11c>
     1fc:	9f cf       	rjmp	.-194    	; 0x13c <main+0x5a>
     1fe:	87 85       	ldd	r24, Z+15	; 0x0f
     200:	8b 35       	cpi	r24, 0x5B	; 91
     202:	09 f0       	breq	.+2      	; 0x206 <main+0x124>
     204:	9b cf       	rjmp	.-202    	; 0x13c <main+0x5a>
     206:	84 81       	ldd	r24, Z+4	; 0x04
		|| tbuffer[4] != ']' || tbuffer[9] != ']' || tbuffer[14] != ']' || tbuffer[19] != ']')
     208:	8d 35       	cpi	r24, 0x5D	; 93
     20a:	09 f0       	breq	.+2      	; 0x20e <main+0x12c>
     20c:	97 cf       	rjmp	.-210    	; 0x13c <main+0x5a>
     20e:	81 85       	ldd	r24, Z+9	; 0x09
     210:	8d 35       	cpi	r24, 0x5D	; 93
     212:	09 f0       	breq	.+2      	; 0x216 <main+0x134>
     214:	93 cf       	rjmp	.-218    	; 0x13c <main+0x5a>
     216:	86 85       	ldd	r24, Z+14	; 0x0e
     218:	8d 35       	cpi	r24, 0x5D	; 93
     21a:	09 f0       	breq	.+2      	; 0x21e <main+0x13c>
     21c:	8f cf       	rjmp	.-226    	; 0x13c <main+0x5a>
     21e:	83 89       	ldd	r24, Z+19	; 0x13
     220:	8d 35       	cpi	r24, 0x5D	; 93
     222:	09 f0       	breq	.+2      	; 0x226 <main+0x144>
     224:	8b cf       	rjmp	.-234    	; 0x13c <main+0x5a>
     226:	83 e0       	ldi	r24, 0x03	; 3
			//printf("\n\rError in Bracket Position\n\r");
			continue;
		}
	
		//Read Values and save them in Array
		sscanf(tbuffer,"%*c%3u%*c%*c%3u%*c%*c%3u%*c%*c%3u%*c",&tDegrees[0], &tDegrees[1], &tDegrees[2], &tDegrees[3]);
     228:	91 e0       	ldi	r25, 0x01	; 1
     22a:	9f 93       	push	r25
     22c:	8f 93       	push	r24
     22e:	82 e0       	ldi	r24, 0x02	; 2
     230:	91 e0       	ldi	r25, 0x01	; 1
     232:	9f 93       	push	r25
     234:	8f 93       	push	r24
     236:	3f 92       	push	r3
     238:	2f 92       	push	r2
     23a:	df 92       	push	r13
     23c:	cf 92       	push	r12
     23e:	5f 92       	push	r5
     240:	4f 92       	push	r4
     242:	ff 92       	push	r15
     244:	ef 92       	push	r14
     246:	84 d3       	rcall	.+1800   	; 0x950 <sscanf>
     248:	8d b7       	in	r24, 0x3d	; 61
		
		if((tDegrees[0] < SERVO_BASE_MIN || tDegrees[0] > SERVO_BASE_MAX) || (tDegrees[1] < SERVO_SHOULDER_MIN || tDegrees[1] > SERVO_SHOULDER_MAX) 
     24a:	9e b7       	in	r25, 0x3e	; 62
     24c:	0c 96       	adiw	r24, 0x0c	; 12
     24e:	0f b6       	in	r0, 0x3f	; 63
     250:	f8 94       	cli
     252:	9e bf       	out	0x3e, r25	; 62
     254:	0f be       	out	0x3f, r0	; 63
     256:	8d bf       	out	0x3d, r24	; 61
     258:	f6 01       	movw	r30, r12
     25a:	80 81       	ld	r24, Z
     25c:	85 3b       	cpi	r24, 0xB5	; 181
     25e:	08 f0       	brcs	.+2      	; 0x262 <main+0x180>
     260:	6d cf       	rjmp	.-294    	; 0x13c <main+0x5a>
     262:	81 81       	ldd	r24, Z+1	; 0x01
     264:	8d 52       	subi	r24, 0x2D	; 45
     266:	84 37       	cpi	r24, 0x74	; 116
     268:	08 f0       	brcs	.+2      	; 0x26c <main+0x18a>
     26a:	68 cf       	rjmp	.-304    	; 0x13c <main+0x5a>
		|| (tDegrees[2] < SERVO_ELBOW_MIN || tDegrees[2] > SERVO_ELBOW_MAX) || (tDegrees[3] < SERVO_WRIST_MIN || tDegrees[3] > SERVO_WRIST_MAX))
     26c:	82 81       	ldd	r24, Z+2	; 0x02
     26e:	8d 52       	subi	r24, 0x2D	; 45
     270:	84 37       	cpi	r24, 0x74	; 116
     272:	08 f0       	brcs	.+2      	; 0x276 <main+0x194>
     274:	63 cf       	rjmp	.-314    	; 0x13c <main+0x5a>
     276:	83 81       	ldd	r24, Z+3	; 0x03
     278:	8d 52       	subi	r24, 0x2D	; 45
     27a:	88 38       	cpi	r24, 0x88	; 136
     27c:	08 f0       	brcs	.+2      	; 0x280 <main+0x19e>
     27e:	5e cf       	rjmp	.-324    	; 0x13c <main+0x5a>
		{
			//printf("\n\rError in Limits\n\r");
			continue;
		}
		
		move_motors_to_target();
     280:	1d df       	rcall	.-454    	; 0xbc <move_motors_to_target>
     282:	5c cf       	rjmp	.-328    	; 0x13c <main+0x5a>
     284:	f7 01       	movw	r30, r14
		
		if(continueFlag)
			continue;
		
		//Check length data
		if(strlen(tbuffer) != 20)
     286:	01 90       	ld	r0, Z+
     288:	00 20       	and	r0, r0
     28a:	e9 f7       	brne	.-6      	; 0x286 <main+0x1a4>
     28c:	ed 56       	subi	r30, 0x6D	; 109
     28e:	f1 40       	sbci	r31, 0x01	; 1
     290:	09 f0       	breq	.+2      	; 0x294 <main+0x1b2>
     292:	54 cf       	rjmp	.-344    	; 0x13c <main+0x5a>
     294:	a7 cf       	rjmp	.-178    	; 0x1e4 <main+0x102>
     296:	93 94       	inc	r9
	while(1)
    {
		clear_buffer(tbuffer);
		continueFlag = 0;
		
		for (unsigned char i = 0;i < 20; i++)
     298:	5a cf       	rjmp	.-332    	; 0x14e <main+0x6c>
     29a:	f5 01       	movw	r30, r10
					break;
				}
			}
			
			//Invalid number or char
			if(tbuffer[i] != '[' && tbuffer[i] != ']' && (tbuffer[i] < 48 || tbuffer[i] > 57))
     29c:	80 81       	ld	r24, Z
     29e:	ff ef       	ldi	r31, 0xFF	; 255
     2a0:	af 1a       	sub	r10, r31
     2a2:	bf 0a       	sbc	r11, r31
     2a4:	8b 35       	cpi	r24, 0x5B	; 91
     2a6:	09 f0       	breq	.+2      	; 0x2aa <main+0x1c8>
     2a8:	92 cf       	rjmp	.-220    	; 0x1ce <main+0xec>
     2aa:	f5 cf       	rjmp	.-22     	; 0x296 <main+0x1b4>

000002ac <timer0_init>:
     2ac:	84 b5       	in	r24, 0x24	; 36
     2ae:	82 60       	ori	r24, 0x02	; 2
     2b0:	84 bd       	out	0x24, r24	; 36
     2b2:	85 b5       	in	r24, 0x25	; 37
     2b4:	82 60       	ori	r24, 0x02	; 2
     2b6:	85 bd       	out	0x25, r24	; 37
     2b8:	83 e1       	ldi	r24, 0x13	; 19
     2ba:	87 bd       	out	0x27, r24	; 39
     2bc:	ee e6       	ldi	r30, 0x6E	; 110
     2be:	f0 e0       	ldi	r31, 0x00	; 0
     2c0:	80 81       	ld	r24, Z
     2c2:	82 60       	ori	r24, 0x02	; 2
     2c4:	80 83       	st	Z, r24
     2c6:	08 95       	ret

000002c8 <servo_init>:
     2c8:	23 9a       	sbi	0x04, 3	; 4
     2ca:	22 9a       	sbi	0x04, 2	; 4
     2cc:	21 9a       	sbi	0x04, 1	; 4
     2ce:	56 9a       	sbi	0x0a, 6	; 10
     2d0:	55 9a       	sbi	0x0a, 5	; 10
     2d2:	ec df       	rcall	.-40     	; 0x2ac <timer0_init>
     2d4:	78 94       	sei
     2d6:	08 95       	ret

000002d8 <__vector_14>:
     2d8:	1f 92       	push	r1
     2da:	0f 92       	push	r0
     2dc:	0f b6       	in	r0, 0x3f	; 63
     2de:	0f 92       	push	r0
     2e0:	11 24       	eor	r1, r1
     2e2:	2f 93       	push	r18
     2e4:	3f 93       	push	r19
     2e6:	4f 93       	push	r20
     2e8:	8f 93       	push	r24
     2ea:	9f 93       	push	r25
     2ec:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__data_end>
     2f0:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <__data_end+0x1>
     2f4:	9c 01       	movw	r18, r24
     2f6:	2f 5f       	subi	r18, 0xFF	; 255
     2f8:	3f 4f       	sbci	r19, 0xFF	; 255
     2fa:	30 93 57 01 	sts	0x0157, r19	; 0x800157 <__data_end+0x1>
     2fe:	20 93 56 01 	sts	0x0156, r18	; 0x800156 <__data_end>
     302:	81 3d       	cpi	r24, 0xD1	; 209
     304:	97 40       	sbci	r25, 0x07	; 7
     306:	48 f0       	brcs	.+18     	; 0x31a <__vector_14+0x42>
     308:	2b 98       	cbi	0x05, 3	; 5
     30a:	2a 98       	cbi	0x05, 2	; 5
     30c:	29 98       	cbi	0x05, 1	; 5
     30e:	5e 98       	cbi	0x0b, 6	; 11
     310:	5d 98       	cbi	0x0b, 5	; 11
     312:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <__data_end+0x1>
     316:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <__data_end>
     31a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__data_end>
     31e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <__data_end+0x1>
     322:	87 3d       	cpi	r24, 0xD7	; 215
     324:	96 40       	sbci	r25, 0x06	; 6
     326:	08 f4       	brcc	.+2      	; 0x32a <__vector_14+0x52>
     328:	40 c0       	rjmp	.+128    	; 0x3aa <__vector_14+0xd2>
     32a:	40 91 05 01 	lds	r20, 0x0105	; 0x800105 <motor_vals>
     32e:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <__data_end>
     332:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <__data_end+0x1>
     336:	8e e9       	ldi	r24, 0x9E	; 158
     338:	97 e0       	ldi	r25, 0x07	; 7
     33a:	84 1b       	sub	r24, r20
     33c:	91 09       	sbc	r25, r1
     33e:	82 17       	cp	r24, r18
     340:	93 07       	cpc	r25, r19
     342:	08 f4       	brcc	.+2      	; 0x346 <__vector_14+0x6e>
     344:	2b 9a       	sbi	0x05, 3	; 5
     346:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <motor_vals+0x1>
     34a:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <__data_end>
     34e:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <__data_end+0x1>
     352:	8e e9       	ldi	r24, 0x9E	; 158
     354:	97 e0       	ldi	r25, 0x07	; 7
     356:	84 1b       	sub	r24, r20
     358:	91 09       	sbc	r25, r1
     35a:	82 17       	cp	r24, r18
     35c:	93 07       	cpc	r25, r19
     35e:	08 f4       	brcc	.+2      	; 0x362 <__vector_14+0x8a>
     360:	2a 9a       	sbi	0x05, 2	; 5
     362:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <motor_vals+0x2>
     366:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <__data_end>
     36a:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <__data_end+0x1>
     36e:	8e e9       	ldi	r24, 0x9E	; 158
     370:	97 e0       	ldi	r25, 0x07	; 7
     372:	84 1b       	sub	r24, r20
     374:	91 09       	sbc	r25, r1
     376:	82 17       	cp	r24, r18
     378:	93 07       	cpc	r25, r19
     37a:	08 f4       	brcc	.+2      	; 0x37e <__vector_14+0xa6>
     37c:	29 9a       	sbi	0x05, 1	; 5
     37e:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <motor_vals+0x3>
     382:	20 91 56 01 	lds	r18, 0x0156	; 0x800156 <__data_end>
     386:	30 91 57 01 	lds	r19, 0x0157	; 0x800157 <__data_end+0x1>
     38a:	8e e9       	ldi	r24, 0x9E	; 158
     38c:	97 e0       	ldi	r25, 0x07	; 7
     38e:	84 1b       	sub	r24, r20
     390:	91 09       	sbc	r25, r1
     392:	82 17       	cp	r24, r18
     394:	93 07       	cpc	r25, r19
     396:	08 f4       	brcc	.+2      	; 0x39a <__vector_14+0xc2>
     398:	5e 9a       	sbi	0x0b, 6	; 11
     39a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__data_end>
     39e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <__data_end+0x1>
     3a2:	86 33       	cpi	r24, 0x36	; 54
     3a4:	97 40       	sbci	r25, 0x07	; 7
     3a6:	08 f0       	brcs	.+2      	; 0x3aa <__vector_14+0xd2>
     3a8:	5d 9a       	sbi	0x0b, 5	; 11
     3aa:	9f 91       	pop	r25
     3ac:	8f 91       	pop	r24
     3ae:	4f 91       	pop	r20
     3b0:	3f 91       	pop	r19
     3b2:	2f 91       	pop	r18
     3b4:	0f 90       	pop	r0
     3b6:	0f be       	out	0x3f, r0	; 63
     3b8:	0f 90       	pop	r0
     3ba:	1f 90       	pop	r1
     3bc:	18 95       	reti

000003be <servo_get_base>:
     3be:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <motor_vals>
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	9c 01       	movw	r18, r24
     3c6:	22 0f       	add	r18, r18
     3c8:	33 1f       	adc	r19, r19
     3ca:	22 0f       	add	r18, r18
     3cc:	33 1f       	adc	r19, r19
     3ce:	22 0f       	add	r18, r18
     3d0:	33 1f       	adc	r19, r19
     3d2:	82 0f       	add	r24, r18
     3d4:	93 1f       	adc	r25, r19
     3d6:	6a e0       	ldi	r22, 0x0A	; 10
     3d8:	70 e0       	ldi	r23, 0x00	; 0
     3da:	ce d1       	rcall	.+924    	; 0x778 <__divmodhi4>
     3dc:	cb 01       	movw	r24, r22
     3de:	08 95       	ret

000003e0 <servo_get_shoulder>:
     3e0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <motor_vals+0x1>
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	9c 01       	movw	r18, r24
     3e8:	22 0f       	add	r18, r18
     3ea:	33 1f       	adc	r19, r19
     3ec:	22 0f       	add	r18, r18
     3ee:	33 1f       	adc	r19, r19
     3f0:	22 0f       	add	r18, r18
     3f2:	33 1f       	adc	r19, r19
     3f4:	82 0f       	add	r24, r18
     3f6:	93 1f       	adc	r25, r19
     3f8:	6a e0       	ldi	r22, 0x0A	; 10
     3fa:	70 e0       	ldi	r23, 0x00	; 0
     3fc:	bd d1       	rcall	.+890    	; 0x778 <__divmodhi4>
     3fe:	cb 01       	movw	r24, r22
     400:	08 95       	ret

00000402 <servo_get_elbow>:
     402:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <motor_vals+0x2>
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	9c 01       	movw	r18, r24
     40a:	22 0f       	add	r18, r18
     40c:	33 1f       	adc	r19, r19
     40e:	22 0f       	add	r18, r18
     410:	33 1f       	adc	r19, r19
     412:	22 0f       	add	r18, r18
     414:	33 1f       	adc	r19, r19
     416:	82 0f       	add	r24, r18
     418:	93 1f       	adc	r25, r19
     41a:	6a e0       	ldi	r22, 0x0A	; 10
     41c:	70 e0       	ldi	r23, 0x00	; 0
     41e:	ac d1       	rcall	.+856    	; 0x778 <__divmodhi4>
     420:	cb 01       	movw	r24, r22
     422:	08 95       	ret

00000424 <servo_get_wrist>:
     424:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <motor_vals+0x3>
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	9c 01       	movw	r18, r24
     42c:	22 0f       	add	r18, r18
     42e:	33 1f       	adc	r19, r19
     430:	22 0f       	add	r18, r18
     432:	33 1f       	adc	r19, r19
     434:	22 0f       	add	r18, r18
     436:	33 1f       	adc	r19, r19
     438:	82 0f       	add	r24, r18
     43a:	93 1f       	adc	r25, r19
     43c:	6a e0       	ldi	r22, 0x0A	; 10
     43e:	70 e0       	ldi	r23, 0x00	; 0
     440:	9b d1       	rcall	.+822    	; 0x778 <__divmodhi4>
     442:	cb 01       	movw	r24, r22
     444:	08 95       	ret

00000446 <servo_allMotorsAtTarget>:
     446:	2f 92       	push	r2
     448:	3f 92       	push	r3
     44a:	4f 92       	push	r4
     44c:	5f 92       	push	r5
     44e:	6f 92       	push	r6
     450:	7f 92       	push	r7
     452:	8f 92       	push	r8
     454:	9f 92       	push	r9
     456:	af 92       	push	r10
     458:	bf 92       	push	r11
     45a:	cf 92       	push	r12
     45c:	df 92       	push	r13
     45e:	ef 92       	push	r14
     460:	ff 92       	push	r15
     462:	0f 93       	push	r16
     464:	1f 93       	push	r17
     466:	cf 93       	push	r28
     468:	df 93       	push	r29
     46a:	ec 01       	movw	r28, r24
     46c:	40 90 05 01 	lds	r4, 0x0105	; 0x800105 <motor_vals>
     470:	51 2c       	mov	r5, r1
     472:	61 2c       	mov	r6, r1
     474:	71 2c       	mov	r7, r1
     476:	88 81       	ld	r24, Y
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	a0 e0       	ldi	r26, 0x00	; 0
     47c:	b0 e0       	ldi	r27, 0x00	; 0
     47e:	88 0f       	add	r24, r24
     480:	99 1f       	adc	r25, r25
     482:	aa 1f       	adc	r26, r26
     484:	bb 1f       	adc	r27, r27
     486:	ac 01       	movw	r20, r24
     488:	bd 01       	movw	r22, r26
     48a:	44 0f       	add	r20, r20
     48c:	55 1f       	adc	r21, r21
     48e:	66 1f       	adc	r22, r22
     490:	77 1f       	adc	r23, r23
     492:	44 0f       	add	r20, r20
     494:	55 1f       	adc	r21, r21
     496:	66 1f       	adc	r22, r22
     498:	77 1f       	adc	r23, r23
     49a:	8c 01       	movw	r16, r24
     49c:	9d 01       	movw	r18, r26
     49e:	04 0f       	add	r16, r20
     4a0:	15 1f       	adc	r17, r21
     4a2:	26 1f       	adc	r18, r22
     4a4:	37 1f       	adc	r19, r23
     4a6:	c9 01       	movw	r24, r18
     4a8:	b8 01       	movw	r22, r16
     4aa:	29 e3       	ldi	r18, 0x39	; 57
     4ac:	3e e8       	ldi	r19, 0x8E	; 142
     4ae:	43 ee       	ldi	r20, 0xE3	; 227
     4b0:	58 e3       	ldi	r21, 0x38	; 56
     4b2:	75 d1       	rcall	.+746    	; 0x79e <__umulsidi3>
     4b4:	00 e2       	ldi	r16, 0x20	; 32
     4b6:	9c d1       	rcall	.+824    	; 0x7f0 <__lshrdi3>
     4b8:	82 2e       	mov	r8, r18
     4ba:	93 2e       	mov	r9, r19
     4bc:	a4 2e       	mov	r10, r20
     4be:	b5 2e       	mov	r11, r21
     4c0:	b6 94       	lsr	r11
     4c2:	a7 94       	ror	r10
     4c4:	97 94       	ror	r9
     4c6:	87 94       	ror	r8
     4c8:	48 14       	cp	r4, r8
     4ca:	59 04       	cpc	r5, r9
     4cc:	6a 04       	cpc	r6, r10
     4ce:	7b 04       	cpc	r7, r11
     4d0:	09 f0       	breq	.+2      	; 0x4d4 <servo_allMotorsAtTarget+0x8e>
     4d2:	45 c0       	rjmp	.+138    	; 0x55e <servo_allMotorsAtTarget+0x118>
     4d4:	5e 01       	movw	r10, r28
     4d6:	1f ef       	ldi	r17, 0xFF	; 255
     4d8:	a1 1a       	sub	r10, r17
     4da:	b1 0a       	sbc	r11, r17
     4dc:	c1 e0       	ldi	r28, 0x01	; 1
     4de:	d0 e0       	ldi	r29, 0x00	; 0
     4e0:	fe 01       	movw	r30, r28
     4e2:	eb 5f       	subi	r30, 0xFB	; 251
     4e4:	fe 4f       	sbci	r31, 0xFE	; 254
     4e6:	c0 80       	ld	r12, Z
     4e8:	f5 01       	movw	r30, r10
     4ea:	81 91       	ld	r24, Z+
     4ec:	5f 01       	movw	r10, r30
     4ee:	d1 2c       	mov	r13, r1
     4f0:	e1 2c       	mov	r14, r1
     4f2:	f1 2c       	mov	r15, r1
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	a0 e0       	ldi	r26, 0x00	; 0
     4f8:	b0 e0       	ldi	r27, 0x00	; 0
     4fa:	88 0f       	add	r24, r24
     4fc:	99 1f       	adc	r25, r25
     4fe:	aa 1f       	adc	r26, r26
     500:	bb 1f       	adc	r27, r27
     502:	ac 01       	movw	r20, r24
     504:	bd 01       	movw	r22, r26
     506:	44 0f       	add	r20, r20
     508:	55 1f       	adc	r21, r21
     50a:	66 1f       	adc	r22, r22
     50c:	77 1f       	adc	r23, r23
     50e:	44 0f       	add	r20, r20
     510:	55 1f       	adc	r21, r21
     512:	66 1f       	adc	r22, r22
     514:	77 1f       	adc	r23, r23
     516:	8c 01       	movw	r16, r24
     518:	9d 01       	movw	r18, r26
     51a:	04 0f       	add	r16, r20
     51c:	15 1f       	adc	r17, r21
     51e:	26 1f       	adc	r18, r22
     520:	37 1f       	adc	r19, r23
     522:	c9 01       	movw	r24, r18
     524:	b8 01       	movw	r22, r16
     526:	29 e3       	ldi	r18, 0x39	; 57
     528:	3e e8       	ldi	r19, 0x8E	; 142
     52a:	43 ee       	ldi	r20, 0xE3	; 227
     52c:	58 e3       	ldi	r21, 0x38	; 56
     52e:	37 d1       	rcall	.+622    	; 0x79e <__umulsidi3>
     530:	00 e2       	ldi	r16, 0x20	; 32
     532:	5e d1       	rcall	.+700    	; 0x7f0 <__lshrdi3>
     534:	22 2e       	mov	r2, r18
     536:	33 2e       	mov	r3, r19
     538:	44 2e       	mov	r4, r20
     53a:	55 2e       	mov	r5, r21
     53c:	d2 01       	movw	r26, r4
     53e:	c1 01       	movw	r24, r2
     540:	b6 95       	lsr	r27
     542:	a7 95       	ror	r26
     544:	97 95       	ror	r25
     546:	87 95       	ror	r24
     548:	c8 16       	cp	r12, r24
     54a:	d9 06       	cpc	r13, r25
     54c:	ea 06       	cpc	r14, r26
     54e:	fb 06       	cpc	r15, r27
     550:	41 f4       	brne	.+16     	; 0x562 <servo_allMotorsAtTarget+0x11c>
     552:	21 96       	adiw	r28, 0x01	; 1
     554:	c4 30       	cpi	r28, 0x04	; 4
     556:	d1 05       	cpc	r29, r1
     558:	19 f6       	brne	.-122    	; 0x4e0 <servo_allMotorsAtTarget+0x9a>
     55a:	81 e0       	ldi	r24, 0x01	; 1
     55c:	03 c0       	rjmp	.+6      	; 0x564 <servo_allMotorsAtTarget+0x11e>
     55e:	80 e0       	ldi	r24, 0x00	; 0
     560:	01 c0       	rjmp	.+2      	; 0x564 <servo_allMotorsAtTarget+0x11e>
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	df 91       	pop	r29
     566:	cf 91       	pop	r28
     568:	1f 91       	pop	r17
     56a:	0f 91       	pop	r16
     56c:	ff 90       	pop	r15
     56e:	ef 90       	pop	r14
     570:	df 90       	pop	r13
     572:	cf 90       	pop	r12
     574:	bf 90       	pop	r11
     576:	af 90       	pop	r10
     578:	9f 90       	pop	r9
     57a:	8f 90       	pop	r8
     57c:	7f 90       	pop	r7
     57e:	6f 90       	pop	r6
     580:	5f 90       	pop	r5
     582:	4f 90       	pop	r4
     584:	3f 90       	pop	r3
     586:	2f 90       	pop	r2
     588:	08 95       	ret

0000058a <servo_moveOneStepToTarget>:
     58a:	4f 92       	push	r4
     58c:	5f 92       	push	r5
     58e:	6f 92       	push	r6
     590:	8f 92       	push	r8
     592:	9f 92       	push	r9
     594:	af 92       	push	r10
     596:	bf 92       	push	r11
     598:	cf 92       	push	r12
     59a:	df 92       	push	r13
     59c:	ef 92       	push	r14
     59e:	ff 92       	push	r15
     5a0:	0f 93       	push	r16
     5a2:	1f 93       	push	r17
     5a4:	cf 93       	push	r28
     5a6:	df 93       	push	r29
     5a8:	2c 01       	movw	r4, r24
     5aa:	c0 e0       	ldi	r28, 0x00	; 0
     5ac:	d0 e0       	ldi	r29, 0x00	; 0
     5ae:	f2 01       	movw	r30, r4
     5b0:	81 91       	ld	r24, Z+
     5b2:	2f 01       	movw	r4, r30
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	a0 e0       	ldi	r26, 0x00	; 0
     5b8:	b0 e0       	ldi	r27, 0x00	; 0
     5ba:	88 0f       	add	r24, r24
     5bc:	99 1f       	adc	r25, r25
     5be:	aa 1f       	adc	r26, r26
     5c0:	bb 1f       	adc	r27, r27
     5c2:	ac 01       	movw	r20, r24
     5c4:	bd 01       	movw	r22, r26
     5c6:	44 0f       	add	r20, r20
     5c8:	55 1f       	adc	r21, r21
     5ca:	66 1f       	adc	r22, r22
     5cc:	77 1f       	adc	r23, r23
     5ce:	44 0f       	add	r20, r20
     5d0:	55 1f       	adc	r21, r21
     5d2:	66 1f       	adc	r22, r22
     5d4:	77 1f       	adc	r23, r23
     5d6:	8c 01       	movw	r16, r24
     5d8:	9d 01       	movw	r18, r26
     5da:	04 0f       	add	r16, r20
     5dc:	15 1f       	adc	r17, r21
     5de:	26 1f       	adc	r18, r22
     5e0:	37 1f       	adc	r19, r23
     5e2:	c9 01       	movw	r24, r18
     5e4:	b8 01       	movw	r22, r16
     5e6:	29 e3       	ldi	r18, 0x39	; 57
     5e8:	3e e8       	ldi	r19, 0x8E	; 142
     5ea:	43 ee       	ldi	r20, 0xE3	; 227
     5ec:	58 e3       	ldi	r21, 0x38	; 56
     5ee:	d7 d0       	rcall	.+430    	; 0x79e <__umulsidi3>
     5f0:	00 e2       	ldi	r16, 0x20	; 32
     5f2:	fe d0       	rcall	.+508    	; 0x7f0 <__lshrdi3>
     5f4:	82 2e       	mov	r8, r18
     5f6:	93 2e       	mov	r9, r19
     5f8:	a4 2e       	mov	r10, r20
     5fa:	b5 2e       	mov	r11, r21
     5fc:	d5 01       	movw	r26, r10
     5fe:	c4 01       	movw	r24, r8
     600:	b6 95       	lsr	r27
     602:	a7 95       	ror	r26
     604:	97 95       	ror	r25
     606:	87 95       	ror	r24
     608:	68 2e       	mov	r6, r24
     60a:	fe 01       	movw	r30, r28
     60c:	eb 5f       	subi	r30, 0xFB	; 251
     60e:	fe 4f       	sbci	r31, 0xFE	; 254
     610:	20 81       	ld	r18, Z
     612:	62 16       	cp	r6, r18
     614:	38 f4       	brcc	.+14     	; 0x624 <servo_moveOneStepToTarget+0x9a>
     616:	fe 01       	movw	r30, r28
     618:	eb 5f       	subi	r30, 0xFB	; 251
     61a:	fe 4f       	sbci	r31, 0xFE	; 254
     61c:	80 81       	ld	r24, Z
     61e:	81 50       	subi	r24, 0x01	; 1
     620:	80 83       	st	Z, r24
     622:	0c c0       	rjmp	.+24     	; 0x63c <servo_moveOneStepToTarget+0xb2>
     624:	fe 01       	movw	r30, r28
     626:	eb 5f       	subi	r30, 0xFB	; 251
     628:	fe 4f       	sbci	r31, 0xFE	; 254
     62a:	20 81       	ld	r18, Z
     62c:	26 15       	cp	r18, r6
     62e:	30 f4       	brcc	.+12     	; 0x63c <servo_moveOneStepToTarget+0xb2>
     630:	fe 01       	movw	r30, r28
     632:	eb 5f       	subi	r30, 0xFB	; 251
     634:	fe 4f       	sbci	r31, 0xFE	; 254
     636:	80 81       	ld	r24, Z
     638:	8f 5f       	subi	r24, 0xFF	; 255
     63a:	80 83       	st	Z, r24
     63c:	21 96       	adiw	r28, 0x01	; 1
     63e:	c4 30       	cpi	r28, 0x04	; 4
     640:	d1 05       	cpc	r29, r1
     642:	09 f0       	breq	.+2      	; 0x646 <servo_moveOneStepToTarget+0xbc>
     644:	b4 cf       	rjmp	.-152    	; 0x5ae <servo_moveOneStepToTarget+0x24>
     646:	df 91       	pop	r29
     648:	cf 91       	pop	r28
     64a:	1f 91       	pop	r17
     64c:	0f 91       	pop	r16
     64e:	ff 90       	pop	r15
     650:	ef 90       	pop	r14
     652:	df 90       	pop	r13
     654:	cf 90       	pop	r12
     656:	bf 90       	pop	r11
     658:	af 90       	pop	r10
     65a:	9f 90       	pop	r9
     65c:	8f 90       	pop	r8
     65e:	6f 90       	pop	r6
     660:	5f 90       	pop	r5
     662:	4f 90       	pop	r4
     664:	08 95       	ret

00000666 <servo_moveToStartPosition>:
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	00 d0       	rcall	.+0      	; 0x66c <servo_moveToStartPosition+0x6>
     66c:	00 d0       	rcall	.+0      	; 0x66e <servo_moveToStartPosition+0x8>
     66e:	cd b7       	in	r28, 0x3d	; 61
     670:	de b7       	in	r29, 0x3e	; 62
     672:	8a e5       	ldi	r24, 0x5A	; 90
     674:	89 83       	std	Y+1, r24	; 0x01
     676:	87 e8       	ldi	r24, 0x87	; 135
     678:	8a 83       	std	Y+2, r24	; 0x02
     67a:	86 e9       	ldi	r24, 0x96	; 150
     67c:	8b 83       	std	Y+3, r24	; 0x03
     67e:	8b e9       	ldi	r24, 0x9B	; 155
     680:	8c 83       	std	Y+4, r24	; 0x04
     682:	0c c0       	rjmp	.+24     	; 0x69c <servo_moveToStartPosition+0x36>
     684:	ce 01       	movw	r24, r28
     686:	01 96       	adiw	r24, 0x01	; 1
     688:	80 df       	rcall	.-256    	; 0x58a <servo_moveOneStepToTarget>
     68a:	2f ef       	ldi	r18, 0xFF	; 255
     68c:	80 e7       	ldi	r24, 0x70	; 112
     68e:	92 e0       	ldi	r25, 0x02	; 2
     690:	21 50       	subi	r18, 0x01	; 1
     692:	80 40       	sbci	r24, 0x00	; 0
     694:	90 40       	sbci	r25, 0x00	; 0
     696:	e1 f7       	brne	.-8      	; 0x690 <servo_moveToStartPosition+0x2a>
     698:	00 c0       	rjmp	.+0      	; 0x69a <servo_moveToStartPosition+0x34>
     69a:	00 00       	nop
     69c:	ce 01       	movw	r24, r28
     69e:	01 96       	adiw	r24, 0x01	; 1
     6a0:	d2 de       	rcall	.-604    	; 0x446 <servo_allMotorsAtTarget>
     6a2:	88 23       	and	r24, r24
     6a4:	79 f3       	breq	.-34     	; 0x684 <servo_moveToStartPosition+0x1e>
     6a6:	0f 90       	pop	r0
     6a8:	0f 90       	pop	r0
     6aa:	0f 90       	pop	r0
     6ac:	0f 90       	pop	r0
     6ae:	df 91       	pop	r29
     6b0:	cf 91       	pop	r28
     6b2:	08 95       	ret

000006b4 <uart_putchar>:
    //  |    Return:    0x00    ->  Transmission complete               |
    //  +---------------------------------------------------------------+
    int uart_putchar(char data, FILE *stream)
    {
        // Wait until last transmission completed
        while(!(UCSR0A & (1<<UDRE0)))
     6b4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     6b8:	95 fd       	sbrc	r25, 5
     6ba:	06 c0       	rjmp	.+12     	; 0x6c8 <uart_putchar+0x14>
     6bc:	e0 ec       	ldi	r30, 0xC0	; 192
     6be:	f0 e0       	ldi	r31, 0x00	; 0
            asm volatile("NOP");
     6c0:	00 00       	nop
    //  |    Return:    0x00    ->  Transmission complete               |
    //  +---------------------------------------------------------------+
    int uart_putchar(char data, FILE *stream)
    {
        // Wait until last transmission completed
        while(!(UCSR0A & (1<<UDRE0)))
     6c2:	90 81       	ld	r25, Z
     6c4:	95 ff       	sbrs	r25, 5
     6c6:	fc cf       	rjmp	.-8      	; 0x6c0 <uart_putchar+0xc>
            asm volatile("NOP");
    
        UDR0 = data; // Write data to transmission register
     6c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    
        // C99 functions needs an int as a return parameter
        return 0;   // Return that there was no fault
    }
     6cc:	80 e0       	ldi	r24, 0x00	; 0
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	08 95       	ret

000006d2 <uart_getchar>:
    //  | Parameter:    stream (ptr)    ->  Datastream                  |
    //  |                                                               |
    //  |    Return:    0x??    ->  data/NUL                            |
    //  +---------------------------------------------------------------+
    int uart_getchar(FILE *stream)
    {
     6d2:	cf 93       	push	r28
        // Wait until data has been received
        while(!(UCSR0A & (1<<RXC0)));
     6d4:	e0 ec       	ldi	r30, 0xC0	; 192
     6d6:	f0 e0       	ldi	r31, 0x00	; 0
     6d8:	80 81       	ld	r24, Z
     6da:	88 23       	and	r24, r24
     6dc:	ec f7       	brge	.-6      	; 0x6d8 <uart_getchar+0x6>
    
        // Ckeck if there was an error
        // Frame error
        if(UCSR0A & (1<<FE0))
     6de:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     6e2:	84 ff       	sbrs	r24, 4
     6e4:	05 c0       	rjmp	.+10     	; 0x6f0 <uart_getchar+0x1e>
        {
            UDR0;        // Clear UART data register
     6e6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
            return 0;   // Return NUL
     6ea:	80 e0       	ldi	r24, 0x00	; 0
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	1c c0       	rjmp	.+56     	; 0x728 <uart_getchar+0x56>
        }
        // Data Overrun error
        else if(UCSR0A & (1<<DOR0))
     6f0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     6f4:	83 ff       	sbrs	r24, 3
     6f6:	05 c0       	rjmp	.+10     	; 0x702 <uart_getchar+0x30>
        {
            UDR0;        // Clear UART data register
     6f8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
            return 0;   // Return NUL
     6fc:	80 e0       	ldi	r24, 0x00	; 0
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	13 c0       	rjmp	.+38     	; 0x728 <uart_getchar+0x56>
        }
        // Parity error
        else if(UCSR0A & (1<<UPE0))
     702:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     706:	82 ff       	sbrs	r24, 2
     708:	05 c0       	rjmp	.+10     	; 0x714 <uart_getchar+0x42>
        {
            UDR0;        // Clear UART data register
     70a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
            return 0;   // Return NUL
     70e:	80 e0       	ldi	r24, 0x00	; 0
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	0a c0       	rjmp	.+20     	; 0x728 <uart_getchar+0x56>
        }
    
        #ifdef UART_RXC_ECHO
            // Write UART data register to data variable
            char data = UDR0;
     714:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
        
            // Send echo of received data to UART 
            uart_putchar(data, stdout);
     718:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <__iob+0x2>
     71c:	70 91 74 01 	lds	r23, 0x0174	; 0x800174 <__iob+0x3>
     720:	8c 2f       	mov	r24, r28
     722:	c8 df       	rcall	.-112    	; 0x6b4 <uart_putchar>
        
            return data;    // Return received data
     724:	8c 2f       	mov	r24, r28
     726:	90 e0       	ldi	r25, 0x00	; 0
        #else
            return UDR0; // Return UART data register
        #endif
    }
     728:	cf 91       	pop	r28
     72a:	08 95       	ret

0000072c <uart_init>:
{   
    // Check which bit sampling mode should be activated
    #if USE_2X
    UCSR0A |= (1<<U2X0);      // Setup 8 samples/bit
    #else
    UCSR0A &= ~(1<<U2X0);     // Setup 16 samples/bit
     72c:	e0 ec       	ldi	r30, 0xC0	; 192
     72e:	f0 e0       	ldi	r31, 0x00	; 0
     730:	80 81       	ld	r24, Z
     732:	8d 7f       	andi	r24, 0xFD	; 253
     734:	80 83       	st	Z, r24
    #endif

    UBRR0H = (0x0F & UBRRH_VALUE);   // Calculated through setbaud.h
     736:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    UBRR0L = UBRRL_VALUE;            // Calculated through setbaud.h
     73a:	87 e6       	ldi	r24, 0x67	; 103
     73c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    
    #if UART_STOPBITS > 1
        SETREG |= (0x08 & (UART_STOPBITS<<3));      // Setup stop bits
    #endif
    
    UCSR0C = SETREG;                 // Write SETREG settings to UCSRC
     740:	86 e8       	ldi	r24, 0x86	; 134
     742:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
    UCSR0B = (1<<RXEN0) | (1<<TXEN0);  // Activate UART transmitter and receiver
     746:	88 e1       	ldi	r24, 0x18	; 24
     748:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
        sei();
    #endif

    // Setup stream to stdout
    #if !defined(UARTTXCIE) && !defined(UARTUDRIE)
        stdout = &std_uart;
     74c:	e1 e7       	ldi	r30, 0x71	; 113
     74e:	f1 e0       	ldi	r31, 0x01	; 1
     750:	89 e0       	ldi	r24, 0x09	; 9
     752:	91 e0       	ldi	r25, 0x01	; 1
     754:	93 83       	std	Z+3, r25	; 0x03
     756:	82 83       	std	Z+2, r24	; 0x02
    #endif
    
    // Setup stream to stdin
    #if !defined(UARTRXCIE)
        stdin = &std_uart;
     758:	91 83       	std	Z+1, r25	; 0x01
     75a:	80 83       	st	Z, r24
     75c:	08 95       	ret

0000075e <uart_error>:

    //  +---------------------------------------------------------------+
    //  |                   UART error handler                          |
    //  +---------------------------------------------------------------+
    void uart_error(void)
    {
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
        clearerr(stdin);    // Clear error on stream
     762:	c1 e7       	ldi	r28, 0x71	; 113
     764:	d1 e0       	ldi	r29, 0x01	; 1
     766:	88 81       	ld	r24, Y
     768:	99 81       	ldd	r25, Y+1	; 0x01
     76a:	89 d0       	rcall	.+274    	; 0x87e <clearerr>
        getchar();          // Remove character from stream
     76c:	88 81       	ld	r24, Y
     76e:	99 81       	ldd	r25, Y+1	; 0x01
     770:	8b d0       	rcall	.+278    	; 0x888 <fgetc>
    }
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	08 95       	ret

00000778 <__divmodhi4>:
     778:	97 fb       	bst	r25, 7
     77a:	07 2e       	mov	r0, r23
     77c:	16 f4       	brtc	.+4      	; 0x782 <__divmodhi4+0xa>
     77e:	00 94       	com	r0
     780:	06 d0       	rcall	.+12     	; 0x78e <__divmodhi4_neg1>
     782:	77 fd       	sbrc	r23, 7
     784:	08 d0       	rcall	.+16     	; 0x796 <__divmodhi4_neg2>
     786:	50 d0       	rcall	.+160    	; 0x828 <__udivmodhi4>
     788:	07 fc       	sbrc	r0, 7
     78a:	05 d0       	rcall	.+10     	; 0x796 <__divmodhi4_neg2>
     78c:	3e f4       	brtc	.+14     	; 0x79c <__divmodhi4_exit>

0000078e <__divmodhi4_neg1>:
     78e:	90 95       	com	r25
     790:	81 95       	neg	r24
     792:	9f 4f       	sbci	r25, 0xFF	; 255
     794:	08 95       	ret

00000796 <__divmodhi4_neg2>:
     796:	70 95       	com	r23
     798:	61 95       	neg	r22
     79a:	7f 4f       	sbci	r23, 0xFF	; 255

0000079c <__divmodhi4_exit>:
     79c:	08 95       	ret

0000079e <__umulsidi3>:
     79e:	e8 94       	clt

000007a0 <__umulsidi3_helper>:
     7a0:	df 93       	push	r29
     7a2:	cf 93       	push	r28
     7a4:	fc 01       	movw	r30, r24
     7a6:	db 01       	movw	r26, r22
     7a8:	53 d0       	rcall	.+166    	; 0x850 <__umulhisi3>
     7aa:	7f 93       	push	r23
     7ac:	6f 93       	push	r22
     7ae:	e9 01       	movw	r28, r18
     7b0:	9a 01       	movw	r18, r20
     7b2:	ac 01       	movw	r20, r24
     7b4:	bf 93       	push	r27
     7b6:	af 93       	push	r26
     7b8:	3f 93       	push	r19
     7ba:	2f 93       	push	r18
     7bc:	df 01       	movw	r26, r30
     7be:	48 d0       	rcall	.+144    	; 0x850 <__umulhisi3>
     7c0:	26 f4       	brtc	.+8      	; 0x7ca <__umulsidi3_helper+0x2a>
     7c2:	6c 1b       	sub	r22, r28
     7c4:	7d 0b       	sbc	r23, r29
     7c6:	82 0b       	sbc	r24, r18
     7c8:	93 0b       	sbc	r25, r19
     7ca:	9e 01       	movw	r18, r28
     7cc:	eb 01       	movw	r28, r22
     7ce:	fc 01       	movw	r30, r24
     7d0:	4e d0       	rcall	.+156    	; 0x86e <__muldi3_6>
     7d2:	af 91       	pop	r26
     7d4:	bf 91       	pop	r27
     7d6:	2f 91       	pop	r18
     7d8:	3f 91       	pop	r19
     7da:	49 d0       	rcall	.+146    	; 0x86e <__muldi3_6>
     7dc:	be 01       	movw	r22, r28
     7de:	cf 01       	movw	r24, r30
     7e0:	f9 01       	movw	r30, r18
     7e2:	2f 91       	pop	r18
     7e4:	3f 91       	pop	r19
     7e6:	cf 91       	pop	r28
     7e8:	df 91       	pop	r29
     7ea:	08 95       	ret

000007ec <__ashrdi3>:
     7ec:	97 fb       	bst	r25, 7
     7ee:	10 f8       	bld	r1, 0

000007f0 <__lshrdi3>:
     7f0:	16 94       	lsr	r1
     7f2:	00 08       	sbc	r0, r0
     7f4:	0f 93       	push	r16
     7f6:	08 30       	cpi	r16, 0x08	; 8
     7f8:	98 f0       	brcs	.+38     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
     7fa:	08 50       	subi	r16, 0x08	; 8
     7fc:	23 2f       	mov	r18, r19
     7fe:	34 2f       	mov	r19, r20
     800:	45 2f       	mov	r20, r21
     802:	56 2f       	mov	r21, r22
     804:	67 2f       	mov	r22, r23
     806:	78 2f       	mov	r23, r24
     808:	89 2f       	mov	r24, r25
     80a:	90 2d       	mov	r25, r0
     80c:	f4 cf       	rjmp	.-24     	; 0x7f6 <__lshrdi3+0x6>
     80e:	05 94       	asr	r0
     810:	97 95       	ror	r25
     812:	87 95       	ror	r24
     814:	77 95       	ror	r23
     816:	67 95       	ror	r22
     818:	57 95       	ror	r21
     81a:	47 95       	ror	r20
     81c:	37 95       	ror	r19
     81e:	27 95       	ror	r18
     820:	0a 95       	dec	r16
     822:	aa f7       	brpl	.-22     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     824:	0f 91       	pop	r16
     826:	08 95       	ret

00000828 <__udivmodhi4>:
     828:	aa 1b       	sub	r26, r26
     82a:	bb 1b       	sub	r27, r27
     82c:	51 e1       	ldi	r21, 0x11	; 17
     82e:	07 c0       	rjmp	.+14     	; 0x83e <__udivmodhi4_ep>

00000830 <__udivmodhi4_loop>:
     830:	aa 1f       	adc	r26, r26
     832:	bb 1f       	adc	r27, r27
     834:	a6 17       	cp	r26, r22
     836:	b7 07       	cpc	r27, r23
     838:	10 f0       	brcs	.+4      	; 0x83e <__udivmodhi4_ep>
     83a:	a6 1b       	sub	r26, r22
     83c:	b7 0b       	sbc	r27, r23

0000083e <__udivmodhi4_ep>:
     83e:	88 1f       	adc	r24, r24
     840:	99 1f       	adc	r25, r25
     842:	5a 95       	dec	r21
     844:	a9 f7       	brne	.-22     	; 0x830 <__udivmodhi4_loop>
     846:	80 95       	com	r24
     848:	90 95       	com	r25
     84a:	bc 01       	movw	r22, r24
     84c:	cd 01       	movw	r24, r26
     84e:	08 95       	ret

00000850 <__umulhisi3>:
     850:	a2 9f       	mul	r26, r18
     852:	b0 01       	movw	r22, r0
     854:	b3 9f       	mul	r27, r19
     856:	c0 01       	movw	r24, r0
     858:	a3 9f       	mul	r26, r19
     85a:	70 0d       	add	r23, r0
     85c:	81 1d       	adc	r24, r1
     85e:	11 24       	eor	r1, r1
     860:	91 1d       	adc	r25, r1
     862:	b2 9f       	mul	r27, r18
     864:	70 0d       	add	r23, r0
     866:	81 1d       	adc	r24, r1
     868:	11 24       	eor	r1, r1
     86a:	91 1d       	adc	r25, r1
     86c:	08 95       	ret

0000086e <__muldi3_6>:
     86e:	f0 df       	rcall	.-32     	; 0x850 <__umulhisi3>
     870:	46 0f       	add	r20, r22
     872:	57 1f       	adc	r21, r23
     874:	c8 1f       	adc	r28, r24
     876:	d9 1f       	adc	r29, r25
     878:	08 f4       	brcc	.+2      	; 0x87c <__muldi3_6+0xe>
     87a:	31 96       	adiw	r30, 0x01	; 1
     87c:	08 95       	ret

0000087e <clearerr>:
     87e:	fc 01       	movw	r30, r24
     880:	93 81       	ldd	r25, Z+3	; 0x03
     882:	9f 7c       	andi	r25, 0xCF	; 207
     884:	93 83       	std	Z+3, r25	; 0x03
     886:	08 95       	ret

00000888 <fgetc>:
     888:	cf 93       	push	r28
     88a:	df 93       	push	r29
     88c:	ec 01       	movw	r28, r24
     88e:	2b 81       	ldd	r18, Y+3	; 0x03
     890:	20 ff       	sbrs	r18, 0
     892:	33 c0       	rjmp	.+102    	; 0x8fa <fgetc+0x72>
     894:	26 ff       	sbrs	r18, 6
     896:	0a c0       	rjmp	.+20     	; 0x8ac <fgetc+0x24>
     898:	2f 7b       	andi	r18, 0xBF	; 191
     89a:	2b 83       	std	Y+3, r18	; 0x03
     89c:	8e 81       	ldd	r24, Y+6	; 0x06
     89e:	9f 81       	ldd	r25, Y+7	; 0x07
     8a0:	01 96       	adiw	r24, 0x01	; 1
     8a2:	9f 83       	std	Y+7, r25	; 0x07
     8a4:	8e 83       	std	Y+6, r24	; 0x06
     8a6:	8a 81       	ldd	r24, Y+2	; 0x02
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	29 c0       	rjmp	.+82     	; 0x8fe <fgetc+0x76>
     8ac:	22 ff       	sbrs	r18, 2
     8ae:	0f c0       	rjmp	.+30     	; 0x8ce <fgetc+0x46>
     8b0:	e8 81       	ld	r30, Y
     8b2:	f9 81       	ldd	r31, Y+1	; 0x01
     8b4:	80 81       	ld	r24, Z
     8b6:	08 2e       	mov	r0, r24
     8b8:	00 0c       	add	r0, r0
     8ba:	99 0b       	sbc	r25, r25
     8bc:	00 97       	sbiw	r24, 0x00	; 0
     8be:	19 f4       	brne	.+6      	; 0x8c6 <fgetc+0x3e>
     8c0:	20 62       	ori	r18, 0x20	; 32
     8c2:	2b 83       	std	Y+3, r18	; 0x03
     8c4:	1a c0       	rjmp	.+52     	; 0x8fa <fgetc+0x72>
     8c6:	31 96       	adiw	r30, 0x01	; 1
     8c8:	f9 83       	std	Y+1, r31	; 0x01
     8ca:	e8 83       	st	Y, r30
     8cc:	0e c0       	rjmp	.+28     	; 0x8ea <fgetc+0x62>
     8ce:	ea 85       	ldd	r30, Y+10	; 0x0a
     8d0:	fb 85       	ldd	r31, Y+11	; 0x0b
     8d2:	09 95       	icall
     8d4:	97 ff       	sbrs	r25, 7
     8d6:	09 c0       	rjmp	.+18     	; 0x8ea <fgetc+0x62>
     8d8:	2b 81       	ldd	r18, Y+3	; 0x03
     8da:	01 96       	adiw	r24, 0x01	; 1
     8dc:	11 f0       	breq	.+4      	; 0x8e2 <fgetc+0x5a>
     8de:	80 e2       	ldi	r24, 0x20	; 32
     8e0:	01 c0       	rjmp	.+2      	; 0x8e4 <fgetc+0x5c>
     8e2:	80 e1       	ldi	r24, 0x10	; 16
     8e4:	82 2b       	or	r24, r18
     8e6:	8b 83       	std	Y+3, r24	; 0x03
     8e8:	08 c0       	rjmp	.+16     	; 0x8fa <fgetc+0x72>
     8ea:	2e 81       	ldd	r18, Y+6	; 0x06
     8ec:	3f 81       	ldd	r19, Y+7	; 0x07
     8ee:	2f 5f       	subi	r18, 0xFF	; 255
     8f0:	3f 4f       	sbci	r19, 0xFF	; 255
     8f2:	3f 83       	std	Y+7, r19	; 0x07
     8f4:	2e 83       	std	Y+6, r18	; 0x06
     8f6:	99 27       	eor	r25, r25
     8f8:	02 c0       	rjmp	.+4      	; 0x8fe <fgetc+0x76>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	9f ef       	ldi	r25, 0xFF	; 255
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	08 95       	ret

00000904 <printf>:
     904:	a0 e0       	ldi	r26, 0x00	; 0
     906:	b0 e0       	ldi	r27, 0x00	; 0
     908:	e7 e8       	ldi	r30, 0x87	; 135
     90a:	f4 e0       	ldi	r31, 0x04	; 4
     90c:	86 c5       	rjmp	.+2828   	; 0x141a <__prologue_saves__+0x20>
     90e:	ae 01       	movw	r20, r28
     910:	4b 5f       	subi	r20, 0xFB	; 251
     912:	5f 4f       	sbci	r21, 0xFF	; 255
     914:	fa 01       	movw	r30, r20
     916:	61 91       	ld	r22, Z+
     918:	71 91       	ld	r23, Z+
     91a:	af 01       	movw	r20, r30
     91c:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <__iob+0x2>
     920:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <__iob+0x3>
     924:	2b d0       	rcall	.+86     	; 0x97c <vfprintf>
     926:	e2 e0       	ldi	r30, 0x02	; 2
     928:	94 c5       	rjmp	.+2856   	; 0x1452 <__epilogue_restores__+0x20>

0000092a <scanf>:
     92a:	a0 e0       	ldi	r26, 0x00	; 0
     92c:	b0 e0       	ldi	r27, 0x00	; 0
     92e:	ea e9       	ldi	r30, 0x9A	; 154
     930:	f4 e0       	ldi	r31, 0x04	; 4
     932:	73 c5       	rjmp	.+2790   	; 0x141a <__prologue_saves__+0x20>
     934:	ae 01       	movw	r20, r28
     936:	4b 5f       	subi	r20, 0xFB	; 251
     938:	5f 4f       	sbci	r21, 0xFF	; 255
     93a:	fa 01       	movw	r30, r20
     93c:	61 91       	ld	r22, Z+
     93e:	71 91       	ld	r23, Z+
     940:	af 01       	movw	r20, r30
     942:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <__iob>
     946:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <__iob+0x1>
     94a:	77 d3       	rcall	.+1774   	; 0x103a <vfscanf>
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	81 c5       	rjmp	.+2818   	; 0x1452 <__epilogue_restores__+0x20>

00000950 <sscanf>:
     950:	ae e0       	ldi	r26, 0x0E	; 14
     952:	b0 e0       	ldi	r27, 0x00	; 0
     954:	ed ea       	ldi	r30, 0xAD	; 173
     956:	f4 e0       	ldi	r31, 0x04	; 4
     958:	60 c5       	rjmp	.+2752   	; 0x141a <__prologue_saves__+0x20>
     95a:	85 e0       	ldi	r24, 0x05	; 5
     95c:	8c 83       	std	Y+4, r24	; 0x04
     95e:	8b 89       	ldd	r24, Y+19	; 0x13
     960:	9c 89       	ldd	r25, Y+20	; 0x14
     962:	9a 83       	std	Y+2, r25	; 0x02
     964:	89 83       	std	Y+1, r24	; 0x01
     966:	ae 01       	movw	r20, r28
     968:	49 5e       	subi	r20, 0xE9	; 233
     96a:	5f 4f       	sbci	r21, 0xFF	; 255
     96c:	6d 89       	ldd	r22, Y+21	; 0x15
     96e:	7e 89       	ldd	r23, Y+22	; 0x16
     970:	ce 01       	movw	r24, r28
     972:	01 96       	adiw	r24, 0x01	; 1
     974:	62 d3       	rcall	.+1732   	; 0x103a <vfscanf>
     976:	2e 96       	adiw	r28, 0x0e	; 14
     978:	e2 e0       	ldi	r30, 0x02	; 2
     97a:	6b c5       	rjmp	.+2774   	; 0x1452 <__epilogue_restores__+0x20>

0000097c <vfprintf>:
     97c:	ab e0       	ldi	r26, 0x0B	; 11
     97e:	b0 e0       	ldi	r27, 0x00	; 0
     980:	e3 ec       	ldi	r30, 0xC3	; 195
     982:	f4 e0       	ldi	r31, 0x04	; 4
     984:	3a c5       	rjmp	.+2676   	; 0x13fa <__prologue_saves__>
     986:	6c 01       	movw	r12, r24
     988:	7b 01       	movw	r14, r22
     98a:	8a 01       	movw	r16, r20
     98c:	fc 01       	movw	r30, r24
     98e:	17 82       	std	Z+7, r1	; 0x07
     990:	16 82       	std	Z+6, r1	; 0x06
     992:	83 81       	ldd	r24, Z+3	; 0x03
     994:	81 ff       	sbrs	r24, 1
     996:	bf c1       	rjmp	.+894    	; 0xd16 <vfprintf+0x39a>
     998:	ce 01       	movw	r24, r28
     99a:	01 96       	adiw	r24, 0x01	; 1
     99c:	3c 01       	movw	r6, r24
     99e:	f6 01       	movw	r30, r12
     9a0:	93 81       	ldd	r25, Z+3	; 0x03
     9a2:	f7 01       	movw	r30, r14
     9a4:	93 fd       	sbrc	r25, 3
     9a6:	85 91       	lpm	r24, Z+
     9a8:	93 ff       	sbrs	r25, 3
     9aa:	81 91       	ld	r24, Z+
     9ac:	7f 01       	movw	r14, r30
     9ae:	88 23       	and	r24, r24
     9b0:	09 f4       	brne	.+2      	; 0x9b4 <vfprintf+0x38>
     9b2:	ad c1       	rjmp	.+858    	; 0xd0e <vfprintf+0x392>
     9b4:	85 32       	cpi	r24, 0x25	; 37
     9b6:	39 f4       	brne	.+14     	; 0x9c6 <vfprintf+0x4a>
     9b8:	93 fd       	sbrc	r25, 3
     9ba:	85 91       	lpm	r24, Z+
     9bc:	93 ff       	sbrs	r25, 3
     9be:	81 91       	ld	r24, Z+
     9c0:	7f 01       	movw	r14, r30
     9c2:	85 32       	cpi	r24, 0x25	; 37
     9c4:	21 f4       	brne	.+8      	; 0x9ce <vfprintf+0x52>
     9c6:	b6 01       	movw	r22, r12
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	61 d4       	rcall	.+2242   	; 0x128e <fputc>
     9cc:	e8 cf       	rjmp	.-48     	; 0x99e <vfprintf+0x22>
     9ce:	91 2c       	mov	r9, r1
     9d0:	21 2c       	mov	r2, r1
     9d2:	31 2c       	mov	r3, r1
     9d4:	ff e1       	ldi	r31, 0x1F	; 31
     9d6:	f3 15       	cp	r31, r3
     9d8:	d8 f0       	brcs	.+54     	; 0xa10 <vfprintf+0x94>
     9da:	8b 32       	cpi	r24, 0x2B	; 43
     9dc:	79 f0       	breq	.+30     	; 0x9fc <vfprintf+0x80>
     9de:	38 f4       	brcc	.+14     	; 0x9ee <vfprintf+0x72>
     9e0:	80 32       	cpi	r24, 0x20	; 32
     9e2:	79 f0       	breq	.+30     	; 0xa02 <vfprintf+0x86>
     9e4:	83 32       	cpi	r24, 0x23	; 35
     9e6:	a1 f4       	brne	.+40     	; 0xa10 <vfprintf+0x94>
     9e8:	23 2d       	mov	r18, r3
     9ea:	20 61       	ori	r18, 0x10	; 16
     9ec:	1d c0       	rjmp	.+58     	; 0xa28 <vfprintf+0xac>
     9ee:	8d 32       	cpi	r24, 0x2D	; 45
     9f0:	61 f0       	breq	.+24     	; 0xa0a <vfprintf+0x8e>
     9f2:	80 33       	cpi	r24, 0x30	; 48
     9f4:	69 f4       	brne	.+26     	; 0xa10 <vfprintf+0x94>
     9f6:	23 2d       	mov	r18, r3
     9f8:	21 60       	ori	r18, 0x01	; 1
     9fa:	16 c0       	rjmp	.+44     	; 0xa28 <vfprintf+0xac>
     9fc:	83 2d       	mov	r24, r3
     9fe:	82 60       	ori	r24, 0x02	; 2
     a00:	38 2e       	mov	r3, r24
     a02:	e3 2d       	mov	r30, r3
     a04:	e4 60       	ori	r30, 0x04	; 4
     a06:	3e 2e       	mov	r3, r30
     a08:	2a c0       	rjmp	.+84     	; 0xa5e <vfprintf+0xe2>
     a0a:	f3 2d       	mov	r31, r3
     a0c:	f8 60       	ori	r31, 0x08	; 8
     a0e:	1d c0       	rjmp	.+58     	; 0xa4a <vfprintf+0xce>
     a10:	37 fc       	sbrc	r3, 7
     a12:	2d c0       	rjmp	.+90     	; 0xa6e <vfprintf+0xf2>
     a14:	20 ed       	ldi	r18, 0xD0	; 208
     a16:	28 0f       	add	r18, r24
     a18:	2a 30       	cpi	r18, 0x0A	; 10
     a1a:	40 f0       	brcs	.+16     	; 0xa2c <vfprintf+0xb0>
     a1c:	8e 32       	cpi	r24, 0x2E	; 46
     a1e:	b9 f4       	brne	.+46     	; 0xa4e <vfprintf+0xd2>
     a20:	36 fc       	sbrc	r3, 6
     a22:	75 c1       	rjmp	.+746    	; 0xd0e <vfprintf+0x392>
     a24:	23 2d       	mov	r18, r3
     a26:	20 64       	ori	r18, 0x40	; 64
     a28:	32 2e       	mov	r3, r18
     a2a:	19 c0       	rjmp	.+50     	; 0xa5e <vfprintf+0xe2>
     a2c:	36 fe       	sbrs	r3, 6
     a2e:	06 c0       	rjmp	.+12     	; 0xa3c <vfprintf+0xc0>
     a30:	8a e0       	ldi	r24, 0x0A	; 10
     a32:	98 9e       	mul	r9, r24
     a34:	20 0d       	add	r18, r0
     a36:	11 24       	eor	r1, r1
     a38:	92 2e       	mov	r9, r18
     a3a:	11 c0       	rjmp	.+34     	; 0xa5e <vfprintf+0xe2>
     a3c:	ea e0       	ldi	r30, 0x0A	; 10
     a3e:	2e 9e       	mul	r2, r30
     a40:	20 0d       	add	r18, r0
     a42:	11 24       	eor	r1, r1
     a44:	22 2e       	mov	r2, r18
     a46:	f3 2d       	mov	r31, r3
     a48:	f0 62       	ori	r31, 0x20	; 32
     a4a:	3f 2e       	mov	r3, r31
     a4c:	08 c0       	rjmp	.+16     	; 0xa5e <vfprintf+0xe2>
     a4e:	8c 36       	cpi	r24, 0x6C	; 108
     a50:	21 f4       	brne	.+8      	; 0xa5a <vfprintf+0xde>
     a52:	83 2d       	mov	r24, r3
     a54:	80 68       	ori	r24, 0x80	; 128
     a56:	38 2e       	mov	r3, r24
     a58:	02 c0       	rjmp	.+4      	; 0xa5e <vfprintf+0xe2>
     a5a:	88 36       	cpi	r24, 0x68	; 104
     a5c:	41 f4       	brne	.+16     	; 0xa6e <vfprintf+0xf2>
     a5e:	f7 01       	movw	r30, r14
     a60:	93 fd       	sbrc	r25, 3
     a62:	85 91       	lpm	r24, Z+
     a64:	93 ff       	sbrs	r25, 3
     a66:	81 91       	ld	r24, Z+
     a68:	7f 01       	movw	r14, r30
     a6a:	81 11       	cpse	r24, r1
     a6c:	b3 cf       	rjmp	.-154    	; 0x9d4 <vfprintf+0x58>
     a6e:	98 2f       	mov	r25, r24
     a70:	9f 7d       	andi	r25, 0xDF	; 223
     a72:	95 54       	subi	r25, 0x45	; 69
     a74:	93 30       	cpi	r25, 0x03	; 3
     a76:	28 f4       	brcc	.+10     	; 0xa82 <vfprintf+0x106>
     a78:	0c 5f       	subi	r16, 0xFC	; 252
     a7a:	1f 4f       	sbci	r17, 0xFF	; 255
     a7c:	9f e3       	ldi	r25, 0x3F	; 63
     a7e:	99 83       	std	Y+1, r25	; 0x01
     a80:	0d c0       	rjmp	.+26     	; 0xa9c <vfprintf+0x120>
     a82:	83 36       	cpi	r24, 0x63	; 99
     a84:	31 f0       	breq	.+12     	; 0xa92 <vfprintf+0x116>
     a86:	83 37       	cpi	r24, 0x73	; 115
     a88:	71 f0       	breq	.+28     	; 0xaa6 <vfprintf+0x12a>
     a8a:	83 35       	cpi	r24, 0x53	; 83
     a8c:	09 f0       	breq	.+2      	; 0xa90 <vfprintf+0x114>
     a8e:	55 c0       	rjmp	.+170    	; 0xb3a <vfprintf+0x1be>
     a90:	20 c0       	rjmp	.+64     	; 0xad2 <vfprintf+0x156>
     a92:	f8 01       	movw	r30, r16
     a94:	80 81       	ld	r24, Z
     a96:	89 83       	std	Y+1, r24	; 0x01
     a98:	0e 5f       	subi	r16, 0xFE	; 254
     a9a:	1f 4f       	sbci	r17, 0xFF	; 255
     a9c:	88 24       	eor	r8, r8
     a9e:	83 94       	inc	r8
     aa0:	91 2c       	mov	r9, r1
     aa2:	53 01       	movw	r10, r6
     aa4:	12 c0       	rjmp	.+36     	; 0xaca <vfprintf+0x14e>
     aa6:	28 01       	movw	r4, r16
     aa8:	f2 e0       	ldi	r31, 0x02	; 2
     aaa:	4f 0e       	add	r4, r31
     aac:	51 1c       	adc	r5, r1
     aae:	f8 01       	movw	r30, r16
     ab0:	a0 80       	ld	r10, Z
     ab2:	b1 80       	ldd	r11, Z+1	; 0x01
     ab4:	36 fe       	sbrs	r3, 6
     ab6:	03 c0       	rjmp	.+6      	; 0xabe <vfprintf+0x142>
     ab8:	69 2d       	mov	r22, r9
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	02 c0       	rjmp	.+4      	; 0xac2 <vfprintf+0x146>
     abe:	6f ef       	ldi	r22, 0xFF	; 255
     ac0:	7f ef       	ldi	r23, 0xFF	; 255
     ac2:	c5 01       	movw	r24, r10
     ac4:	d9 d3       	rcall	.+1970   	; 0x1278 <strnlen>
     ac6:	4c 01       	movw	r8, r24
     ac8:	82 01       	movw	r16, r4
     aca:	f3 2d       	mov	r31, r3
     acc:	ff 77       	andi	r31, 0x7F	; 127
     ace:	3f 2e       	mov	r3, r31
     ad0:	15 c0       	rjmp	.+42     	; 0xafc <vfprintf+0x180>
     ad2:	28 01       	movw	r4, r16
     ad4:	22 e0       	ldi	r18, 0x02	; 2
     ad6:	42 0e       	add	r4, r18
     ad8:	51 1c       	adc	r5, r1
     ada:	f8 01       	movw	r30, r16
     adc:	a0 80       	ld	r10, Z
     ade:	b1 80       	ldd	r11, Z+1	; 0x01
     ae0:	36 fe       	sbrs	r3, 6
     ae2:	03 c0       	rjmp	.+6      	; 0xaea <vfprintf+0x16e>
     ae4:	69 2d       	mov	r22, r9
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	02 c0       	rjmp	.+4      	; 0xaee <vfprintf+0x172>
     aea:	6f ef       	ldi	r22, 0xFF	; 255
     aec:	7f ef       	ldi	r23, 0xFF	; 255
     aee:	c5 01       	movw	r24, r10
     af0:	b8 d3       	rcall	.+1904   	; 0x1262 <strnlen_P>
     af2:	4c 01       	movw	r8, r24
     af4:	f3 2d       	mov	r31, r3
     af6:	f0 68       	ori	r31, 0x80	; 128
     af8:	3f 2e       	mov	r3, r31
     afa:	82 01       	movw	r16, r4
     afc:	33 fc       	sbrc	r3, 3
     afe:	19 c0       	rjmp	.+50     	; 0xb32 <vfprintf+0x1b6>
     b00:	82 2d       	mov	r24, r2
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	88 16       	cp	r8, r24
     b06:	99 06       	cpc	r9, r25
     b08:	a0 f4       	brcc	.+40     	; 0xb32 <vfprintf+0x1b6>
     b0a:	b6 01       	movw	r22, r12
     b0c:	80 e2       	ldi	r24, 0x20	; 32
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	be d3       	rcall	.+1916   	; 0x128e <fputc>
     b12:	2a 94       	dec	r2
     b14:	f5 cf       	rjmp	.-22     	; 0xb00 <vfprintf+0x184>
     b16:	f5 01       	movw	r30, r10
     b18:	37 fc       	sbrc	r3, 7
     b1a:	85 91       	lpm	r24, Z+
     b1c:	37 fe       	sbrs	r3, 7
     b1e:	81 91       	ld	r24, Z+
     b20:	5f 01       	movw	r10, r30
     b22:	b6 01       	movw	r22, r12
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	b3 d3       	rcall	.+1894   	; 0x128e <fputc>
     b28:	21 10       	cpse	r2, r1
     b2a:	2a 94       	dec	r2
     b2c:	21 e0       	ldi	r18, 0x01	; 1
     b2e:	82 1a       	sub	r8, r18
     b30:	91 08       	sbc	r9, r1
     b32:	81 14       	cp	r8, r1
     b34:	91 04       	cpc	r9, r1
     b36:	79 f7       	brne	.-34     	; 0xb16 <vfprintf+0x19a>
     b38:	e1 c0       	rjmp	.+450    	; 0xcfc <vfprintf+0x380>
     b3a:	84 36       	cpi	r24, 0x64	; 100
     b3c:	11 f0       	breq	.+4      	; 0xb42 <vfprintf+0x1c6>
     b3e:	89 36       	cpi	r24, 0x69	; 105
     b40:	39 f5       	brne	.+78     	; 0xb90 <vfprintf+0x214>
     b42:	f8 01       	movw	r30, r16
     b44:	37 fe       	sbrs	r3, 7
     b46:	07 c0       	rjmp	.+14     	; 0xb56 <vfprintf+0x1da>
     b48:	60 81       	ld	r22, Z
     b4a:	71 81       	ldd	r23, Z+1	; 0x01
     b4c:	82 81       	ldd	r24, Z+2	; 0x02
     b4e:	93 81       	ldd	r25, Z+3	; 0x03
     b50:	0c 5f       	subi	r16, 0xFC	; 252
     b52:	1f 4f       	sbci	r17, 0xFF	; 255
     b54:	08 c0       	rjmp	.+16     	; 0xb66 <vfprintf+0x1ea>
     b56:	60 81       	ld	r22, Z
     b58:	71 81       	ldd	r23, Z+1	; 0x01
     b5a:	07 2e       	mov	r0, r23
     b5c:	00 0c       	add	r0, r0
     b5e:	88 0b       	sbc	r24, r24
     b60:	99 0b       	sbc	r25, r25
     b62:	0e 5f       	subi	r16, 0xFE	; 254
     b64:	1f 4f       	sbci	r17, 0xFF	; 255
     b66:	f3 2d       	mov	r31, r3
     b68:	ff 76       	andi	r31, 0x6F	; 111
     b6a:	3f 2e       	mov	r3, r31
     b6c:	97 ff       	sbrs	r25, 7
     b6e:	09 c0       	rjmp	.+18     	; 0xb82 <vfprintf+0x206>
     b70:	90 95       	com	r25
     b72:	80 95       	com	r24
     b74:	70 95       	com	r23
     b76:	61 95       	neg	r22
     b78:	7f 4f       	sbci	r23, 0xFF	; 255
     b7a:	8f 4f       	sbci	r24, 0xFF	; 255
     b7c:	9f 4f       	sbci	r25, 0xFF	; 255
     b7e:	f0 68       	ori	r31, 0x80	; 128
     b80:	3f 2e       	mov	r3, r31
     b82:	2a e0       	ldi	r18, 0x0A	; 10
     b84:	30 e0       	ldi	r19, 0x00	; 0
     b86:	a3 01       	movw	r20, r6
     b88:	d7 d3       	rcall	.+1966   	; 0x1338 <__ultoa_invert>
     b8a:	88 2e       	mov	r8, r24
     b8c:	86 18       	sub	r8, r6
     b8e:	44 c0       	rjmp	.+136    	; 0xc18 <vfprintf+0x29c>
     b90:	85 37       	cpi	r24, 0x75	; 117
     b92:	31 f4       	brne	.+12     	; 0xba0 <vfprintf+0x224>
     b94:	23 2d       	mov	r18, r3
     b96:	2f 7e       	andi	r18, 0xEF	; 239
     b98:	b2 2e       	mov	r11, r18
     b9a:	2a e0       	ldi	r18, 0x0A	; 10
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	25 c0       	rjmp	.+74     	; 0xbea <vfprintf+0x26e>
     ba0:	93 2d       	mov	r25, r3
     ba2:	99 7f       	andi	r25, 0xF9	; 249
     ba4:	b9 2e       	mov	r11, r25
     ba6:	8f 36       	cpi	r24, 0x6F	; 111
     ba8:	c1 f0       	breq	.+48     	; 0xbda <vfprintf+0x25e>
     baa:	18 f4       	brcc	.+6      	; 0xbb2 <vfprintf+0x236>
     bac:	88 35       	cpi	r24, 0x58	; 88
     bae:	79 f0       	breq	.+30     	; 0xbce <vfprintf+0x252>
     bb0:	ae c0       	rjmp	.+348    	; 0xd0e <vfprintf+0x392>
     bb2:	80 37       	cpi	r24, 0x70	; 112
     bb4:	19 f0       	breq	.+6      	; 0xbbc <vfprintf+0x240>
     bb6:	88 37       	cpi	r24, 0x78	; 120
     bb8:	21 f0       	breq	.+8      	; 0xbc2 <vfprintf+0x246>
     bba:	a9 c0       	rjmp	.+338    	; 0xd0e <vfprintf+0x392>
     bbc:	e9 2f       	mov	r30, r25
     bbe:	e0 61       	ori	r30, 0x10	; 16
     bc0:	be 2e       	mov	r11, r30
     bc2:	b4 fe       	sbrs	r11, 4
     bc4:	0d c0       	rjmp	.+26     	; 0xbe0 <vfprintf+0x264>
     bc6:	fb 2d       	mov	r31, r11
     bc8:	f4 60       	ori	r31, 0x04	; 4
     bca:	bf 2e       	mov	r11, r31
     bcc:	09 c0       	rjmp	.+18     	; 0xbe0 <vfprintf+0x264>
     bce:	34 fe       	sbrs	r3, 4
     bd0:	0a c0       	rjmp	.+20     	; 0xbe6 <vfprintf+0x26a>
     bd2:	29 2f       	mov	r18, r25
     bd4:	26 60       	ori	r18, 0x06	; 6
     bd6:	b2 2e       	mov	r11, r18
     bd8:	06 c0       	rjmp	.+12     	; 0xbe6 <vfprintf+0x26a>
     bda:	28 e0       	ldi	r18, 0x08	; 8
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	05 c0       	rjmp	.+10     	; 0xbea <vfprintf+0x26e>
     be0:	20 e1       	ldi	r18, 0x10	; 16
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	02 c0       	rjmp	.+4      	; 0xbea <vfprintf+0x26e>
     be6:	20 e1       	ldi	r18, 0x10	; 16
     be8:	32 e0       	ldi	r19, 0x02	; 2
     bea:	f8 01       	movw	r30, r16
     bec:	b7 fe       	sbrs	r11, 7
     bee:	07 c0       	rjmp	.+14     	; 0xbfe <vfprintf+0x282>
     bf0:	60 81       	ld	r22, Z
     bf2:	71 81       	ldd	r23, Z+1	; 0x01
     bf4:	82 81       	ldd	r24, Z+2	; 0x02
     bf6:	93 81       	ldd	r25, Z+3	; 0x03
     bf8:	0c 5f       	subi	r16, 0xFC	; 252
     bfa:	1f 4f       	sbci	r17, 0xFF	; 255
     bfc:	06 c0       	rjmp	.+12     	; 0xc0a <vfprintf+0x28e>
     bfe:	60 81       	ld	r22, Z
     c00:	71 81       	ldd	r23, Z+1	; 0x01
     c02:	80 e0       	ldi	r24, 0x00	; 0
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	0e 5f       	subi	r16, 0xFE	; 254
     c08:	1f 4f       	sbci	r17, 0xFF	; 255
     c0a:	a3 01       	movw	r20, r6
     c0c:	95 d3       	rcall	.+1834   	; 0x1338 <__ultoa_invert>
     c0e:	88 2e       	mov	r8, r24
     c10:	86 18       	sub	r8, r6
     c12:	fb 2d       	mov	r31, r11
     c14:	ff 77       	andi	r31, 0x7F	; 127
     c16:	3f 2e       	mov	r3, r31
     c18:	36 fe       	sbrs	r3, 6
     c1a:	0d c0       	rjmp	.+26     	; 0xc36 <vfprintf+0x2ba>
     c1c:	23 2d       	mov	r18, r3
     c1e:	2e 7f       	andi	r18, 0xFE	; 254
     c20:	a2 2e       	mov	r10, r18
     c22:	89 14       	cp	r8, r9
     c24:	58 f4       	brcc	.+22     	; 0xc3c <vfprintf+0x2c0>
     c26:	34 fe       	sbrs	r3, 4
     c28:	0b c0       	rjmp	.+22     	; 0xc40 <vfprintf+0x2c4>
     c2a:	32 fc       	sbrc	r3, 2
     c2c:	09 c0       	rjmp	.+18     	; 0xc40 <vfprintf+0x2c4>
     c2e:	83 2d       	mov	r24, r3
     c30:	8e 7e       	andi	r24, 0xEE	; 238
     c32:	a8 2e       	mov	r10, r24
     c34:	05 c0       	rjmp	.+10     	; 0xc40 <vfprintf+0x2c4>
     c36:	b8 2c       	mov	r11, r8
     c38:	a3 2c       	mov	r10, r3
     c3a:	03 c0       	rjmp	.+6      	; 0xc42 <vfprintf+0x2c6>
     c3c:	b8 2c       	mov	r11, r8
     c3e:	01 c0       	rjmp	.+2      	; 0xc42 <vfprintf+0x2c6>
     c40:	b9 2c       	mov	r11, r9
     c42:	a4 fe       	sbrs	r10, 4
     c44:	0f c0       	rjmp	.+30     	; 0xc64 <vfprintf+0x2e8>
     c46:	fe 01       	movw	r30, r28
     c48:	e8 0d       	add	r30, r8
     c4a:	f1 1d       	adc	r31, r1
     c4c:	80 81       	ld	r24, Z
     c4e:	80 33       	cpi	r24, 0x30	; 48
     c50:	21 f4       	brne	.+8      	; 0xc5a <vfprintf+0x2de>
     c52:	9a 2d       	mov	r25, r10
     c54:	99 7e       	andi	r25, 0xE9	; 233
     c56:	a9 2e       	mov	r10, r25
     c58:	09 c0       	rjmp	.+18     	; 0xc6c <vfprintf+0x2f0>
     c5a:	a2 fe       	sbrs	r10, 2
     c5c:	06 c0       	rjmp	.+12     	; 0xc6a <vfprintf+0x2ee>
     c5e:	b3 94       	inc	r11
     c60:	b3 94       	inc	r11
     c62:	04 c0       	rjmp	.+8      	; 0xc6c <vfprintf+0x2f0>
     c64:	8a 2d       	mov	r24, r10
     c66:	86 78       	andi	r24, 0x86	; 134
     c68:	09 f0       	breq	.+2      	; 0xc6c <vfprintf+0x2f0>
     c6a:	b3 94       	inc	r11
     c6c:	a3 fc       	sbrc	r10, 3
     c6e:	10 c0       	rjmp	.+32     	; 0xc90 <vfprintf+0x314>
     c70:	a0 fe       	sbrs	r10, 0
     c72:	06 c0       	rjmp	.+12     	; 0xc80 <vfprintf+0x304>
     c74:	b2 14       	cp	r11, r2
     c76:	80 f4       	brcc	.+32     	; 0xc98 <vfprintf+0x31c>
     c78:	28 0c       	add	r2, r8
     c7a:	92 2c       	mov	r9, r2
     c7c:	9b 18       	sub	r9, r11
     c7e:	0d c0       	rjmp	.+26     	; 0xc9a <vfprintf+0x31e>
     c80:	b2 14       	cp	r11, r2
     c82:	58 f4       	brcc	.+22     	; 0xc9a <vfprintf+0x31e>
     c84:	b6 01       	movw	r22, r12
     c86:	80 e2       	ldi	r24, 0x20	; 32
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	01 d3       	rcall	.+1538   	; 0x128e <fputc>
     c8c:	b3 94       	inc	r11
     c8e:	f8 cf       	rjmp	.-16     	; 0xc80 <vfprintf+0x304>
     c90:	b2 14       	cp	r11, r2
     c92:	18 f4       	brcc	.+6      	; 0xc9a <vfprintf+0x31e>
     c94:	2b 18       	sub	r2, r11
     c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0x320>
     c98:	98 2c       	mov	r9, r8
     c9a:	21 2c       	mov	r2, r1
     c9c:	a4 fe       	sbrs	r10, 4
     c9e:	0f c0       	rjmp	.+30     	; 0xcbe <vfprintf+0x342>
     ca0:	b6 01       	movw	r22, r12
     ca2:	80 e3       	ldi	r24, 0x30	; 48
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	f3 d2       	rcall	.+1510   	; 0x128e <fputc>
     ca8:	a2 fe       	sbrs	r10, 2
     caa:	16 c0       	rjmp	.+44     	; 0xcd8 <vfprintf+0x35c>
     cac:	a1 fc       	sbrc	r10, 1
     cae:	03 c0       	rjmp	.+6      	; 0xcb6 <vfprintf+0x33a>
     cb0:	88 e7       	ldi	r24, 0x78	; 120
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <vfprintf+0x33e>
     cb6:	88 e5       	ldi	r24, 0x58	; 88
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	b6 01       	movw	r22, r12
     cbc:	0c c0       	rjmp	.+24     	; 0xcd6 <vfprintf+0x35a>
     cbe:	8a 2d       	mov	r24, r10
     cc0:	86 78       	andi	r24, 0x86	; 134
     cc2:	51 f0       	breq	.+20     	; 0xcd8 <vfprintf+0x35c>
     cc4:	a1 fe       	sbrs	r10, 1
     cc6:	02 c0       	rjmp	.+4      	; 0xccc <vfprintf+0x350>
     cc8:	8b e2       	ldi	r24, 0x2B	; 43
     cca:	01 c0       	rjmp	.+2      	; 0xcce <vfprintf+0x352>
     ccc:	80 e2       	ldi	r24, 0x20	; 32
     cce:	a7 fc       	sbrc	r10, 7
     cd0:	8d e2       	ldi	r24, 0x2D	; 45
     cd2:	b6 01       	movw	r22, r12
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	db d2       	rcall	.+1462   	; 0x128e <fputc>
     cd8:	89 14       	cp	r8, r9
     cda:	30 f4       	brcc	.+12     	; 0xce8 <vfprintf+0x36c>
     cdc:	b6 01       	movw	r22, r12
     cde:	80 e3       	ldi	r24, 0x30	; 48
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	d5 d2       	rcall	.+1450   	; 0x128e <fputc>
     ce4:	9a 94       	dec	r9
     ce6:	f8 cf       	rjmp	.-16     	; 0xcd8 <vfprintf+0x35c>
     ce8:	8a 94       	dec	r8
     cea:	f3 01       	movw	r30, r6
     cec:	e8 0d       	add	r30, r8
     cee:	f1 1d       	adc	r31, r1
     cf0:	80 81       	ld	r24, Z
     cf2:	b6 01       	movw	r22, r12
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	cb d2       	rcall	.+1430   	; 0x128e <fputc>
     cf8:	81 10       	cpse	r8, r1
     cfa:	f6 cf       	rjmp	.-20     	; 0xce8 <vfprintf+0x36c>
     cfc:	22 20       	and	r2, r2
     cfe:	09 f4       	brne	.+2      	; 0xd02 <vfprintf+0x386>
     d00:	4e ce       	rjmp	.-868    	; 0x99e <vfprintf+0x22>
     d02:	b6 01       	movw	r22, r12
     d04:	80 e2       	ldi	r24, 0x20	; 32
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	c2 d2       	rcall	.+1412   	; 0x128e <fputc>
     d0a:	2a 94       	dec	r2
     d0c:	f7 cf       	rjmp	.-18     	; 0xcfc <vfprintf+0x380>
     d0e:	f6 01       	movw	r30, r12
     d10:	86 81       	ldd	r24, Z+6	; 0x06
     d12:	97 81       	ldd	r25, Z+7	; 0x07
     d14:	02 c0       	rjmp	.+4      	; 0xd1a <vfprintf+0x39e>
     d16:	8f ef       	ldi	r24, 0xFF	; 255
     d18:	9f ef       	ldi	r25, 0xFF	; 255
     d1a:	2b 96       	adiw	r28, 0x0b	; 11
     d1c:	e2 e1       	ldi	r30, 0x12	; 18
     d1e:	89 c3       	rjmp	.+1810   	; 0x1432 <__epilogue_restores__>

00000d20 <putval>:
     d20:	20 fd       	sbrc	r18, 0
     d22:	09 c0       	rjmp	.+18     	; 0xd36 <putval+0x16>
     d24:	fc 01       	movw	r30, r24
     d26:	23 fd       	sbrc	r18, 3
     d28:	05 c0       	rjmp	.+10     	; 0xd34 <putval+0x14>
     d2a:	22 ff       	sbrs	r18, 2
     d2c:	02 c0       	rjmp	.+4      	; 0xd32 <putval+0x12>
     d2e:	73 83       	std	Z+3, r23	; 0x03
     d30:	62 83       	std	Z+2, r22	; 0x02
     d32:	51 83       	std	Z+1, r21	; 0x01
     d34:	40 83       	st	Z, r20
     d36:	08 95       	ret

00000d38 <mulacc>:
     d38:	44 fd       	sbrc	r20, 4
     d3a:	17 c0       	rjmp	.+46     	; 0xd6a <mulacc+0x32>
     d3c:	46 fd       	sbrc	r20, 6
     d3e:	17 c0       	rjmp	.+46     	; 0xd6e <mulacc+0x36>
     d40:	ab 01       	movw	r20, r22
     d42:	bc 01       	movw	r22, r24
     d44:	da 01       	movw	r26, r20
     d46:	fb 01       	movw	r30, r22
     d48:	aa 0f       	add	r26, r26
     d4a:	bb 1f       	adc	r27, r27
     d4c:	ee 1f       	adc	r30, r30
     d4e:	ff 1f       	adc	r31, r31
     d50:	10 94       	com	r1
     d52:	d1 f7       	brne	.-12     	; 0xd48 <mulacc+0x10>
     d54:	4a 0f       	add	r20, r26
     d56:	5b 1f       	adc	r21, r27
     d58:	6e 1f       	adc	r22, r30
     d5a:	7f 1f       	adc	r23, r31
     d5c:	cb 01       	movw	r24, r22
     d5e:	ba 01       	movw	r22, r20
     d60:	66 0f       	add	r22, r22
     d62:	77 1f       	adc	r23, r23
     d64:	88 1f       	adc	r24, r24
     d66:	99 1f       	adc	r25, r25
     d68:	09 c0       	rjmp	.+18     	; 0xd7c <mulacc+0x44>
     d6a:	33 e0       	ldi	r19, 0x03	; 3
     d6c:	01 c0       	rjmp	.+2      	; 0xd70 <mulacc+0x38>
     d6e:	34 e0       	ldi	r19, 0x04	; 4
     d70:	66 0f       	add	r22, r22
     d72:	77 1f       	adc	r23, r23
     d74:	88 1f       	adc	r24, r24
     d76:	99 1f       	adc	r25, r25
     d78:	31 50       	subi	r19, 0x01	; 1
     d7a:	d1 f7       	brne	.-12     	; 0xd70 <mulacc+0x38>
     d7c:	62 0f       	add	r22, r18
     d7e:	71 1d       	adc	r23, r1
     d80:	81 1d       	adc	r24, r1
     d82:	91 1d       	adc	r25, r1
     d84:	08 95       	ret

00000d86 <skip_spaces>:
     d86:	0f 93       	push	r16
     d88:	1f 93       	push	r17
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	8c 01       	movw	r16, r24
     d90:	c8 01       	movw	r24, r16
     d92:	7a dd       	rcall	.-1292   	; 0x888 <fgetc>
     d94:	ec 01       	movw	r28, r24
     d96:	97 fd       	sbrc	r25, 7
     d98:	06 c0       	rjmp	.+12     	; 0xda6 <skip_spaces+0x20>
     d9a:	50 d2       	rcall	.+1184   	; 0x123c <isspace>
     d9c:	89 2b       	or	r24, r25
     d9e:	c1 f7       	brne	.-16     	; 0xd90 <skip_spaces+0xa>
     da0:	b8 01       	movw	r22, r16
     da2:	ce 01       	movw	r24, r28
     da4:	b0 d2       	rcall	.+1376   	; 0x1306 <ungetc>
     da6:	ce 01       	movw	r24, r28
     da8:	df 91       	pop	r29
     daa:	cf 91       	pop	r28
     dac:	1f 91       	pop	r17
     dae:	0f 91       	pop	r16
     db0:	08 95       	ret

00000db2 <conv_int>:
     db2:	8f 92       	push	r8
     db4:	9f 92       	push	r9
     db6:	af 92       	push	r10
     db8:	bf 92       	push	r11
     dba:	ef 92       	push	r14
     dbc:	ff 92       	push	r15
     dbe:	0f 93       	push	r16
     dc0:	1f 93       	push	r17
     dc2:	cf 93       	push	r28
     dc4:	df 93       	push	r29
     dc6:	8c 01       	movw	r16, r24
     dc8:	d6 2f       	mov	r29, r22
     dca:	7a 01       	movw	r14, r20
     dcc:	b2 2e       	mov	r11, r18
     dce:	5c dd       	rcall	.-1352   	; 0x888 <fgetc>
     dd0:	9c 01       	movw	r18, r24
     dd2:	33 27       	eor	r19, r19
     dd4:	2b 32       	cpi	r18, 0x2B	; 43
     dd6:	31 05       	cpc	r19, r1
     dd8:	31 f0       	breq	.+12     	; 0xde6 <conv_int+0x34>
     dda:	2d 32       	cpi	r18, 0x2D	; 45
     ddc:	31 05       	cpc	r19, r1
     dde:	59 f4       	brne	.+22     	; 0xdf6 <conv_int+0x44>
     de0:	8b 2d       	mov	r24, r11
     de2:	80 68       	ori	r24, 0x80	; 128
     de4:	b8 2e       	mov	r11, r24
     de6:	d1 50       	subi	r29, 0x01	; 1
     de8:	11 f4       	brne	.+4      	; 0xdee <conv_int+0x3c>
     dea:	80 e0       	ldi	r24, 0x00	; 0
     dec:	61 c0       	rjmp	.+194    	; 0xeb0 <conv_int+0xfe>
     dee:	c8 01       	movw	r24, r16
     df0:	4b dd       	rcall	.-1386   	; 0x888 <fgetc>
     df2:	97 fd       	sbrc	r25, 7
     df4:	fa cf       	rjmp	.-12     	; 0xdea <conv_int+0x38>
     df6:	cb 2d       	mov	r28, r11
     df8:	cd 7f       	andi	r28, 0xFD	; 253
     dfa:	2b 2d       	mov	r18, r11
     dfc:	20 73       	andi	r18, 0x30	; 48
     dfe:	f9 f4       	brne	.+62     	; 0xe3e <conv_int+0x8c>
     e00:	80 33       	cpi	r24, 0x30	; 48
     e02:	e9 f4       	brne	.+58     	; 0xe3e <conv_int+0x8c>
     e04:	aa 24       	eor	r10, r10
     e06:	aa 94       	dec	r10
     e08:	ad 0e       	add	r10, r29
     e0a:	09 f4       	brne	.+2      	; 0xe0e <conv_int+0x5c>
     e0c:	3e c0       	rjmp	.+124    	; 0xe8a <conv_int+0xd8>
     e0e:	c8 01       	movw	r24, r16
     e10:	3b dd       	rcall	.-1418   	; 0x888 <fgetc>
     e12:	97 fd       	sbrc	r25, 7
     e14:	3a c0       	rjmp	.+116    	; 0xe8a <conv_int+0xd8>
     e16:	9c 01       	movw	r18, r24
     e18:	2f 7d       	andi	r18, 0xDF	; 223
     e1a:	33 27       	eor	r19, r19
     e1c:	28 35       	cpi	r18, 0x58	; 88
     e1e:	31 05       	cpc	r19, r1
     e20:	41 f4       	brne	.+16     	; 0xe32 <conv_int+0x80>
     e22:	c2 64       	ori	r28, 0x42	; 66
     e24:	d2 50       	subi	r29, 0x02	; 2
     e26:	89 f1       	breq	.+98     	; 0xe8a <conv_int+0xd8>
     e28:	c8 01       	movw	r24, r16
     e2a:	2e dd       	rcall	.-1444   	; 0x888 <fgetc>
     e2c:	97 ff       	sbrs	r25, 7
     e2e:	07 c0       	rjmp	.+14     	; 0xe3e <conv_int+0x8c>
     e30:	2c c0       	rjmp	.+88     	; 0xe8a <conv_int+0xd8>
     e32:	b6 fe       	sbrs	r11, 6
     e34:	02 c0       	rjmp	.+4      	; 0xe3a <conv_int+0x88>
     e36:	c2 60       	ori	r28, 0x02	; 2
     e38:	01 c0       	rjmp	.+2      	; 0xe3c <conv_int+0x8a>
     e3a:	c2 61       	ori	r28, 0x12	; 18
     e3c:	da 2d       	mov	r29, r10
     e3e:	81 2c       	mov	r8, r1
     e40:	91 2c       	mov	r9, r1
     e42:	54 01       	movw	r10, r8
     e44:	20 ed       	ldi	r18, 0xD0	; 208
     e46:	28 0f       	add	r18, r24
     e48:	28 30       	cpi	r18, 0x08	; 8
     e4a:	78 f0       	brcs	.+30     	; 0xe6a <conv_int+0xb8>
     e4c:	c4 ff       	sbrs	r28, 4
     e4e:	03 c0       	rjmp	.+6      	; 0xe56 <conv_int+0xa4>
     e50:	b8 01       	movw	r22, r16
     e52:	59 d2       	rcall	.+1202   	; 0x1306 <ungetc>
     e54:	17 c0       	rjmp	.+46     	; 0xe84 <conv_int+0xd2>
     e56:	2a 30       	cpi	r18, 0x0A	; 10
     e58:	40 f0       	brcs	.+16     	; 0xe6a <conv_int+0xb8>
     e5a:	c6 ff       	sbrs	r28, 6
     e5c:	f9 cf       	rjmp	.-14     	; 0xe50 <conv_int+0x9e>
     e5e:	2f 7d       	andi	r18, 0xDF	; 223
     e60:	3f ee       	ldi	r19, 0xEF	; 239
     e62:	32 0f       	add	r19, r18
     e64:	36 30       	cpi	r19, 0x06	; 6
     e66:	a0 f7       	brcc	.-24     	; 0xe50 <conv_int+0x9e>
     e68:	27 50       	subi	r18, 0x07	; 7
     e6a:	4c 2f       	mov	r20, r28
     e6c:	c5 01       	movw	r24, r10
     e6e:	b4 01       	movw	r22, r8
     e70:	63 df       	rcall	.-314    	; 0xd38 <mulacc>
     e72:	4b 01       	movw	r8, r22
     e74:	5c 01       	movw	r10, r24
     e76:	c2 60       	ori	r28, 0x02	; 2
     e78:	d1 50       	subi	r29, 0x01	; 1
     e7a:	51 f0       	breq	.+20     	; 0xe90 <conv_int+0xde>
     e7c:	c8 01       	movw	r24, r16
     e7e:	04 dd       	rcall	.-1528   	; 0x888 <fgetc>
     e80:	97 ff       	sbrs	r25, 7
     e82:	e0 cf       	rjmp	.-64     	; 0xe44 <conv_int+0x92>
     e84:	c1 fd       	sbrc	r28, 1
     e86:	04 c0       	rjmp	.+8      	; 0xe90 <conv_int+0xde>
     e88:	b0 cf       	rjmp	.-160    	; 0xdea <conv_int+0x38>
     e8a:	81 2c       	mov	r8, r1
     e8c:	91 2c       	mov	r9, r1
     e8e:	54 01       	movw	r10, r8
     e90:	c7 ff       	sbrs	r28, 7
     e92:	08 c0       	rjmp	.+16     	; 0xea4 <conv_int+0xf2>
     e94:	b0 94       	com	r11
     e96:	a0 94       	com	r10
     e98:	90 94       	com	r9
     e9a:	80 94       	com	r8
     e9c:	81 1c       	adc	r8, r1
     e9e:	91 1c       	adc	r9, r1
     ea0:	a1 1c       	adc	r10, r1
     ea2:	b1 1c       	adc	r11, r1
     ea4:	2c 2f       	mov	r18, r28
     ea6:	b5 01       	movw	r22, r10
     ea8:	a4 01       	movw	r20, r8
     eaa:	c7 01       	movw	r24, r14
     eac:	39 df       	rcall	.-398    	; 0xd20 <putval>
     eae:	81 e0       	ldi	r24, 0x01	; 1
     eb0:	df 91       	pop	r29
     eb2:	cf 91       	pop	r28
     eb4:	1f 91       	pop	r17
     eb6:	0f 91       	pop	r16
     eb8:	ff 90       	pop	r15
     eba:	ef 90       	pop	r14
     ebc:	bf 90       	pop	r11
     ebe:	af 90       	pop	r10
     ec0:	9f 90       	pop	r9
     ec2:	8f 90       	pop	r8
     ec4:	08 95       	ret

00000ec6 <conv_brk>:
     ec6:	a0 e2       	ldi	r26, 0x20	; 32
     ec8:	b0 e0       	ldi	r27, 0x00	; 0
     eca:	e8 e6       	ldi	r30, 0x68	; 104
     ecc:	f7 e0       	ldi	r31, 0x07	; 7
     ece:	98 c2       	rjmp	.+1328   	; 0x1400 <__prologue_saves__+0x6>
     ed0:	5c 01       	movw	r10, r24
     ed2:	96 2e       	mov	r9, r22
     ed4:	7a 01       	movw	r14, r20
     ed6:	f9 01       	movw	r30, r18
     ed8:	8e 01       	movw	r16, r28
     eda:	0f 5f       	subi	r16, 0xFF	; 255
     edc:	1f 4f       	sbci	r17, 0xFF	; 255
     ede:	68 01       	movw	r12, r16
     ee0:	80 e2       	ldi	r24, 0x20	; 32
     ee2:	d8 01       	movw	r26, r16
     ee4:	1d 92       	st	X+, r1
     ee6:	8a 95       	dec	r24
     ee8:	e9 f7       	brne	.-6      	; 0xee4 <conv_brk+0x1e>
     eea:	d5 01       	movw	r26, r10
     eec:	13 96       	adiw	r26, 0x03	; 3
     eee:	8c 90       	ld	r8, X
     ef0:	80 e0       	ldi	r24, 0x00	; 0
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	61 2c       	mov	r6, r1
     ef6:	71 2c       	mov	r7, r1
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	61 e0       	ldi	r22, 0x01	; 1
     efc:	70 e0       	ldi	r23, 0x00	; 0
     efe:	83 fc       	sbrc	r8, 3
     f00:	25 91       	lpm	r18, Z+
     f02:	83 fe       	sbrs	r8, 3
     f04:	21 91       	ld	r18, Z+
     f06:	8f 01       	movw	r16, r30
     f08:	52 2e       	mov	r5, r18
     f0a:	21 11       	cpse	r18, r1
     f0c:	03 c0       	rjmp	.+6      	; 0xf14 <conv_brk+0x4e>
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	90 c0       	rjmp	.+288    	; 0x1034 <conv_brk+0x16e>
     f14:	2e 35       	cpi	r18, 0x5E	; 94
     f16:	11 f4       	brne	.+4      	; 0xf1c <conv_brk+0x56>
     f18:	00 97       	sbiw	r24, 0x00	; 0
     f1a:	51 f1       	breq	.+84     	; 0xf70 <conv_brk+0xaa>
     f1c:	43 2f       	mov	r20, r19
     f1e:	50 e0       	ldi	r21, 0x00	; 0
     f20:	48 17       	cp	r20, r24
     f22:	59 07       	cpc	r21, r25
     f24:	3c f4       	brge	.+14     	; 0xf34 <conv_brk+0x6e>
     f26:	2d 35       	cpi	r18, 0x5D	; 93
     f28:	59 f1       	breq	.+86     	; 0xf80 <conv_brk+0xba>
     f2a:	2d 32       	cpi	r18, 0x2D	; 45
     f2c:	19 f4       	brne	.+6      	; 0xf34 <conv_brk+0x6e>
     f2e:	77 20       	and	r7, r7
     f30:	09 f1       	breq	.+66     	; 0xf74 <conv_brk+0xae>
     f32:	03 c0       	rjmp	.+6      	; 0xf3a <conv_brk+0x74>
     f34:	77 20       	and	r7, r7
     f36:	09 f4       	brne	.+2      	; 0xf3a <conv_brk+0x74>
     f38:	68 c0       	rjmp	.+208    	; 0x100a <conv_brk+0x144>
     f3a:	45 2d       	mov	r20, r5
     f3c:	46 95       	lsr	r20
     f3e:	46 95       	lsr	r20
     f40:	46 95       	lsr	r20
     f42:	d6 01       	movw	r26, r12
     f44:	a4 0f       	add	r26, r20
     f46:	b1 1d       	adc	r27, r1
     f48:	45 2d       	mov	r20, r5
     f4a:	47 70       	andi	r20, 0x07	; 7
     f4c:	8b 01       	movw	r16, r22
     f4e:	02 c0       	rjmp	.+4      	; 0xf54 <conv_brk+0x8e>
     f50:	00 0f       	add	r16, r16
     f52:	11 1f       	adc	r17, r17
     f54:	4a 95       	dec	r20
     f56:	e2 f7       	brpl	.-8      	; 0xf50 <conv_brk+0x8a>
     f58:	a8 01       	movw	r20, r16
     f5a:	5c 91       	ld	r21, X
     f5c:	45 2b       	or	r20, r21
     f5e:	4c 93       	st	X, r20
     f60:	65 14       	cp	r6, r5
     f62:	59 f0       	breq	.+22     	; 0xf7a <conv_brk+0xb4>
     f64:	56 14       	cp	r5, r6
     f66:	10 f4       	brcc	.+4      	; 0xf6c <conv_brk+0xa6>
     f68:	53 94       	inc	r5
     f6a:	e7 cf       	rjmp	.-50     	; 0xf3a <conv_brk+0x74>
     f6c:	5a 94       	dec	r5
     f6e:	e5 cf       	rjmp	.-54     	; 0xf3a <conv_brk+0x74>
     f70:	31 e0       	ldi	r19, 0x01	; 1
     f72:	04 c0       	rjmp	.+8      	; 0xf7c <conv_brk+0xb6>
     f74:	77 24       	eor	r7, r7
     f76:	73 94       	inc	r7
     f78:	01 c0       	rjmp	.+2      	; 0xf7c <conv_brk+0xb6>
     f7a:	71 2c       	mov	r7, r1
     f7c:	01 96       	adiw	r24, 0x01	; 1
     f7e:	bf cf       	rjmp	.-130    	; 0xefe <conv_brk+0x38>
     f80:	77 20       	and	r7, r7
     f82:	19 f0       	breq	.+6      	; 0xf8a <conv_brk+0xc4>
     f84:	8e 81       	ldd	r24, Y+6	; 0x06
     f86:	80 62       	ori	r24, 0x20	; 32
     f88:	8e 83       	std	Y+6, r24	; 0x06
     f8a:	31 11       	cpse	r19, r1
     f8c:	03 c0       	rjmp	.+6      	; 0xf94 <conv_brk+0xce>
     f8e:	88 24       	eor	r8, r8
     f90:	83 94       	inc	r8
     f92:	17 c0       	rjmp	.+46     	; 0xfc2 <conv_brk+0xfc>
     f94:	f6 01       	movw	r30, r12
     f96:	9e 01       	movw	r18, r28
     f98:	2f 5d       	subi	r18, 0xDF	; 223
     f9a:	3f 4f       	sbci	r19, 0xFF	; 255
     f9c:	80 81       	ld	r24, Z
     f9e:	80 95       	com	r24
     fa0:	81 93       	st	Z+, r24
     fa2:	2e 17       	cp	r18, r30
     fa4:	3f 07       	cpc	r19, r31
     fa6:	d1 f7       	brne	.-12     	; 0xf9c <conv_brk+0xd6>
     fa8:	f2 cf       	rjmp	.-28     	; 0xf8e <conv_brk+0xc8>
     faa:	e1 14       	cp	r14, r1
     fac:	f1 04       	cpc	r15, r1
     fae:	29 f0       	breq	.+10     	; 0xfba <conv_brk+0xf4>
     fb0:	d7 01       	movw	r26, r14
     fb2:	8c 93       	st	X, r24
     fb4:	f7 01       	movw	r30, r14
     fb6:	31 96       	adiw	r30, 0x01	; 1
     fb8:	7f 01       	movw	r14, r30
     fba:	9a 94       	dec	r9
     fbc:	81 2c       	mov	r8, r1
     fbe:	99 20       	and	r9, r9
     fc0:	e9 f0       	breq	.+58     	; 0xffc <conv_brk+0x136>
     fc2:	c5 01       	movw	r24, r10
     fc4:	61 dc       	rcall	.-1854   	; 0x888 <fgetc>
     fc6:	97 fd       	sbrc	r25, 7
     fc8:	17 c0       	rjmp	.+46     	; 0xff8 <conv_brk+0x132>
     fca:	fc 01       	movw	r30, r24
     fcc:	ff 27       	eor	r31, r31
     fce:	23 e0       	ldi	r18, 0x03	; 3
     fd0:	f5 95       	asr	r31
     fd2:	e7 95       	ror	r30
     fd4:	2a 95       	dec	r18
     fd6:	e1 f7       	brne	.-8      	; 0xfd0 <conv_brk+0x10a>
     fd8:	ec 0d       	add	r30, r12
     fda:	fd 1d       	adc	r31, r13
     fdc:	20 81       	ld	r18, Z
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	ac 01       	movw	r20, r24
     fe2:	47 70       	andi	r20, 0x07	; 7
     fe4:	55 27       	eor	r21, r21
     fe6:	02 c0       	rjmp	.+4      	; 0xfec <conv_brk+0x126>
     fe8:	35 95       	asr	r19
     fea:	27 95       	ror	r18
     fec:	4a 95       	dec	r20
     fee:	e2 f7       	brpl	.-8      	; 0xfe8 <conv_brk+0x122>
     ff0:	20 fd       	sbrc	r18, 0
     ff2:	db cf       	rjmp	.-74     	; 0xfaa <conv_brk+0xe4>
     ff4:	b5 01       	movw	r22, r10
     ff6:	87 d1       	rcall	.+782    	; 0x1306 <ungetc>
     ff8:	81 10       	cpse	r8, r1
     ffa:	89 cf       	rjmp	.-238    	; 0xf0e <conv_brk+0x48>
     ffc:	e1 14       	cp	r14, r1
     ffe:	f1 04       	cpc	r15, r1
    1000:	11 f0       	breq	.+4      	; 0x1006 <conv_brk+0x140>
    1002:	d7 01       	movw	r26, r14
    1004:	1c 92       	st	X, r1
    1006:	c8 01       	movw	r24, r16
    1008:	15 c0       	rjmp	.+42     	; 0x1034 <conv_brk+0x16e>
    100a:	42 2f       	mov	r20, r18
    100c:	46 95       	lsr	r20
    100e:	46 95       	lsr	r20
    1010:	46 95       	lsr	r20
    1012:	d6 01       	movw	r26, r12
    1014:	a4 0f       	add	r26, r20
    1016:	b1 1d       	adc	r27, r1
    1018:	42 2f       	mov	r20, r18
    101a:	47 70       	andi	r20, 0x07	; 7
    101c:	8b 01       	movw	r16, r22
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <conv_brk+0x15e>
    1020:	00 0f       	add	r16, r16
    1022:	11 1f       	adc	r17, r17
    1024:	4a 95       	dec	r20
    1026:	e2 f7       	brpl	.-8      	; 0x1020 <conv_brk+0x15a>
    1028:	a8 01       	movw	r20, r16
    102a:	5c 91       	ld	r21, X
    102c:	45 2b       	or	r20, r21
    102e:	4c 93       	st	X, r20
    1030:	62 2e       	mov	r6, r18
    1032:	a4 cf       	rjmp	.-184    	; 0xf7c <conv_brk+0xb6>
    1034:	a0 96       	adiw	r28, 0x20	; 32
    1036:	ef e0       	ldi	r30, 0x0F	; 15
    1038:	ff c1       	rjmp	.+1022   	; 0x1438 <__epilogue_restores__+0x6>

0000103a <vfscanf>:
    103a:	a0 e0       	ldi	r26, 0x00	; 0
    103c:	b0 e0       	ldi	r27, 0x00	; 0
    103e:	e2 e2       	ldi	r30, 0x22	; 34
    1040:	f8 e0       	ldi	r31, 0x08	; 8
    1042:	de c1       	rjmp	.+956    	; 0x1400 <__prologue_saves__+0x6>
    1044:	6c 01       	movw	r12, r24
    1046:	eb 01       	movw	r28, r22
    1048:	5a 01       	movw	r10, r20
    104a:	fc 01       	movw	r30, r24
    104c:	17 82       	std	Z+7, r1	; 0x07
    104e:	16 82       	std	Z+6, r1	; 0x06
    1050:	51 2c       	mov	r5, r1
    1052:	f6 01       	movw	r30, r12
    1054:	e3 80       	ldd	r14, Z+3	; 0x03
    1056:	fe 01       	movw	r30, r28
    1058:	e3 fc       	sbrc	r14, 3
    105a:	85 91       	lpm	r24, Z+
    105c:	e3 fe       	sbrs	r14, 3
    105e:	81 91       	ld	r24, Z+
    1060:	18 2f       	mov	r17, r24
    1062:	ef 01       	movw	r28, r30
    1064:	88 23       	and	r24, r24
    1066:	09 f4       	brne	.+2      	; 0x106a <vfscanf+0x30>
    1068:	e0 c0       	rjmp	.+448    	; 0x122a <vfscanf+0x1f0>
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	e7 d0       	rcall	.+462    	; 0x123c <isspace>
    106e:	89 2b       	or	r24, r25
    1070:	19 f0       	breq	.+6      	; 0x1078 <vfscanf+0x3e>
    1072:	c6 01       	movw	r24, r12
    1074:	88 de       	rcall	.-752    	; 0xd86 <skip_spaces>
    1076:	ed cf       	rjmp	.-38     	; 0x1052 <vfscanf+0x18>
    1078:	15 32       	cpi	r17, 0x25	; 37
    107a:	41 f4       	brne	.+16     	; 0x108c <vfscanf+0x52>
    107c:	fe 01       	movw	r30, r28
    107e:	e3 fc       	sbrc	r14, 3
    1080:	15 91       	lpm	r17, Z+
    1082:	e3 fe       	sbrs	r14, 3
    1084:	11 91       	ld	r17, Z+
    1086:	ef 01       	movw	r28, r30
    1088:	15 32       	cpi	r17, 0x25	; 37
    108a:	71 f4       	brne	.+28     	; 0x10a8 <vfscanf+0x6e>
    108c:	c6 01       	movw	r24, r12
    108e:	fc db       	rcall	.-2056   	; 0x888 <fgetc>
    1090:	97 fd       	sbrc	r25, 7
    1092:	c9 c0       	rjmp	.+402    	; 0x1226 <vfscanf+0x1ec>
    1094:	41 2f       	mov	r20, r17
    1096:	50 e0       	ldi	r21, 0x00	; 0
    1098:	9c 01       	movw	r18, r24
    109a:	33 27       	eor	r19, r19
    109c:	24 17       	cp	r18, r20
    109e:	35 07       	cpc	r19, r21
    10a0:	c1 f2       	breq	.-80     	; 0x1052 <vfscanf+0x18>
    10a2:	b6 01       	movw	r22, r12
    10a4:	30 d1       	rcall	.+608    	; 0x1306 <ungetc>
    10a6:	c1 c0       	rjmp	.+386    	; 0x122a <vfscanf+0x1f0>
    10a8:	1a 32       	cpi	r17, 0x2A	; 42
    10aa:	39 f4       	brne	.+14     	; 0x10ba <vfscanf+0x80>
    10ac:	e3 fc       	sbrc	r14, 3
    10ae:	15 91       	lpm	r17, Z+
    10b0:	e3 fe       	sbrs	r14, 3
    10b2:	11 91       	ld	r17, Z+
    10b4:	ef 01       	movw	r28, r30
    10b6:	01 e0       	ldi	r16, 0x01	; 1
    10b8:	01 c0       	rjmp	.+2      	; 0x10bc <vfscanf+0x82>
    10ba:	00 e0       	ldi	r16, 0x00	; 0
    10bc:	f1 2c       	mov	r15, r1
    10be:	20 ed       	ldi	r18, 0xD0	; 208
    10c0:	21 0f       	add	r18, r17
    10c2:	2a 30       	cpi	r18, 0x0A	; 10
    10c4:	78 f4       	brcc	.+30     	; 0x10e4 <vfscanf+0xaa>
    10c6:	02 60       	ori	r16, 0x02	; 2
    10c8:	6f 2d       	mov	r22, r15
    10ca:	70 e0       	ldi	r23, 0x00	; 0
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	40 e2       	ldi	r20, 0x20	; 32
    10d2:	32 de       	rcall	.-924    	; 0xd38 <mulacc>
    10d4:	f6 2e       	mov	r15, r22
    10d6:	fe 01       	movw	r30, r28
    10d8:	e3 fc       	sbrc	r14, 3
    10da:	15 91       	lpm	r17, Z+
    10dc:	e3 fe       	sbrs	r14, 3
    10de:	11 91       	ld	r17, Z+
    10e0:	ef 01       	movw	r28, r30
    10e2:	ed cf       	rjmp	.-38     	; 0x10be <vfscanf+0x84>
    10e4:	01 ff       	sbrs	r16, 1
    10e6:	03 c0       	rjmp	.+6      	; 0x10ee <vfscanf+0xb4>
    10e8:	f1 10       	cpse	r15, r1
    10ea:	03 c0       	rjmp	.+6      	; 0x10f2 <vfscanf+0xb8>
    10ec:	9e c0       	rjmp	.+316    	; 0x122a <vfscanf+0x1f0>
    10ee:	ff 24       	eor	r15, r15
    10f0:	fa 94       	dec	r15
    10f2:	18 36       	cpi	r17, 0x68	; 104
    10f4:	19 f0       	breq	.+6      	; 0x10fc <vfscanf+0xc2>
    10f6:	1c 36       	cpi	r17, 0x6C	; 108
    10f8:	51 f0       	breq	.+20     	; 0x110e <vfscanf+0xd4>
    10fa:	10 c0       	rjmp	.+32     	; 0x111c <vfscanf+0xe2>
    10fc:	fe 01       	movw	r30, r28
    10fe:	e3 fc       	sbrc	r14, 3
    1100:	15 91       	lpm	r17, Z+
    1102:	e3 fe       	sbrs	r14, 3
    1104:	11 91       	ld	r17, Z+
    1106:	ef 01       	movw	r28, r30
    1108:	18 36       	cpi	r17, 0x68	; 104
    110a:	41 f4       	brne	.+16     	; 0x111c <vfscanf+0xe2>
    110c:	08 60       	ori	r16, 0x08	; 8
    110e:	04 60       	ori	r16, 0x04	; 4
    1110:	fe 01       	movw	r30, r28
    1112:	e3 fc       	sbrc	r14, 3
    1114:	15 91       	lpm	r17, Z+
    1116:	e3 fe       	sbrs	r14, 3
    1118:	11 91       	ld	r17, Z+
    111a:	ef 01       	movw	r28, r30
    111c:	11 23       	and	r17, r17
    111e:	09 f4       	brne	.+2      	; 0x1122 <vfscanf+0xe8>
    1120:	84 c0       	rjmp	.+264    	; 0x122a <vfscanf+0x1f0>
    1122:	61 2f       	mov	r22, r17
    1124:	70 e0       	ldi	r23, 0x00	; 0
    1126:	88 e6       	ldi	r24, 0x68	; 104
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	90 d0       	rcall	.+288    	; 0x124c <strchr_P>
    112c:	89 2b       	or	r24, r25
    112e:	09 f4       	brne	.+2      	; 0x1132 <vfscanf+0xf8>
    1130:	7c c0       	rjmp	.+248    	; 0x122a <vfscanf+0x1f0>
    1132:	00 fd       	sbrc	r16, 0
    1134:	07 c0       	rjmp	.+14     	; 0x1144 <vfscanf+0x10a>
    1136:	f5 01       	movw	r30, r10
    1138:	80 80       	ld	r8, Z
    113a:	91 80       	ldd	r9, Z+1	; 0x01
    113c:	c5 01       	movw	r24, r10
    113e:	02 96       	adiw	r24, 0x02	; 2
    1140:	5c 01       	movw	r10, r24
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <vfscanf+0x10e>
    1144:	81 2c       	mov	r8, r1
    1146:	91 2c       	mov	r9, r1
    1148:	1e 36       	cpi	r17, 0x6E	; 110
    114a:	49 f4       	brne	.+18     	; 0x115e <vfscanf+0x124>
    114c:	f6 01       	movw	r30, r12
    114e:	46 81       	ldd	r20, Z+6	; 0x06
    1150:	57 81       	ldd	r21, Z+7	; 0x07
    1152:	60 e0       	ldi	r22, 0x00	; 0
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	20 2f       	mov	r18, r16
    1158:	c4 01       	movw	r24, r8
    115a:	e2 dd       	rcall	.-1084   	; 0xd20 <putval>
    115c:	7a cf       	rjmp	.-268    	; 0x1052 <vfscanf+0x18>
    115e:	13 36       	cpi	r17, 0x63	; 99
    1160:	a1 f4       	brne	.+40     	; 0x118a <vfscanf+0x150>
    1162:	01 fd       	sbrc	r16, 1
    1164:	02 c0       	rjmp	.+4      	; 0x116a <vfscanf+0x130>
    1166:	ff 24       	eor	r15, r15
    1168:	f3 94       	inc	r15
    116a:	c6 01       	movw	r24, r12
    116c:	8d db       	rcall	.-2278   	; 0x888 <fgetc>
    116e:	97 fd       	sbrc	r25, 7
    1170:	5a c0       	rjmp	.+180    	; 0x1226 <vfscanf+0x1ec>
    1172:	81 14       	cp	r8, r1
    1174:	91 04       	cpc	r9, r1
    1176:	29 f0       	breq	.+10     	; 0x1182 <vfscanf+0x148>
    1178:	f4 01       	movw	r30, r8
    117a:	80 83       	st	Z, r24
    117c:	c4 01       	movw	r24, r8
    117e:	01 96       	adiw	r24, 0x01	; 1
    1180:	4c 01       	movw	r8, r24
    1182:	fa 94       	dec	r15
    1184:	f1 10       	cpse	r15, r1
    1186:	f1 cf       	rjmp	.-30     	; 0x116a <vfscanf+0x130>
    1188:	4a c0       	rjmp	.+148    	; 0x121e <vfscanf+0x1e4>
    118a:	1b 35       	cpi	r17, 0x5B	; 91
    118c:	51 f4       	brne	.+20     	; 0x11a2 <vfscanf+0x168>
    118e:	9e 01       	movw	r18, r28
    1190:	a4 01       	movw	r20, r8
    1192:	6f 2d       	mov	r22, r15
    1194:	c6 01       	movw	r24, r12
    1196:	97 de       	rcall	.-722    	; 0xec6 <conv_brk>
    1198:	ec 01       	movw	r28, r24
    119a:	89 2b       	or	r24, r25
    119c:	09 f0       	breq	.+2      	; 0x11a0 <vfscanf+0x166>
    119e:	3f c0       	rjmp	.+126    	; 0x121e <vfscanf+0x1e4>
    11a0:	39 c0       	rjmp	.+114    	; 0x1214 <vfscanf+0x1da>
    11a2:	c6 01       	movw	r24, r12
    11a4:	f0 dd       	rcall	.-1056   	; 0xd86 <skip_spaces>
    11a6:	97 fd       	sbrc	r25, 7
    11a8:	3e c0       	rjmp	.+124    	; 0x1226 <vfscanf+0x1ec>
    11aa:	1f 36       	cpi	r17, 0x6F	; 111
    11ac:	49 f1       	breq	.+82     	; 0x1200 <vfscanf+0x1c6>
    11ae:	28 f4       	brcc	.+10     	; 0x11ba <vfscanf+0x180>
    11b0:	14 36       	cpi	r17, 0x64	; 100
    11b2:	21 f1       	breq	.+72     	; 0x11fc <vfscanf+0x1c2>
    11b4:	19 36       	cpi	r17, 0x69	; 105
    11b6:	39 f1       	breq	.+78     	; 0x1206 <vfscanf+0x1cc>
    11b8:	25 c0       	rjmp	.+74     	; 0x1204 <vfscanf+0x1ca>
    11ba:	13 37       	cpi	r17, 0x73	; 115
    11bc:	71 f0       	breq	.+28     	; 0x11da <vfscanf+0x1a0>
    11be:	15 37       	cpi	r17, 0x75	; 117
    11c0:	e9 f0       	breq	.+58     	; 0x11fc <vfscanf+0x1c2>
    11c2:	20 c0       	rjmp	.+64     	; 0x1204 <vfscanf+0x1ca>
    11c4:	81 14       	cp	r8, r1
    11c6:	91 04       	cpc	r9, r1
    11c8:	29 f0       	breq	.+10     	; 0x11d4 <vfscanf+0x19a>
    11ca:	f4 01       	movw	r30, r8
    11cc:	60 82       	st	Z, r6
    11ce:	c4 01       	movw	r24, r8
    11d0:	01 96       	adiw	r24, 0x01	; 1
    11d2:	4c 01       	movw	r8, r24
    11d4:	fa 94       	dec	r15
    11d6:	ff 20       	and	r15, r15
    11d8:	59 f0       	breq	.+22     	; 0x11f0 <vfscanf+0x1b6>
    11da:	c6 01       	movw	r24, r12
    11dc:	55 db       	rcall	.-2390   	; 0x888 <fgetc>
    11de:	3c 01       	movw	r6, r24
    11e0:	97 fd       	sbrc	r25, 7
    11e2:	06 c0       	rjmp	.+12     	; 0x11f0 <vfscanf+0x1b6>
    11e4:	2b d0       	rcall	.+86     	; 0x123c <isspace>
    11e6:	89 2b       	or	r24, r25
    11e8:	69 f3       	breq	.-38     	; 0x11c4 <vfscanf+0x18a>
    11ea:	b6 01       	movw	r22, r12
    11ec:	c3 01       	movw	r24, r6
    11ee:	8b d0       	rcall	.+278    	; 0x1306 <ungetc>
    11f0:	81 14       	cp	r8, r1
    11f2:	91 04       	cpc	r9, r1
    11f4:	a1 f0       	breq	.+40     	; 0x121e <vfscanf+0x1e4>
    11f6:	f4 01       	movw	r30, r8
    11f8:	10 82       	st	Z, r1
    11fa:	11 c0       	rjmp	.+34     	; 0x121e <vfscanf+0x1e4>
    11fc:	00 62       	ori	r16, 0x20	; 32
    11fe:	03 c0       	rjmp	.+6      	; 0x1206 <vfscanf+0x1cc>
    1200:	00 61       	ori	r16, 0x10	; 16
    1202:	01 c0       	rjmp	.+2      	; 0x1206 <vfscanf+0x1cc>
    1204:	00 64       	ori	r16, 0x40	; 64
    1206:	20 2f       	mov	r18, r16
    1208:	a4 01       	movw	r20, r8
    120a:	6f 2d       	mov	r22, r15
    120c:	c6 01       	movw	r24, r12
    120e:	d1 dd       	rcall	.-1118   	; 0xdb2 <conv_int>
    1210:	81 11       	cpse	r24, r1
    1212:	05 c0       	rjmp	.+10     	; 0x121e <vfscanf+0x1e4>
    1214:	f6 01       	movw	r30, r12
    1216:	83 81       	ldd	r24, Z+3	; 0x03
    1218:	80 73       	andi	r24, 0x30	; 48
    121a:	29 f4       	brne	.+10     	; 0x1226 <vfscanf+0x1ec>
    121c:	06 c0       	rjmp	.+12     	; 0x122a <vfscanf+0x1f0>
    121e:	00 fd       	sbrc	r16, 0
    1220:	18 cf       	rjmp	.-464    	; 0x1052 <vfscanf+0x18>
    1222:	53 94       	inc	r5
    1224:	16 cf       	rjmp	.-468    	; 0x1052 <vfscanf+0x18>
    1226:	55 20       	and	r5, r5
    1228:	19 f0       	breq	.+6      	; 0x1230 <vfscanf+0x1f6>
    122a:	85 2d       	mov	r24, r5
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	02 c0       	rjmp	.+4      	; 0x1234 <vfscanf+0x1fa>
    1230:	8f ef       	ldi	r24, 0xFF	; 255
    1232:	9f ef       	ldi	r25, 0xFF	; 255
    1234:	cd b7       	in	r28, 0x3d	; 61
    1236:	de b7       	in	r29, 0x3e	; 62
    1238:	ef e0       	ldi	r30, 0x0F	; 15
    123a:	fe c0       	rjmp	.+508    	; 0x1438 <__epilogue_restores__+0x6>

0000123c <isspace>:
    123c:	91 11       	cpse	r25, r1
    123e:	da c0       	rjmp	.+436    	; 0x13f4 <__ctype_isfalse>
    1240:	80 32       	cpi	r24, 0x20	; 32
    1242:	19 f0       	breq	.+6      	; 0x124a <isspace+0xe>
    1244:	89 50       	subi	r24, 0x09	; 9
    1246:	85 50       	subi	r24, 0x05	; 5
    1248:	d0 f7       	brcc	.-12     	; 0x123e <isspace+0x2>
    124a:	08 95       	ret

0000124c <strchr_P>:
    124c:	fc 01       	movw	r30, r24
    124e:	05 90       	lpm	r0, Z+
    1250:	06 16       	cp	r0, r22
    1252:	21 f0       	breq	.+8      	; 0x125c <strchr_P+0x10>
    1254:	00 20       	and	r0, r0
    1256:	d9 f7       	brne	.-10     	; 0x124e <strchr_P+0x2>
    1258:	c0 01       	movw	r24, r0
    125a:	08 95       	ret
    125c:	31 97       	sbiw	r30, 0x01	; 1
    125e:	cf 01       	movw	r24, r30
    1260:	08 95       	ret

00001262 <strnlen_P>:
    1262:	fc 01       	movw	r30, r24
    1264:	05 90       	lpm	r0, Z+
    1266:	61 50       	subi	r22, 0x01	; 1
    1268:	70 40       	sbci	r23, 0x00	; 0
    126a:	01 10       	cpse	r0, r1
    126c:	d8 f7       	brcc	.-10     	; 0x1264 <strnlen_P+0x2>
    126e:	80 95       	com	r24
    1270:	90 95       	com	r25
    1272:	8e 0f       	add	r24, r30
    1274:	9f 1f       	adc	r25, r31
    1276:	08 95       	ret

00001278 <strnlen>:
    1278:	fc 01       	movw	r30, r24
    127a:	61 50       	subi	r22, 0x01	; 1
    127c:	70 40       	sbci	r23, 0x00	; 0
    127e:	01 90       	ld	r0, Z+
    1280:	01 10       	cpse	r0, r1
    1282:	d8 f7       	brcc	.-10     	; 0x127a <strnlen+0x2>
    1284:	80 95       	com	r24
    1286:	90 95       	com	r25
    1288:	8e 0f       	add	r24, r30
    128a:	9f 1f       	adc	r25, r31
    128c:	08 95       	ret

0000128e <fputc>:
    128e:	0f 93       	push	r16
    1290:	1f 93       	push	r17
    1292:	cf 93       	push	r28
    1294:	df 93       	push	r29
    1296:	fb 01       	movw	r30, r22
    1298:	23 81       	ldd	r18, Z+3	; 0x03
    129a:	21 fd       	sbrc	r18, 1
    129c:	03 c0       	rjmp	.+6      	; 0x12a4 <fputc+0x16>
    129e:	8f ef       	ldi	r24, 0xFF	; 255
    12a0:	9f ef       	ldi	r25, 0xFF	; 255
    12a2:	2c c0       	rjmp	.+88     	; 0x12fc <fputc+0x6e>
    12a4:	22 ff       	sbrs	r18, 2
    12a6:	16 c0       	rjmp	.+44     	; 0x12d4 <fputc+0x46>
    12a8:	46 81       	ldd	r20, Z+6	; 0x06
    12aa:	57 81       	ldd	r21, Z+7	; 0x07
    12ac:	24 81       	ldd	r18, Z+4	; 0x04
    12ae:	35 81       	ldd	r19, Z+5	; 0x05
    12b0:	42 17       	cp	r20, r18
    12b2:	53 07       	cpc	r21, r19
    12b4:	44 f4       	brge	.+16     	; 0x12c6 <fputc+0x38>
    12b6:	a0 81       	ld	r26, Z
    12b8:	b1 81       	ldd	r27, Z+1	; 0x01
    12ba:	9d 01       	movw	r18, r26
    12bc:	2f 5f       	subi	r18, 0xFF	; 255
    12be:	3f 4f       	sbci	r19, 0xFF	; 255
    12c0:	31 83       	std	Z+1, r19	; 0x01
    12c2:	20 83       	st	Z, r18
    12c4:	8c 93       	st	X, r24
    12c6:	26 81       	ldd	r18, Z+6	; 0x06
    12c8:	37 81       	ldd	r19, Z+7	; 0x07
    12ca:	2f 5f       	subi	r18, 0xFF	; 255
    12cc:	3f 4f       	sbci	r19, 0xFF	; 255
    12ce:	37 83       	std	Z+7, r19	; 0x07
    12d0:	26 83       	std	Z+6, r18	; 0x06
    12d2:	14 c0       	rjmp	.+40     	; 0x12fc <fputc+0x6e>
    12d4:	8b 01       	movw	r16, r22
    12d6:	ec 01       	movw	r28, r24
    12d8:	fb 01       	movw	r30, r22
    12da:	00 84       	ldd	r0, Z+8	; 0x08
    12dc:	f1 85       	ldd	r31, Z+9	; 0x09
    12de:	e0 2d       	mov	r30, r0
    12e0:	09 95       	icall
    12e2:	89 2b       	or	r24, r25
    12e4:	e1 f6       	brne	.-72     	; 0x129e <fputc+0x10>
    12e6:	d8 01       	movw	r26, r16
    12e8:	16 96       	adiw	r26, 0x06	; 6
    12ea:	8d 91       	ld	r24, X+
    12ec:	9c 91       	ld	r25, X
    12ee:	17 97       	sbiw	r26, 0x07	; 7
    12f0:	01 96       	adiw	r24, 0x01	; 1
    12f2:	17 96       	adiw	r26, 0x07	; 7
    12f4:	9c 93       	st	X, r25
    12f6:	8e 93       	st	-X, r24
    12f8:	16 97       	sbiw	r26, 0x06	; 6
    12fa:	ce 01       	movw	r24, r28
    12fc:	df 91       	pop	r29
    12fe:	cf 91       	pop	r28
    1300:	1f 91       	pop	r17
    1302:	0f 91       	pop	r16
    1304:	08 95       	ret

00001306 <ungetc>:
    1306:	fb 01       	movw	r30, r22
    1308:	23 81       	ldd	r18, Z+3	; 0x03
    130a:	20 ff       	sbrs	r18, 0
    130c:	12 c0       	rjmp	.+36     	; 0x1332 <ungetc+0x2c>
    130e:	26 fd       	sbrc	r18, 6
    1310:	10 c0       	rjmp	.+32     	; 0x1332 <ungetc+0x2c>
    1312:	8f 3f       	cpi	r24, 0xFF	; 255
    1314:	3f ef       	ldi	r19, 0xFF	; 255
    1316:	93 07       	cpc	r25, r19
    1318:	61 f0       	breq	.+24     	; 0x1332 <ungetc+0x2c>
    131a:	82 83       	std	Z+2, r24	; 0x02
    131c:	2f 7d       	andi	r18, 0xDF	; 223
    131e:	20 64       	ori	r18, 0x40	; 64
    1320:	23 83       	std	Z+3, r18	; 0x03
    1322:	26 81       	ldd	r18, Z+6	; 0x06
    1324:	37 81       	ldd	r19, Z+7	; 0x07
    1326:	21 50       	subi	r18, 0x01	; 1
    1328:	31 09       	sbc	r19, r1
    132a:	37 83       	std	Z+7, r19	; 0x07
    132c:	26 83       	std	Z+6, r18	; 0x06
    132e:	99 27       	eor	r25, r25
    1330:	08 95       	ret
    1332:	8f ef       	ldi	r24, 0xFF	; 255
    1334:	9f ef       	ldi	r25, 0xFF	; 255
    1336:	08 95       	ret

00001338 <__ultoa_invert>:
    1338:	fa 01       	movw	r30, r20
    133a:	aa 27       	eor	r26, r26
    133c:	28 30       	cpi	r18, 0x08	; 8
    133e:	51 f1       	breq	.+84     	; 0x1394 <__ultoa_invert+0x5c>
    1340:	20 31       	cpi	r18, 0x10	; 16
    1342:	81 f1       	breq	.+96     	; 0x13a4 <__ultoa_invert+0x6c>
    1344:	e8 94       	clt
    1346:	6f 93       	push	r22
    1348:	6e 7f       	andi	r22, 0xFE	; 254
    134a:	6e 5f       	subi	r22, 0xFE	; 254
    134c:	7f 4f       	sbci	r23, 0xFF	; 255
    134e:	8f 4f       	sbci	r24, 0xFF	; 255
    1350:	9f 4f       	sbci	r25, 0xFF	; 255
    1352:	af 4f       	sbci	r26, 0xFF	; 255
    1354:	b1 e0       	ldi	r27, 0x01	; 1
    1356:	3e d0       	rcall	.+124    	; 0x13d4 <__ultoa_invert+0x9c>
    1358:	b4 e0       	ldi	r27, 0x04	; 4
    135a:	3c d0       	rcall	.+120    	; 0x13d4 <__ultoa_invert+0x9c>
    135c:	67 0f       	add	r22, r23
    135e:	78 1f       	adc	r23, r24
    1360:	89 1f       	adc	r24, r25
    1362:	9a 1f       	adc	r25, r26
    1364:	a1 1d       	adc	r26, r1
    1366:	68 0f       	add	r22, r24
    1368:	79 1f       	adc	r23, r25
    136a:	8a 1f       	adc	r24, r26
    136c:	91 1d       	adc	r25, r1
    136e:	a1 1d       	adc	r26, r1
    1370:	6a 0f       	add	r22, r26
    1372:	71 1d       	adc	r23, r1
    1374:	81 1d       	adc	r24, r1
    1376:	91 1d       	adc	r25, r1
    1378:	a1 1d       	adc	r26, r1
    137a:	20 d0       	rcall	.+64     	; 0x13bc <__ultoa_invert+0x84>
    137c:	09 f4       	brne	.+2      	; 0x1380 <__ultoa_invert+0x48>
    137e:	68 94       	set
    1380:	3f 91       	pop	r19
    1382:	2a e0       	ldi	r18, 0x0A	; 10
    1384:	26 9f       	mul	r18, r22
    1386:	11 24       	eor	r1, r1
    1388:	30 19       	sub	r19, r0
    138a:	30 5d       	subi	r19, 0xD0	; 208
    138c:	31 93       	st	Z+, r19
    138e:	de f6       	brtc	.-74     	; 0x1346 <__ultoa_invert+0xe>
    1390:	cf 01       	movw	r24, r30
    1392:	08 95       	ret
    1394:	46 2f       	mov	r20, r22
    1396:	47 70       	andi	r20, 0x07	; 7
    1398:	40 5d       	subi	r20, 0xD0	; 208
    139a:	41 93       	st	Z+, r20
    139c:	b3 e0       	ldi	r27, 0x03	; 3
    139e:	0f d0       	rcall	.+30     	; 0x13be <__ultoa_invert+0x86>
    13a0:	c9 f7       	brne	.-14     	; 0x1394 <__ultoa_invert+0x5c>
    13a2:	f6 cf       	rjmp	.-20     	; 0x1390 <__ultoa_invert+0x58>
    13a4:	46 2f       	mov	r20, r22
    13a6:	4f 70       	andi	r20, 0x0F	; 15
    13a8:	40 5d       	subi	r20, 0xD0	; 208
    13aa:	4a 33       	cpi	r20, 0x3A	; 58
    13ac:	18 f0       	brcs	.+6      	; 0x13b4 <__ultoa_invert+0x7c>
    13ae:	49 5d       	subi	r20, 0xD9	; 217
    13b0:	31 fd       	sbrc	r19, 1
    13b2:	40 52       	subi	r20, 0x20	; 32
    13b4:	41 93       	st	Z+, r20
    13b6:	02 d0       	rcall	.+4      	; 0x13bc <__ultoa_invert+0x84>
    13b8:	a9 f7       	brne	.-22     	; 0x13a4 <__ultoa_invert+0x6c>
    13ba:	ea cf       	rjmp	.-44     	; 0x1390 <__ultoa_invert+0x58>
    13bc:	b4 e0       	ldi	r27, 0x04	; 4
    13be:	a6 95       	lsr	r26
    13c0:	97 95       	ror	r25
    13c2:	87 95       	ror	r24
    13c4:	77 95       	ror	r23
    13c6:	67 95       	ror	r22
    13c8:	ba 95       	dec	r27
    13ca:	c9 f7       	brne	.-14     	; 0x13be <__ultoa_invert+0x86>
    13cc:	00 97       	sbiw	r24, 0x00	; 0
    13ce:	61 05       	cpc	r22, r1
    13d0:	71 05       	cpc	r23, r1
    13d2:	08 95       	ret
    13d4:	9b 01       	movw	r18, r22
    13d6:	ac 01       	movw	r20, r24
    13d8:	0a 2e       	mov	r0, r26
    13da:	06 94       	lsr	r0
    13dc:	57 95       	ror	r21
    13de:	47 95       	ror	r20
    13e0:	37 95       	ror	r19
    13e2:	27 95       	ror	r18
    13e4:	ba 95       	dec	r27
    13e6:	c9 f7       	brne	.-14     	; 0x13da <__ultoa_invert+0xa2>
    13e8:	62 0f       	add	r22, r18
    13ea:	73 1f       	adc	r23, r19
    13ec:	84 1f       	adc	r24, r20
    13ee:	95 1f       	adc	r25, r21
    13f0:	a0 1d       	adc	r26, r0
    13f2:	08 95       	ret

000013f4 <__ctype_isfalse>:
    13f4:	99 27       	eor	r25, r25
    13f6:	88 27       	eor	r24, r24

000013f8 <__ctype_istrue>:
    13f8:	08 95       	ret

000013fa <__prologue_saves__>:
    13fa:	2f 92       	push	r2
    13fc:	3f 92       	push	r3
    13fe:	4f 92       	push	r4
    1400:	5f 92       	push	r5
    1402:	6f 92       	push	r6
    1404:	7f 92       	push	r7
    1406:	8f 92       	push	r8
    1408:	9f 92       	push	r9
    140a:	af 92       	push	r10
    140c:	bf 92       	push	r11
    140e:	cf 92       	push	r12
    1410:	df 92       	push	r13
    1412:	ef 92       	push	r14
    1414:	ff 92       	push	r15
    1416:	0f 93       	push	r16
    1418:	1f 93       	push	r17
    141a:	cf 93       	push	r28
    141c:	df 93       	push	r29
    141e:	cd b7       	in	r28, 0x3d	; 61
    1420:	de b7       	in	r29, 0x3e	; 62
    1422:	ca 1b       	sub	r28, r26
    1424:	db 0b       	sbc	r29, r27
    1426:	0f b6       	in	r0, 0x3f	; 63
    1428:	f8 94       	cli
    142a:	de bf       	out	0x3e, r29	; 62
    142c:	0f be       	out	0x3f, r0	; 63
    142e:	cd bf       	out	0x3d, r28	; 61
    1430:	09 94       	ijmp

00001432 <__epilogue_restores__>:
    1432:	2a 88       	ldd	r2, Y+18	; 0x12
    1434:	39 88       	ldd	r3, Y+17	; 0x11
    1436:	48 88       	ldd	r4, Y+16	; 0x10
    1438:	5f 84       	ldd	r5, Y+15	; 0x0f
    143a:	6e 84       	ldd	r6, Y+14	; 0x0e
    143c:	7d 84       	ldd	r7, Y+13	; 0x0d
    143e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1440:	9b 84       	ldd	r9, Y+11	; 0x0b
    1442:	aa 84       	ldd	r10, Y+10	; 0x0a
    1444:	b9 84       	ldd	r11, Y+9	; 0x09
    1446:	c8 84       	ldd	r12, Y+8	; 0x08
    1448:	df 80       	ldd	r13, Y+7	; 0x07
    144a:	ee 80       	ldd	r14, Y+6	; 0x06
    144c:	fd 80       	ldd	r15, Y+5	; 0x05
    144e:	0c 81       	ldd	r16, Y+4	; 0x04
    1450:	1b 81       	ldd	r17, Y+3	; 0x03
    1452:	aa 81       	ldd	r26, Y+2	; 0x02
    1454:	b9 81       	ldd	r27, Y+1	; 0x01
    1456:	ce 0f       	add	r28, r30
    1458:	d1 1d       	adc	r29, r1
    145a:	0f b6       	in	r0, 0x3f	; 63
    145c:	f8 94       	cli
    145e:	de bf       	out	0x3e, r29	; 62
    1460:	0f be       	out	0x3f, r0	; 63
    1462:	cd bf       	out	0x3d, r28	; 61
    1464:	ed 01       	movw	r28, r26
    1466:	08 95       	ret

00001468 <_exit>:
    1468:	f8 94       	cli

0000146a <__stop_program>:
    146a:	ff cf       	rjmp	.-2      	; 0x146a <__stop_program>
